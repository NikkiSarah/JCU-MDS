[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ID",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ID using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ID",
    "expression": "grel:value.replace(\".0\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ID using expression grel:value.replace(\".0\",\"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "ID",
    "expression": "grel:if(value==\"3\",\"Southern Cross University\",null)",
    "onError": "set-to-blank",
    "newColumnName": "NAME",
    "columnInsertIndex": 1,
    "description": "Create column NAME at index 1 based on column ID using expression grel:if(value==\"3\",\"Southern Cross University\",null)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME using expression value.toUppercase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME using expression value.trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "COURSENAME",
    "expression": "grel:null",
    "onError": "set-to-blank",
    "newColumnName": "COURSE_LEVEL",
    "columnInsertIndex": 3,
    "description": "Create column COURSE_LEVEL at index 3 based on column COURSENAME using expression grel:null"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "COURSENAME",
    "expression": "grel:null",
    "onError": "set-to-blank",
    "newColumnName": "BROAD_FIELD_CODE",
    "columnInsertIndex": 3,
    "description": "Create column BROAD_FIELD_CODE at index 3 based on column COURSENAME using expression grel:null"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "COURSENAME",
    "expression": "grel:null",
    "onError": "set-to-blank",
    "newColumnName": "NARROW_FIELD_CODE",
    "columnInsertIndex": 3,
    "description": "Create column NARROW_FIELD_CODE at index 3 based on column COURSENAME using expression grel:null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "grel:value.replace(\"&AMP;\", \"&\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME using expression grel:value.replace(\"&AMP;\", \"&\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "grel:if(value.startsWith(\"'\"),\"EMPLOYABILITY\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME using expression grel:if(value.startsWith(\"'\"),\"EMPLOYABILITY\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "COURSENAME",
          "columnName": "COURSENAME",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "grel:value.replace(\"AUSTRALIA?????S\",\"AUSTRALIA'S\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME using expression grel:value.replace(\"AUSTRALIA?????S\",\"AUSTRALIA'S\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "COURSENAME",
          "columnName": "COURSENAME",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "grel:value.replace(\"LAW?????S\", \"LAW'S\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME using expression grel:value.replace(\"LAW?????S\", \"LAW'S\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "COURSENAME",
          "columnName": "COURSENAME",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "grel:value.replace(\" ????? \", \" - \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME using expression grel:value.replace(\" ????? \", \" - \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NAME",
    "expression": "grel:if(cells['ID'].value==\"4\",\"Western Sydney University\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NAME using expression grel:if(cells['ID'].value==\"4\",\"Western Sydney University\",value)"
  },
  {
    "op": "core/column-removal",
    "columnName": "NARROW_FIELD_CODE",
    "description": "Remove column NARROW_FIELD_CODE"
  },
  {
    "op": "core/column-removal",
    "columnName": "BROAD_FIELD_CODE",
    "description": "Remove column BROAD_FIELD_CODE"
  },
  {
    "op": "core/column-removal",
    "columnName": "COURSE_LEVEL",
    "description": "Remove column COURSE_LEVEL"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "grel:value.replace(\" :\",\":\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME using expression grel:value.replace(\" :\",\":\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "COURSENAME",
          "columnName": "COURSENAME",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "NAME",
    "expression": "grel:if(cells['ID'].value==\"2\",\"Monash University\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NAME using expression grel:if(cells['ID'].value==\"2\",\"Monash University\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NAME",
    "expression": "grel:if(cells['ID'].value==\"5\",\"Swinburne University\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NAME using expression grel:if(cells['ID'].value==\"5\",\"Swinburne University\",value)"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "value",
    "edits": [
      {
        "from": [
          "SCREEN STUDIES: MOVIES TELEVISION AND OURSELVES",
          "SCREEN STUDIES: MOVIES, TELEVISION, AND OURSELVES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SCREEN STUDIES: MOVIES TELEVISION AND OURSELVES"
      },
      {
        "from": [
          "CLINICAL EDUCATION C (AMBULATORY CARE)",
          "CLINICAL EDUCATION C: AMBULATORY CARE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLINICAL EDUCATION C (AMBULATORY CARE)"
      },
      {
        "from": [
          "PEOPLE PLACE AND SOCIAL DIFFERENCE",
          "PEOPLE, PLACE AND SOCIAL DIFFERENCE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PEOPLE, PLACE AND SOCIAL DIFFERENCE"
      },
      {
        "from": [
          "PSYCHOLOGY A",
          "PSYCHOLOGY A,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PSYCHOLOGY A"
      }
    ],
    "description": "Mass edit cells in column COURSENAME"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "COURSENAME",
          "columnName": "COURSENAME",
          "query": ",$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "COURSENAME",
    "expression": "grel:value.replace(\"FOUNDATIONS OF XRAY IMAGE INTERPRETATION,\",\"FOUNDATIONS OF XRAY IMAGE INTERPRETATION\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME using expression grel:value.replace(\"FOUNDATIONS OF XRAY IMAGE INTERPRETATION,\",\"FOUNDATIONS OF XRAY IMAGE INTERPRETATION\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "RESOURCE_TYPE",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "RESOURCE_TYPE_AMENDED",
    "columnInsertIndex": 6,
    "description": "Create column RESOURCE_TYPE_AMENDED at index 6 based on column RESOURCE_TYPE using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_AMENDED",
    "expression": "grel:if(value.startsWith(\"x\"),\"Other\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_AMENDED using expression grel:if(value.startsWith(\"x\"),\"Other\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_AMENDED",
    "expression": "grel:if(value==\"nan\",\"NotSpecified\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_AMENDED using expression grel:if(value==\"nan\",\"NotSpecified\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "RESOURCE_TYPE_AMENDED",
          "columnName": "RESOURCE_TYPE_AMENDED",
          "query": "Online",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_AMENDED",
    "expression": "grel:if(value.toLowercase().contains(\"online\"),\"OnlineResource\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_AMENDED using expression grel:if(value.toLowercase().contains(\"online\"),\"OnlineResource\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_AMENDED",
    "expression": "grel:value.replace(/\\\"+/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_AMENDED using expression grel:value.replace(/\\\"+/,\"\")"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "RESOURCE_TYPE_AMENDED",
    "newColumnName": "RESOURCE_TYPE_CLEAN",
    "description": "Rename column RESOURCE_TYPE_AMENDED to RESOURCE_TYPE_CLEAN"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "COURSENAME",
    "newColumnName": "COURSENAME_CLEAN",
    "description": "Rename column COURSENAME to COURSENAME_CLEAN"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "grel:value.replace(/\\'/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_CLEAN using expression grel:value.replace(/\\'/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "grel:value.replace(\"Other\",\"Indeterminate\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_CLEAN using expression grel:value.replace(\"Other\",\"Indeterminate\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "grel:if(or(value.contains(\"v.\"),value.contains(\"volume\")),\"Volume\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_CLEAN using expression grel:if(or(value.contains(\"v.\"),value.contains(\"volume\")),\"Volume\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "grel:value.replace(\"Indeterminate\",\"Text - Indeterminate\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_CLEAN using expression grel:value.replace(\"Indeterminate\",\"Text - Indeterminate\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "grel:if(or(value.contains(\"p.\"),value.contains(\"pages\")),\"Text - Indeterminate\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_CLEAN using expression grel:if(or(value.contains(\"p.\"),value.contains(\"pages\")),\"Text - Indeterminate\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "grel:if(value.contains(\"DVD\"),\"DVD\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_CLEAN using expression grel:if(value.contains(\"DVD\"),\"DVD\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "grel:if(value.contains(\"videodisc\"),\"VideoDisc\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_CLEAN using expression grel:if(value.contains(\"videodisc\"),\"VideoDisc\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RESOURCE_TYPE_CLEAN",
          "expression": "value",
          "columnName": "RESOURCE_TYPE_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DVD",
                "l": "DVD"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "grel:value.replace(\"DVD\",\"VideoDisc - DVD\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_CLEAN using expression grel:value.replace(\"DVD\",\"VideoDisc - DVD\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RESOURCE_TYPE_CLEAN",
          "expression": "value",
          "columnName": "RESOURCE_TYPE_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "1 electronic text.",
                "l": "1 electronic text."
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "value",
    "edits": [
      {
        "from": [
          "1 electronic text."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Text - Electronic"
      }
    ],
    "description": "Mass edit cells in column RESOURCE_TYPE_CLEAN"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RESOURCE_TYPE_CLEAN",
          "expression": "value",
          "columnName": "RESOURCE_TYPE_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "v, 14, 657, 14, 18 : illustrations ; 28 cm.",
                "l": "v, 14, 657, 14, 18 : illustrations ; 28 cm."
              }
            },
            {
              "v": {
                "v": "ix, 470 p ; 20 cm..",
                "l": "ix, 470 p ; 20 cm.."
              }
            },
            {
              "v": {
                "v": "iv, 168 leaves : color illustrations ; 28 cm.",
                "l": "iv, 168 leaves : color illustrations ; 28 cm."
              }
            },
            {
              "v": {
                "v": ": 23 cm..",
                "l": ": 23 cm.."
              }
            },
            {
              "v": {
                "v": "viii, 284 s. : ill. ; 25 cm..",
                "l": "viii, 284 s. : ill. ; 25 cm.."
              }
            },
            {
              "v": {
                "v": "XXV, 212 Seiten : Illustrationen, Diagramme..",
                "l": "XXV, 212 Seiten : Illustrationen, Diagramme.."
              }
            },
            {
              "v": {
                "v": "vii, 181 leaves ; 31 cm..",
                "l": "vii, 181 leaves ; 31 cm.."
              }
            },
            {
              "v": {
                "v": "2 parts : illustrations (some color) ; 29 cm.",
                "l": "2 parts : illustrations (some color) ; 29 cm."
              }
            },
            {
              "v": {
                "v": "XVII, 1262 s. ill..",
                "l": "XVII, 1262 s. ill.."
              }
            },
            {
              "v": {
                "v": "vi, 561 : illustrations ; 28 cm..",
                "l": "vi, 561 : illustrations ; 28 cm.."
              }
            },
            {
              "v": {
                "v": "lxv, 161 s. ; 20 cm.",
                "l": "lxv, 161 s. ; 20 cm."
              }
            },
            {
              "v": {
                "v": "XII, 173 s. ill..",
                "l": "XII, 173 s. ill.."
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "grel:value.replace(value,\"Text - Indeterminate\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_CLEAN using expression grel:value.replace(value,\"Text - Indeterminate\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ISBN10S",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ISBN13S",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ISSNS",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISSNS using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EISSNS",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EISSNS using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DOI",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DOI using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EDITION",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EDITORS",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER using expression value.toString()"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "DATES",
    "newColumnName": "PUB_DATE",
    "description": "Rename column DATES to PUB_DATE"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PAGE_END",
    "newColumnName": "PAGE_START",
    "description": "Rename column PAGE_END to PAGE_START"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "AUTHORS",
    "newColumnName": "PAGE_END",
    "description": "Rename column AUTHORS to PAGE_END"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Column 19",
    "newColumnName": "AUTHORS",
    "description": "Rename column Column 19 to AUTHORS"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME",
          "columnName": "VOLUME",
          "query": "\\bnan\\b",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME",
    "expression": "value",
    "edits": [
      {
        "from": [
          "nan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Null"
      }
    ],
    "description": "Mass edit cells in column VOLUME"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME",
          "columnName": "VOLUME",
          "query": "'$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME",
    "expression": "value.replace(/^'/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME using expression value.replace(/^'/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME",
          "columnName": "VOLUME",
          "query": "'$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME",
    "expression": "value.replace(/'$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME using expression value.replace(/'$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "VOLUME",
    "expression": "value.replace(/\\bvolume\\b/,\"Volume\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME using expression value.replace(/\\bvolume\\b/,\"Volume\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "VOLUME",
    "expression": "value",
    "edits": [
      {
        "from": [
          "vol.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Volume 5"
      }
    ],
    "description": "Mass edit cells in column VOLUME"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "VOLUME",
    "expression": "value.replace(/^vol./,\"Vol.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME using expression value.replace(/^vol./,\"Vol.\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_CLEAN",
          "columnName": "VOLUME_CLEAN",
          "query": "^p.",
          "mode": "regex",
          "caseSensitive": true,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "VOLUME",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "VOLUME_CLEAN",
    "columnInsertIndex": 18,
    "description": "Create column VOLUME_CLEAN at index 18 based on column VOLUME using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_CLEAN",
          "columnName": "VOLUME_CLEAN",
          "query": "^p.",
          "mode": "regex",
          "caseSensitive": true,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "grel:if(or(cells['VOLUME_CLEAN'].value.startsWith(\"pp.\"),cells['VOLUME_CLEAN'].value.startsWith(\"p.\")),cells['VOLUME_CLEAN'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression grel:if(or(cells['VOLUME_CLEAN'].value.startsWith(\"pp.\"),cells['VOLUME_CLEAN'].value.startsWith(\"p.\")),cells['VOLUME_CLEAN'].value,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_CLEAN",
          "columnName": "VOLUME_CLEAN",
          "query": "^p.",
          "mode": "regex",
          "caseSensitive": true,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "grel:if(or(value.startsWith(\"pp.\"),value.startsWith(\"p.\")),Null,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression grel:if(or(value.startsWith(\"pp.\"),value.startsWith(\"p.\")),Null,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "grel:if(cells['VOLUME_CLEAN'].value.contains(\"pp.\"),cells['VOLUME_CLEAN'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression grel:if(cells['VOLUME_CLEAN'].value.contains(\"pp.\"),cells['VOLUME_CLEAN'].value,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_CLEAN",
          "columnName": "VOLUME_CLEAN",
          "query": "pp.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "grel:if(value.contains(\"pp.\"),Null,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression grel:if(value.contains(\"pp.\"),Null,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "VOLUME_CLEAN",
          "expression": "value",
          "columnName": "VOLUME_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "[CRC",
                "l": "[CRC"
              }
            },
            {
              "v": {
                "v": "[Oxford handbooks]",
                "l": "[Oxford handbooks]"
              }
            },
            {
              "v": {
                "v": "[Seminar papers] (Law Society of Western Australia)",
                "l": "[Seminar papers] (Law Society of Western Australia)"
              }
            },
            {
              "v": {
                "v": "(59 Vict. No. 41)",
                "l": "(59 Vict. No. 41)"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "grel:value.replace(/^\\[/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression grel:value.replace(/^\\[/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_CLEAN",
          "columnName": "VOLUME_CLEAN",
          "query": "\\s\\(\\d+",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "grel:value.replace(/\\s\\(/,\"(\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression grel:value.replace(/\\s\\(/,\"(\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "VOLUME_CLEAN",
          "expression": "value",
          "columnName": "VOLUME_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "20 (November)",
                "l": "20 (November)"
              }
            },
            {
              "v": {
                "v": "4 (unnumbered pages)",
                "l": "4 (unnumbered pages)"
              }
            },
            {
              "v": {
                "v": "2 (Apr-Jun)",
                "l": "2 (Apr-Jun)"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "VOLUME_CLEAN",
          "columnName": "VOLUME_CLEAN",
          "query": " (",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "grel:value.replace(\" (\",\"(\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression grel:value.replace(\" (\",\"(\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_CLEAN",
          "columnName": "VOLUME_CLEAN",
          "query": " :",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "grel:value.replace(\" :\",\":\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression grel:value.replace(\" :\",\":\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME",
          "columnName": "VOLUME",
          "query": "=",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "grel:value.replace(\" =\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression grel:value.replace(\" =\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_CLEAN",
          "columnName": "VOLUME_CLEAN",
          "query": "^no\\.",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "grel:value.replace(/^no\\./,\"No. \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression grel:value.replace(/^no\\./,\"No. \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_CLEAN",
          "columnName": "VOLUME_CLEAN",
          "query": "^no\\.",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "VOLUME_CLEAN",
          "expression": "value",
          "columnName": "VOLUME_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Null",
                "l": "Null"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "value.replace(/\\bNull\\b/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression value.replace(/\\bNull\\b/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "VOLUME_CLEAN",
          "expression": "value",
          "columnName": "VOLUME_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Sat Feb 01 00:00:00 AEDT 2020",
                "l": "Sat Feb 01 00:00:00 AEDT 2020"
              }
            },
            {
              "v": {
                "v": "Sat Mar 01 00:00:00 AEDT 1997",
                "l": "Sat Mar 01 00:00:00 AEDT 1997"
              }
            },
            {
              "v": {
                "v": "Sat Dec 05 00:00:00 AEDT 2020",
                "l": "Sat Dec 05 00:00:00 AEDT 2020"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "value.replace(/^Sat/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression value.replace(/^Sat/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "VOLUME_CLEAN",
          "expression": "value",
          "columnName": "VOLUME_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "September 15th, p. 11",
                "l": "September 15th, p. 11"
              }
            },
            {
              "v": {
                "v": "September 25th, p. 12",
                "l": "September 25th, p. 12"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "grel:if(cells['VOLUME_CLEAN'].value.startsWith(\"September \"),cells['VOLUME_CLEAN'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression grel:if(cells['VOLUME_CLEAN'].value.startsWith(\"September \"),cells['VOLUME_CLEAN'].value,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "VOLUME_CLEAN",
          "expression": "value",
          "columnName": "VOLUME_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "September 15th, p. 11",
                "l": "September 15th, p. 11"
              }
            },
            {
              "v": {
                "v": "September 25th, p. 12",
                "l": "September 25th, p. 12"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "value.replace(/^September /,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression value.replace(/^September /,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "VOLUME_CLEAN",
          "expression": "value",
          "columnName": "VOLUME_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Tue Oct 13 00:00:00 AEDT 2020",
                "l": "Tue Oct 13 00:00:00 AEDT 2020"
              }
            },
            {
              "v": {
                "v": "Fri Jun 26 00:00:00 AEST 2009",
                "l": "Fri Jun 26 00:00:00 AEST 2009"
              }
            },
            {
              "v": {
                "v": " Feb 01 00:00:00 AEDT 2020",
                "l": " Feb 01 00:00:00 AEDT 2020"
              }
            },
            {
              "v": {
                "v": " Mar 01 00:00:00 AEDT 1997",
                "l": " Mar 01 00:00:00 AEDT 1997"
              }
            },
            {
              "v": {
                "v": "Thu Apr 01 00:00:00 AEDT 2027",
                "l": "Thu Apr 01 00:00:00 AEDT 2027"
              }
            },
            {
              "v": {
                "v": " Dec 05 00:00:00 AEDT 2020",
                "l": " Dec 05 00:00:00 AEDT 2020"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "grel:value.replace(value,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression grel:value.replace(value,\"\")"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "VOLUME",
    "newColumnName": "VOLUME_OR_SERIES",
    "description": "Rename column VOLUME to VOLUME_OR_SERIES"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "VOLUME_CLEAN",
    "newColumnName": "VOLUME_OR_SERIES_CLEAN",
    "description": "Rename column VOLUME_CLEAN to VOLUME_OR_SERIES_CLEAN"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES_CLEAN",
          "columnName": "VOLUME_OR_SERIES_CLEAN",
          "query": "p.",
          "mode": "text",
          "caseSensitive": true,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "grel:if(value.contains(\"September\"),value,cells['VOLUME_OR_SERIES'].value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression grel:if(value.contains(\"September\"),value,cells['VOLUME_OR_SERIES'].value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES_CLEAN",
          "columnName": "VOLUME_OR_SERIES_CLEAN",
          "query": "p.",
          "mode": "text",
          "caseSensitive": true,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "grel:if(cells['VOLUME_OR_SERIES'].value.startsWith(\"September\"),cells['VOLUME_OR_SERIES'].value,Null)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression grel:if(cells['VOLUME_OR_SERIES'].value.startsWith(\"September\"),cells['VOLUME_OR_SERIES'].value,Null)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES_CLEAN",
          "columnName": "VOLUME_OR_SERIES_CLEAN",
          "query": "p.",
          "mode": "text",
          "caseSensitive": true,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "grel:value.replace(/,\\sp\\.\\s\\d+/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression grel:value.replace(/,\\sp\\.\\s\\d+/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "value.replace(/\\bSage\\b/,\"SAGE\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression value.replace(/\\bSage\\b/,\"SAGE\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES_CLEAN",
          "columnName": "VOLUME_OR_SERIES_CLEAN",
          "query": "v.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "value.replace(\"v.\",\"Volume \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression value.replace(\"v.\",\"Volume \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "^\\.",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "value.replace(/^\\./,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression value.replace(/^\\./,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_START",
          "expression": "value",
          "columnName": "PAGE_START",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "no. 2, 2010, pp. 233-284",
                "l": "no. 2, 2010, pp. 233-284"
              }
            },
            {
              "v": {
                "v": "June, pp. 4-5",
                "l": "June, pp. 4-5"
              }
            },
            {
              "v": {
                "v": "no. 218, pp. 107-117",
                "l": "no. 218, pp. 107-117"
              }
            },
            {
              "v": {
                "v": "26 June-29 June, pp. 1-10",
                "l": "26 June-29 June, pp. 1-10"
              }
            },
            {
              "v": {
                "v": "no. 65, Feb. 2001, pp. 1-74",
                "l": "no. 65, Feb. 2001, pp. 1-74"
              }
            },
            {
              "v": {
                "v": "no. 2, 1996, pp. 232-244",
                "l": "no. 2, 1996, pp. 232-244"
              }
            },
            {
              "v": {
                "v": "no. 2, 2002, pp. 467-484",
                "l": "no. 2, 2002, pp. 467-484"
              }
            },
            {
              "v": {
                "v": "November 15th, pp. 73-74",
                "l": "November 15th, pp. 73-74"
              }
            },
            {
              "v": {
                "v": "October 15-21, pp. 8",
                "l": "October 15-21, pp. 8"
              }
            },
            {
              "v": {
                "v": "no. 416, pp. 16-20",
                "l": "no. 416, pp. 16-20"
              }
            },
            {
              "v": {
                "v": "no. 35, pp. i-xvi",
                "l": "no. 35, pp. i-xvi"
              }
            },
            {
              "v": {
                "v": "p. 305, 309, 311, 322, 327, 342, 343, 353, 355, 356, 363, 383, 385, 388, 400, 403, 407, 409, 410, 446, 452, 464-465, 469, 471, 482-483, 508-509, 511, 513, 520-522, 535-536, 544, 560, 562-563, 594-597, 601-602, 604, 815, 818, 823",
                "l": "p. 305, 309, 311, 322, 327, 342, 343, 353, 355, 356, 363, 383, 385, 388, 400, 403, 407, 409, 410, 446, 452, 464-465, 469, 471, 482-483, 508-509, 511, 513, 520-522, 535-536, 544, 560, 562-563, 594-597, 601-602, 604, 815, 818, 823"
              }
            },
            {
              "v": {
                "v": "no. 42, pp. 49-66",
                "l": "no. 42, pp. 49-66"
              }
            },
            {
              "v": {
                "v": "no. 3, 2002, pp. 356-369",
                "l": "no. 3, 2002, pp. 356-369"
              }
            },
            {
              "v": {
                "v": "no. Spring, pp. 4-9",
                "l": "no. Spring, pp. 4-9"
              }
            },
            {
              "v": {
                "v": "Unit 8, pp. 96-129",
                "l": "Unit 8, pp. 96-129"
              }
            },
            {
              "v": {
                "v": "no. Winter, pp. 46-50",
                "l": "no. Winter, pp. 46-50"
              }
            },
            {
              "v": {
                "v": "Section 3, pp. 109-128",
                "l": "Section 3, pp. 109-128"
              }
            },
            {
              "v": {
                "v": "April 17th, pp. 1-21",
                "l": "April 17th, pp. 1-21"
              }
            },
            {
              "v": {
                "v": "3rd August, pp. 8, 10-12",
                "l": "3rd August, pp. 8, 10-12"
              }
            },
            {
              "v": {
                "v": "M14-17",
                "l": "M14-17"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "-",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "grel:if(value!=\"\",cells['VOLUME_OR_SERIES'].value,Null)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression grel:if(value!=\"\",cells['VOLUME_OR_SERIES'].value,Null)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_START",
          "expression": "value",
          "columnName": "PAGE_START",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "no. 2, 2010, pp. 233-284",
                "l": "no. 2, 2010, pp. 233-284"
              }
            },
            {
              "v": {
                "v": "June, pp. 4-5",
                "l": "June, pp. 4-5"
              }
            },
            {
              "v": {
                "v": "no. 218, pp. 107-117",
                "l": "no. 218, pp. 107-117"
              }
            },
            {
              "v": {
                "v": "26 June-29 June, pp. 1-10",
                "l": "26 June-29 June, pp. 1-10"
              }
            },
            {
              "v": {
                "v": "no. 65, Feb. 2001, pp. 1-74",
                "l": "no. 65, Feb. 2001, pp. 1-74"
              }
            },
            {
              "v": {
                "v": "no. 2, 1996, pp. 232-244",
                "l": "no. 2, 1996, pp. 232-244"
              }
            },
            {
              "v": {
                "v": "no. 2, 2002, pp. 467-484",
                "l": "no. 2, 2002, pp. 467-484"
              }
            },
            {
              "v": {
                "v": "November 15th, pp. 73-74",
                "l": "November 15th, pp. 73-74"
              }
            },
            {
              "v": {
                "v": "October 15-21, pp. 8",
                "l": "October 15-21, pp. 8"
              }
            },
            {
              "v": {
                "v": "no. 416, pp. 16-20",
                "l": "no. 416, pp. 16-20"
              }
            },
            {
              "v": {
                "v": "no. 35, pp. i-xvi",
                "l": "no. 35, pp. i-xvi"
              }
            },
            {
              "v": {
                "v": "p. 305, 309, 311, 322, 327, 342, 343, 353, 355, 356, 363, 383, 385, 388, 400, 403, 407, 409, 410, 446, 452, 464-465, 469, 471, 482-483, 508-509, 511, 513, 520-522, 535-536, 544, 560, 562-563, 594-597, 601-602, 604, 815, 818, 823",
                "l": "p. 305, 309, 311, 322, 327, 342, 343, 353, 355, 356, 363, 383, 385, 388, 400, 403, 407, 409, 410, 446, 452, 464-465, 469, 471, 482-483, 508-509, 511, 513, 520-522, 535-536, 544, 560, 562-563, 594-597, 601-602, 604, 815, 818, 823"
              }
            },
            {
              "v": {
                "v": "no. 42, pp. 49-66",
                "l": "no. 42, pp. 49-66"
              }
            },
            {
              "v": {
                "v": "no. 3, 2002, pp. 356-369",
                "l": "no. 3, 2002, pp. 356-369"
              }
            },
            {
              "v": {
                "v": "no. Spring, pp. 4-9",
                "l": "no. Spring, pp. 4-9"
              }
            },
            {
              "v": {
                "v": "Unit 8, pp. 96-129",
                "l": "Unit 8, pp. 96-129"
              }
            },
            {
              "v": {
                "v": "no. Winter, pp. 46-50",
                "l": "no. Winter, pp. 46-50"
              }
            },
            {
              "v": {
                "v": "Section 3, pp. 109-128",
                "l": "Section 3, pp. 109-128"
              }
            },
            {
              "v": {
                "v": "April 17th, pp. 1-21",
                "l": "April 17th, pp. 1-21"
              }
            },
            {
              "v": {
                "v": "3rd August, pp. 8, 10-12",
                "l": "3rd August, pp. 8, 10-12"
              }
            },
            {
              "v": {
                "v": "M14-17",
                "l": "M14-17"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "-",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "grel:value.replace(/,\\s\\w+\\.\\s\\d+-\\d+/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression grel:value.replace(/,\\s\\w+\\.\\s\\d+-\\d+/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_START",
          "expression": "value",
          "columnName": "PAGE_START",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "no. 2, 2010, pp. 233-284",
                "l": "no. 2, 2010, pp. 233-284"
              }
            },
            {
              "v": {
                "v": "June, pp. 4-5",
                "l": "June, pp. 4-5"
              }
            },
            {
              "v": {
                "v": "no. 218, pp. 107-117",
                "l": "no. 218, pp. 107-117"
              }
            },
            {
              "v": {
                "v": "26 June-29 June, pp. 1-10",
                "l": "26 June-29 June, pp. 1-10"
              }
            },
            {
              "v": {
                "v": "no. 65, Feb. 2001, pp. 1-74",
                "l": "no. 65, Feb. 2001, pp. 1-74"
              }
            },
            {
              "v": {
                "v": "no. 2, 1996, pp. 232-244",
                "l": "no. 2, 1996, pp. 232-244"
              }
            },
            {
              "v": {
                "v": "no. 2, 2002, pp. 467-484",
                "l": "no. 2, 2002, pp. 467-484"
              }
            },
            {
              "v": {
                "v": "November 15th, pp. 73-74",
                "l": "November 15th, pp. 73-74"
              }
            },
            {
              "v": {
                "v": "October 15-21, pp. 8",
                "l": "October 15-21, pp. 8"
              }
            },
            {
              "v": {
                "v": "no. 416, pp. 16-20",
                "l": "no. 416, pp. 16-20"
              }
            },
            {
              "v": {
                "v": "no. 35, pp. i-xvi",
                "l": "no. 35, pp. i-xvi"
              }
            },
            {
              "v": {
                "v": "p. 305, 309, 311, 322, 327, 342, 343, 353, 355, 356, 363, 383, 385, 388, 400, 403, 407, 409, 410, 446, 452, 464-465, 469, 471, 482-483, 508-509, 511, 513, 520-522, 535-536, 544, 560, 562-563, 594-597, 601-602, 604, 815, 818, 823",
                "l": "p. 305, 309, 311, 322, 327, 342, 343, 353, 355, 356, 363, 383, 385, 388, 400, 403, 407, 409, 410, 446, 452, 464-465, 469, 471, 482-483, 508-509, 511, 513, 520-522, 535-536, 544, 560, 562-563, 594-597, 601-602, 604, 815, 818, 823"
              }
            },
            {
              "v": {
                "v": "no. 42, pp. 49-66",
                "l": "no. 42, pp. 49-66"
              }
            },
            {
              "v": {
                "v": "no. 3, 2002, pp. 356-369",
                "l": "no. 3, 2002, pp. 356-369"
              }
            },
            {
              "v": {
                "v": "no. Spring, pp. 4-9",
                "l": "no. Spring, pp. 4-9"
              }
            },
            {
              "v": {
                "v": "Unit 8, pp. 96-129",
                "l": "Unit 8, pp. 96-129"
              }
            },
            {
              "v": {
                "v": "no. Winter, pp. 46-50",
                "l": "no. Winter, pp. 46-50"
              }
            },
            {
              "v": {
                "v": "Section 3, pp. 109-128",
                "l": "Section 3, pp. 109-128"
              }
            },
            {
              "v": {
                "v": "April 17th, pp. 1-21",
                "l": "April 17th, pp. 1-21"
              }
            },
            {
              "v": {
                "v": "3rd August, pp. 8, 10-12",
                "l": "3rd August, pp. 8, 10-12"
              }
            },
            {
              "v": {
                "v": "M14-17",
                "l": "M14-17"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "-",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "grel:value.replace(\"no.\",\"No.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression grel:value.replace(\"no.\",\"No.\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_START",
          "expression": "value",
          "columnName": "PAGE_START",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "no. 2, 2010, pp. 233-284",
                "l": "no. 2, 2010, pp. 233-284"
              }
            },
            {
              "v": {
                "v": "June, pp. 4-5",
                "l": "June, pp. 4-5"
              }
            },
            {
              "v": {
                "v": "no. 218, pp. 107-117",
                "l": "no. 218, pp. 107-117"
              }
            },
            {
              "v": {
                "v": "26 June-29 June, pp. 1-10",
                "l": "26 June-29 June, pp. 1-10"
              }
            },
            {
              "v": {
                "v": "no. 65, Feb. 2001, pp. 1-74",
                "l": "no. 65, Feb. 2001, pp. 1-74"
              }
            },
            {
              "v": {
                "v": "no. 2, 1996, pp. 232-244",
                "l": "no. 2, 1996, pp. 232-244"
              }
            },
            {
              "v": {
                "v": "no. 2, 2002, pp. 467-484",
                "l": "no. 2, 2002, pp. 467-484"
              }
            },
            {
              "v": {
                "v": "November 15th, pp. 73-74",
                "l": "November 15th, pp. 73-74"
              }
            },
            {
              "v": {
                "v": "October 15-21, pp. 8",
                "l": "October 15-21, pp. 8"
              }
            },
            {
              "v": {
                "v": "no. 416, pp. 16-20",
                "l": "no. 416, pp. 16-20"
              }
            },
            {
              "v": {
                "v": "no. 35, pp. i-xvi",
                "l": "no. 35, pp. i-xvi"
              }
            },
            {
              "v": {
                "v": "no. 42, pp. 49-66",
                "l": "no. 42, pp. 49-66"
              }
            },
            {
              "v": {
                "v": "no. 3, 2002, pp. 356-369",
                "l": "no. 3, 2002, pp. 356-369"
              }
            },
            {
              "v": {
                "v": "no. Spring, pp. 4-9",
                "l": "no. Spring, pp. 4-9"
              }
            },
            {
              "v": {
                "v": "Unit 8, pp. 96-129",
                "l": "Unit 8, pp. 96-129"
              }
            },
            {
              "v": {
                "v": "no. Winter, pp. 46-50",
                "l": "no. Winter, pp. 46-50"
              }
            },
            {
              "v": {
                "v": "Section 3, pp. 109-128",
                "l": "Section 3, pp. 109-128"
              }
            },
            {
              "v": {
                "v": "April 17th, pp. 1-21",
                "l": "April 17th, pp. 1-21"
              }
            },
            {
              "v": {
                "v": "3rd August, pp. 8, 10-12",
                "l": "3rd August, pp. 8, 10-12"
              }
            },
            {
              "v": {
                "v": "p. 305, 309, 311, 322, 327, 342, 343, 353, 355, 356, 363, 383, 385, 388, 400, 403, 407, 409, 410, 446, 452, 464-465, 469, 471, 482-483, 508-509, 511, 513, 520-522, 535-536, 544, 560, 562-563, 594-597, 601-602, 604, 815, 818, 823",
                "l": "p. 305, 309, 311, 322, 327, 342, 343, 353, 355, 356, 363, 383, 385, 388, 400, 403, 407, 409, 410, 446, 452, 464-465, 469, 471, 482-483, 508-509, 511, 513, 520-522, 535-536, 544, 560, 562-563, 594-597, 601-602, 604, 815, 818, 823"
              }
            },
            {
              "v": {
                "v": "M14-17",
                "l": "M14-17"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "-",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "grel:value.replace(/.+?(?=pp)/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression grel:value.replace(/.+?(?=pp)/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "vol.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "grel:value.replace(/.+?(?=pp)/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression grel:value.replace(/.+?(?=pp)/,\"\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "p.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Appendix, pp. 139-158"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "appendix, pp. 139-158"
      }
    ],
    "description": "Mass edit cells in column PAGE_START"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "p.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "value",
    "edits": [
      {
        "from": [
          "September 15th, p. 11"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pp. 11"
      }
    ],
    "description": "Mass edit cells in column PAGE_START"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "p.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "value",
    "edits": [
      {
        "from": [
          "September 25th, p. 12"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "pp. 12"
      }
    ],
    "description": "Mass edit cells in column PAGE_START"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_START",
          "expression": "value",
          "columnName": "PAGE_START",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "pp.47-51",
                "l": "pp.47-51"
              }
            },
            {
              "v": {
                "v": "pp. 12",
                "l": "pp. 12"
              }
            },
            {
              "v": {
                "v": "pp.35-45",
                "l": "pp.35-45"
              }
            },
            {
              "v": {
                "v": "pp.504-505",
                "l": "pp.504-505"
              }
            },
            {
              "v": {
                "v": "pp.454-465",
                "l": "pp.454-465"
              }
            },
            {
              "v": {
                "v": "pp.369-397",
                "l": "pp.369-397"
              }
            },
            {
              "v": {
                "v": "pp.28-83",
                "l": "pp.28-83"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "pp.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "value.replace(\".\",\". \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression value.replace(\".\",\". \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_START",
          "expression": "value",
          "columnName": "PAGE_START",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "pp. p-69-p-73",
                "l": "pp. p-69-p-73"
              }
            },
            {
              "v": {
                "v": "pp. p-11-p-14",
                "l": "pp. p-11-p-14"
              }
            },
            {
              "v": {
                "v": "pp. p-19-p-27",
                "l": "pp. p-19-p-27"
              }
            },
            {
              "v": {
                "v": "pp. p-61-p-65",
                "l": "pp. p-61-p-65"
              }
            },
            {
              "v": {
                "v": "pp. p-52-p-56",
                "l": "pp. p-52-p-56"
              }
            },
            {
              "v": {
                "v": "pp. p-48-p-52",
                "l": "pp. p-48-p-52"
              }
            },
            {
              "v": {
                "v": "pp. p-65-p-69",
                "l": "pp. p-65-p-69"
              }
            },
            {
              "v": {
                "v": "pp. p-56-p-58",
                "l": "pp. p-56-p-58"
              }
            },
            {
              "v": {
                "v": "pp. p-58-p-61",
                "l": "pp. p-58-p-61"
              }
            },
            {
              "v": {
                "v": "pp. p-3-p-10",
                "l": "pp. p-3-p-10"
              }
            },
            {
              "v": {
                "v": "pp.47-51",
                "l": "pp.47-51"
              }
            },
            {
              "v": {
                "v": "pp. 12",
                "l": "pp. 12"
              }
            },
            {
              "v": {
                "v": "pp.35-45",
                "l": "pp.35-45"
              }
            },
            {
              "v": {
                "v": "pp.504-505",
                "l": "pp.504-505"
              }
            },
            {
              "v": {
                "v": "pp.454-465",
                "l": "pp.454-465"
              }
            },
            {
              "v": {
                "v": "pp.369-397",
                "l": "pp.369-397"
              }
            },
            {
              "v": {
                "v": "pp.28-83",
                "l": "pp.28-83"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": "pp.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "value.replace(\"p-\",\"p\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression value.replace(\"p-\",\"p\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES_CLEAN",
          "columnName": "VOLUME_OR_SERIES_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES",
          "columnName": "VOLUME_OR_SERIES",
          "query": "Volume",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "value.replace(\"Volume\",\"Vol.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression value.replace(\"Volume\",\"Vol.\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES_CLEAN",
          "columnName": "VOLUME_OR_SERIES_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES",
          "columnName": "VOLUME_OR_SERIES",
          "query": "Vol",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "value.replace(\"Volume\",\"Vol.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression value.replace(\"Volume\",\"Vol.\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "VOLUME_OR_SERIES_CLEAN",
          "expression": "value",
          "columnName": "VOLUME_OR_SERIES_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES_CLEAN",
          "columnName": "VOLUME_OR_SERIES_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES",
          "columnName": "VOLUME_OR_SERIES",
          "query": "Vol",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "grel:if(value==null,cells['VOLUME_OR_SERIES'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression grel:if(value==null,cells['VOLUME_OR_SERIES'].value,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "VOLUME_OR_SERIES_CLEAN",
          "columnName": "VOLUME_OR_SERIES_CLEAN",
          "query": "Vol.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "grel:value.replace(/, p.+/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression grel:value.replace(/, p.+/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "VOLUME_OR_SERIES_CLEAN",
    "expression": "value.replace(\"Volume\",\"Vol.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_OR_SERIES_CLEAN using expression value.replace(\"Volume\",\"Vol.\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "AEST",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_END",
    "expression": "grel:if(value.contains(\"AEST\"),null,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_END using expression grel:if(value.contains(\"AEST\"),null,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_END",
          "expression": "value",
          "columnName": "PAGE_END",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 147470491100900,
                "l": "147470491100900"
              }
            },
            {
              "v": {
                "v": 20150364,
                "l": "20150364"
              }
            },
            {
              "v": {
                "v": 146394911878190,
                "l": "146394911878190"
              }
            },
            {
              "v": {
                "v": 147737081668612,
                "l": "147737081668612"
              }
            },
            {
              "v": {
                "v": 205630511774635,
                "l": "205630511774635"
              }
            },
            {
              "v": {
                "v": 205395171878408,
                "l": "205395171878408"
              }
            },
            {
              "v": {
                "v": 205395171665215,
                "l": "205395171665215"
              }
            },
            {
              "v": {
                "v": 154134461769277,
                "l": "154134461769277"
              }
            },
            {
              "v": {
                "v": 494411772774,
                "l": "494411772774"
              }
            },
            {
              "v": {
                "v": 74024,
                "l": "74024"
              }
            },
            {
              "v": {
                "v": 29065,
                "l": "29065"
              }
            },
            {
              "v": {
                "v": 146144481882106,
                "l": "146144481882106"
              }
            },
            {
              "v": {
                "v": 20140251,
                "l": "20140251"
              }
            },
            {
              "v": {
                "v": 174276651877667,
                "l": "174276651877667"
              }
            },
            {
              "v": {
                "v": "0734371X1876724",
                "l": "0734371X1876724"
              }
            },
            {
              "v": {
                "v": 205630511664134,
                "l": "205630511664134"
              }
            },
            {
              "v": {
                "v": 1253293,
                "l": "1253293"
              }
            },
            {
              "v": {
                "v": 146144481881568,
                "l": "146144481881568"
              }
            },
            {
              "v": {
                "v": 205630511560417,
                "l": "205630511560417"
              }
            },
            {
              "v": {
                "v": 1259855,
                "l": "1259855"
              }
            },
            {
              "v": {
                "v": 20142124,
                "l": "20142124"
              }
            },
            {
              "v": {
                "v": 215824401668681,
                "l": "215824401668681"
              }
            },
            {
              "v": {
                "v": 43827,
                "l": "43827"
              }
            },
            {
              "v": {
                "v": 20130569,
                "l": "20130569"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_END",
          "expression": "value",
          "columnName": "PAGE_END",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 147470491100900,
                "l": "147470491100900"
              }
            },
            {
              "v": {
                "v": 20150364,
                "l": "20150364"
              }
            },
            {
              "v": {
                "v": 146394911878190,
                "l": "146394911878190"
              }
            },
            {
              "v": {
                "v": 147737081668612,
                "l": "147737081668612"
              }
            },
            {
              "v": {
                "v": 205630511774635,
                "l": "205630511774635"
              }
            },
            {
              "v": {
                "v": 205395171878408,
                "l": "205395171878408"
              }
            },
            {
              "v": {
                "v": 205395171665215,
                "l": "205395171665215"
              }
            },
            {
              "v": {
                "v": 154134461769277,
                "l": "154134461769277"
              }
            },
            {
              "v": {
                "v": 494411772774,
                "l": "494411772774"
              }
            },
            {
              "v": {
                "v": 74024,
                "l": "74024"
              }
            },
            {
              "v": {
                "v": 29065,
                "l": "29065"
              }
            },
            {
              "v": {
                "v": 146144481882106,
                "l": "146144481882106"
              }
            },
            {
              "v": {
                "v": 20140251,
                "l": "20140251"
              }
            },
            {
              "v": {
                "v": 174276651877667,
                "l": "174276651877667"
              }
            },
            {
              "v": {
                "v": "0734371X1876724",
                "l": "0734371X1876724"
              }
            },
            {
              "v": {
                "v": 205630511664134,
                "l": "205630511664134"
              }
            },
            {
              "v": {
                "v": 1253293,
                "l": "1253293"
              }
            },
            {
              "v": {
                "v": 146144481881568,
                "l": "146144481881568"
              }
            },
            {
              "v": {
                "v": 205630511560417,
                "l": "205630511560417"
              }
            },
            {
              "v": {
                "v": 1259855,
                "l": "1259855"
              }
            },
            {
              "v": {
                "v": 20142124,
                "l": "20142124"
              }
            },
            {
              "v": {
                "v": 215824401668681,
                "l": "215824401668681"
              }
            },
            {
              "v": {
                "v": 43827,
                "l": "43827"
              }
            },
            {
              "v": {
                "v": 20130569,
                "l": "20130569"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_END",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_END using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_END",
          "expression": "value",
          "columnName": "PAGE_END",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "0013-0613",
                "l": "0013-0613"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISSNS",
    "expression": "grel:cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISSNS using expression grel:cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_END",
          "expression": "value",
          "columnName": "PAGE_END",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "0013-0613",
                "l": "0013-0613"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_END",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_END using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_END",
          "expression": "value",
          "columnName": "PAGE_END",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "bmjqs-2017-007756",
                "l": "bmjqs-2017-007756"
              }
            },
            {
              "v": {
                "v": "dk",
                "l": "dk"
              }
            },
            {
              "v": {
                "v": "c4587",
                "l": "c4587"
              }
            },
            {
              "v": {
                "v": "B12",
                "l": "B12"
              }
            },
            {
              "v": {
                "v": "Doc11",
                "l": "Doc11"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_END",
          "expression": "value",
          "columnName": "PAGE_END",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "bmjqs-2017-007756",
                "l": "bmjqs-2017-007756"
              }
            },
            {
              "v": {
                "v": "dk",
                "l": "dk"
              }
            },
            {
              "v": {
                "v": "c4587",
                "l": "c4587"
              }
            },
            {
              "v": {
                "v": "B12",
                "l": "B12"
              }
            },
            {
              "v": {
                "v": "Doc11",
                "l": "Doc11"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_END",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_END using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_END",
          "expression": "value",
          "columnName": "PAGE_END",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "e95127",
                "l": "e95127"
              }
            },
            {
              "v": {
                "v": "e0192768",
                "l": "e0192768"
              }
            },
            {
              "v": {
                "v": "e0119627",
                "l": "e0119627"
              }
            },
            {
              "v": {
                "v": "e342",
                "l": "e342"
              }
            },
            {
              "v": {
                "v": "e017708",
                "l": "e017708"
              }
            },
            {
              "v": {
                "v": "e115193",
                "l": "e115193"
              }
            },
            {
              "v": {
                "v": "e12520",
                "l": "e12520"
              }
            },
            {
              "v": {
                "v": "e0196822",
                "l": "e0196822"
              }
            },
            {
              "v": {
                "v": "e12662",
                "l": "e12662"
              }
            },
            {
              "v": {
                "v": "e0125881",
                "l": "e0125881"
              }
            },
            {
              "v": {
                "v": "e114759",
                "l": "e114759"
              }
            },
            {
              "v": {
                "v": "e105489",
                "l": "e105489"
              }
            },
            {
              "v": {
                "v": "e82",
                "l": "e82"
              }
            },
            {
              "v": {
                "v": "e69841",
                "l": "e69841"
              }
            },
            {
              "v": {
                "v": "e1387",
                "l": "e1387"
              }
            },
            {
              "v": {
                "v": "e0200743",
                "l": "e0200743"
              }
            },
            {
              "v": {
                "v": "e85",
                "l": "e85"
              }
            },
            {
              "v": {
                "v": "e1001691",
                "l": "e1001691"
              }
            },
            {
              "v": {
                "v": "e0149749",
                "l": "e0149749"
              }
            },
            {
              "v": {
                "v": "e1687",
                "l": "e1687"
              }
            },
            {
              "v": {
                "v": "e109975",
                "l": "e109975"
              }
            },
            {
              "v": {
                "v": "e10235",
                "l": "e10235"
              }
            },
            {
              "v": {
                "v": "e79740",
                "l": "e79740"
              }
            },
            {
              "v": {
                "v": "e119",
                "l": "e119"
              }
            },
            {
              "v": {
                "v": "e0162688",
                "l": "e0162688"
              }
            },
            {
              "v": {
                "v": "e832",
                "l": "e832"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "^e",
          "mode": "regex",
          "caseSensitive": true,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_END",
          "expression": "value",
          "columnName": "PAGE_END",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "e95127",
                "l": "e95127"
              }
            },
            {
              "v": {
                "v": "e0192768",
                "l": "e0192768"
              }
            },
            {
              "v": {
                "v": "e0119627",
                "l": "e0119627"
              }
            },
            {
              "v": {
                "v": "e342",
                "l": "e342"
              }
            },
            {
              "v": {
                "v": "e017708",
                "l": "e017708"
              }
            },
            {
              "v": {
                "v": "e115193",
                "l": "e115193"
              }
            },
            {
              "v": {
                "v": "e12520",
                "l": "e12520"
              }
            },
            {
              "v": {
                "v": "e0196822",
                "l": "e0196822"
              }
            },
            {
              "v": {
                "v": "e12662",
                "l": "e12662"
              }
            },
            {
              "v": {
                "v": "e0125881",
                "l": "e0125881"
              }
            },
            {
              "v": {
                "v": "e114759",
                "l": "e114759"
              }
            },
            {
              "v": {
                "v": "e105489",
                "l": "e105489"
              }
            },
            {
              "v": {
                "v": "e82",
                "l": "e82"
              }
            },
            {
              "v": {
                "v": "e69841",
                "l": "e69841"
              }
            },
            {
              "v": {
                "v": "e1387",
                "l": "e1387"
              }
            },
            {
              "v": {
                "v": "e0200743",
                "l": "e0200743"
              }
            },
            {
              "v": {
                "v": "e85",
                "l": "e85"
              }
            },
            {
              "v": {
                "v": "e1001691",
                "l": "e1001691"
              }
            },
            {
              "v": {
                "v": "e0149749",
                "l": "e0149749"
              }
            },
            {
              "v": {
                "v": "e1687",
                "l": "e1687"
              }
            },
            {
              "v": {
                "v": "e109975",
                "l": "e109975"
              }
            },
            {
              "v": {
                "v": "e10235",
                "l": "e10235"
              }
            },
            {
              "v": {
                "v": "e79740",
                "l": "e79740"
              }
            },
            {
              "v": {
                "v": "e119",
                "l": "e119"
              }
            },
            {
              "v": {
                "v": "e0162688",
                "l": "e0162688"
              }
            },
            {
              "v": {
                "v": "e832",
                "l": "e832"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "^e",
          "mode": "regex",
          "caseSensitive": true,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_END",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_END using expression null"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PAGE_END",
    "newColumnName": "PAGE_START2",
    "description": "Rename column PAGE_END to PAGE_START2"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PAGE_START",
    "newColumnName": "PAGE_END",
    "description": "Rename column PAGE_START to PAGE_END"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PAGE_START2",
    "newColumnName": "PAGE_START",
    "description": "Rename column PAGE_START2 to PAGE_START"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_START",
          "columnName": "PAGE_START",
          "query": ",$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGE_START",
    "expression": "grel:value + \" \" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_START using expression grel:value + \" \" + cells['PAGE_END'].value"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PAGE_START",
    "newColumnName": "PAGES",
    "description": "Rename column PAGE_START to PAGES"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "-$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "--",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(\"--\",\"-\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(\"--\",\"-\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "–",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + \",\" + \" \" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + \",\" + \" \" + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "–",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(\"–\",\"-\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(\"–\",\"-\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^i",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + \"-\" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + \"-\" + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "plt042",
                "l": "plt042"
              }
            },
            {
              "v": {
                "v": "n/a",
                "l": "n/a"
              }
            },
            {
              "v": {
                "v": "pp. 55-78",
                "l": "pp. 55-78"
              }
            },
            {
              "v": {
                "v": "Plate 21",
                "l": "Plate 21"
              }
            },
            {
              "v": {
                "v": "OL54",
                "l": "OL54"
              }
            },
            {
              "v": {
                "v": "k4999",
                "l": "k4999"
              }
            },
            {
              "v": {
                "v": "Mon Mar 01 00:00:00 AEDT 1943",
                "l": "Mon Mar 01 00:00:00 AEDT 1943"
              }
            },
            {
              "v": {
                "v": "pp. 3-12",
                "l": "pp. 3-12"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(\"n/a\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(\"n/a\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "plt042",
                "l": "plt042"
              }
            },
            {
              "v": {
                "v": "k4999",
                "l": "k4999"
              }
            },
            {
              "v": {
                "v": "Mon Mar 01 00:00:00 AEDT 1943",
                "l": "Mon Mar 01 00:00:00 AEDT 1943"
              }
            },
            {
              "v": {
                "v": "n/a",
                "l": "n/a"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Plate 21",
                "l": "Plate 21"
              }
            },
            {
              "v": {
                "v": "OL54",
                "l": "OL54"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + \"-\" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + \"-\" + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^R",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + \"-\" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + \"-\" + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Sun Nov 01 00:00:00 AEDT 2020",
                "l": "Sun Nov 01 00:00:00 AEDT 2020"
              }
            },
            {
              "v": {
                "v": "Sun Jan 01 00:00:00 AEDT 2023",
                "l": "Sun Jan 01 00:00:00 AEDT 2023"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^S",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^S",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:if(cells['PAGE_END'].value.isNull,value,value + \"-\" + cells['PAGE_END'].value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:if(cells['PAGE_END'].value.isNull,value,value + \"-\" + cells['PAGE_END'].value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Wed Nov 04 00:00:00 AEDT 2020",
                "l": "Wed Nov 04 00:00:00 AEDT 2020"
              }
            },
            {
              "v": {
                "v": "Wed Apr 01 00:00:00 AEDT 2020",
                "l": "Wed Apr 01 00:00:00 AEDT 2020"
              }
            },
            {
              "v": {
                "v": "Thu Jan 01 00:00:00 AEDT 2026",
                "l": "Thu Jan 01 00:00:00 AEDT 2026"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:if(value.startsWith(\"Wed\"),\"pp. \" + cells['PAGE_END'].value,null)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:if(value.startsWith(\"Wed\"),\"pp. \" + cells['PAGE_END'].value,null)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "vi-iv, 1-4",
                "l": "vi-iv, 1-4"
              }
            },
            {
              "v": {
                "v": "vii-xii, 175-177",
                "l": "vii-xii, 175-177"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^v",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + \", \" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + \", \" + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "v",
                "l": "v"
              }
            },
            {
              "v": {
                "v": "vii",
                "l": "vii"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^v",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + \"-\" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + \"-\" + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "xix",
                "l": "xix"
              }
            },
            {
              "v": {
                "v": "xvii",
                "l": "xvii"
              }
            },
            {
              "v": {
                "v": "xxi",
                "l": "xxi"
              }
            },
            {
              "v": {
                "v": "xxxviii",
                "l": "xxxviii"
              }
            },
            {
              "v": {
                "v": "xiii",
                "l": "xiii"
              }
            },
            {
              "v": {
                "v": "xxxiii",
                "l": "xxxiii"
              }
            },
            {
              "v": {
                "v": "xi-xvi",
                "l": "xi-xvi"
              }
            },
            {
              "v": {
                "v": "xi",
                "l": "xi"
              }
            },
            {
              "v": {
                "v": "xxxix",
                "l": "xxxix"
              }
            },
            {
              "v": {
                "v": "xxv",
                "l": "xxv"
              }
            },
            {
              "v": {
                "v": "x",
                "l": "x"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^x",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + \"-\" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + \"-\" + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^1-",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:if(cells['PAGE_END'].value==null,null,value + \", \" + cells['PAGE_END'].value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:if(cells['PAGE_END'].value==null,null,value + \", \" + cells['PAGE_END'].value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^1",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + \"-\" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + \"-\" + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^2",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + \"-\" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + \"-\" + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "262-328-444-452",
                "l": "262-328-444-452"
              }
            },
            {
              "v": {
                "v": "21-3",
                "l": "21-3"
              }
            },
            {
              "v": {
                "v": "21-36, 59-73-59-73",
                "l": "21-36, 59-73-59-73"
              }
            },
            {
              "v": {
                "v": "22-30, 40-58-58",
                "l": "22-30, 40-58-58"
              }
            },
            {
              "v": {
                "v": "2014-218",
                "l": "2014-218"
              }
            },
            {
              "v": {
                "v": "212-13; 217-235-235",
                "l": "212-13; 217-235-235"
              }
            },
            {
              "v": {
                "v": "266-269-271",
                "l": "266-269-271"
              }
            },
            {
              "v": {
                "v": "242-247; 250-251; 282-289; 295-297; 300-305-310-316",
                "l": "242-247; 250-251; 282-289; 295-297; 300-305-310-316"
              }
            },
            {
              "v": {
                "v": "24-36-111-119",
                "l": "24-36-111-119"
              }
            },
            {
              "v": {
                "v": "28-48-194-195",
                "l": "28-48-194-195"
              }
            },
            {
              "v": {
                "v": "215-22",
                "l": "215-22"
              }
            },
            {
              "v": {
                "v": "274-276-279-281",
                "l": "274-276-279-281"
              }
            },
            {
              "v": {
                "v": "23, 29-35, 40-51-68-71",
                "l": "23, 29-35, 40-51-68-71"
              }
            },
            {
              "v": {
                "v": "264-265-270",
                "l": "264-265-270"
              }
            },
            {
              "v": {
                "v": "223-282, 381-383, 381-383-381–383",
                "l": "223-282, 381-383, 381-383-381–383"
              }
            },
            {
              "v": {
                "v": "251-4",
                "l": "251-4"
              }
            },
            {
              "v": {
                "v": "2220-2220000",
                "l": "2220-2220000"
              }
            },
            {
              "v": {
                "v": "279-289, 293-295, 352- 359-",
                "l": "279-289, 293-295, 352- 359-"
              }
            },
            {
              "v": {
                "v": "21, 23-63-65",
                "l": "21, 23-63-65"
              }
            },
            {
              "v": {
                "v": "28-49, 102-36, 172-204, 227-45-",
                "l": "28-49, 102-36, 172-204, 227-45-"
              }
            },
            {
              "v": {
                "v": "2013-32",
                "l": "2013-32"
              }
            },
            {
              "v": {
                "v": "24-30-84-91",
                "l": "24-30-84-91"
              }
            },
            {
              "v": {
                "v": "23-24; 38-42; 44; 46-59; 74-78-78",
                "l": "23-24; 38-42; 44; 46-59; 74-78-78"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^2",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(\";\",\",\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(\";\",\",\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^1-",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:if(value.endsWith(\"-\"),\"\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:if(value.endsWith(\"-\"),\"\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "1-1",
                "l": "1-1"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^1-",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(\"-1\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(\"-1\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "-$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(/-$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(/-$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": ", $",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(\",\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(\",\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(\"- \",\"-\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(\"- \",\"-\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(\";\",\",\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(\";\",\",\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGE_END",
          "expression": "value",
          "columnName": "PAGE_END",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "153-158",
                "l": "153-158"
              }
            },
            {
              "v": {
                "v": "233-241",
                "l": "233-241"
              }
            },
            {
              "v": {
                "v": "240-241",
                "l": "240-241"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^9\\d+?-",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:value + \", \" + cells['PAGE_END'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:value + \", \" + cells['PAGE_END'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGE_END",
          "columnName": "PAGE_END",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^9*",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "grel:if(value.contains(/^[^-]+$/),value + \"-\" + cells['PAGE_END'].value, value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression grel:if(value.contains(/^[^-]+$/),value + \"-\" + cells['PAGE_END'].value, value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "-$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(/-$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(/-$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "\\d+,\\d+",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(\",\",\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(\",\",\", \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PAGES",
          "expression": "value",
          "columnName": "PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "pp. 259-271",
                "l": "pp. 259-271"
              }
            },
            {
              "v": {
                "v": "pp. 63-97",
                "l": "pp. 63-97"
              }
            },
            {
              "v": {
                "v": "pp. 193-199",
                "l": "pp. 193-199"
              }
            },
            {
              "v": {
                "v": "pp. 3-12",
                "l": "pp. 3-12"
              }
            },
            {
              "v": {
                "v": "pp. 55-78",
                "l": "pp. 55-78"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "PAGES",
          "columnName": "PAGES",
          "query": "^p",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PAGES",
    "expression": "value.replace(\"pp. \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES using expression value.replace(\"pp. \",\"\")"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PAGES",
    "newColumnName": "PAGES_CLEAN",
    "description": "Rename column PAGES to PAGES_CLEAN"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "AUTHORS",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "AUTHORS_CLEAN",
    "columnInsertIndex": 22,
    "description": "Create column AUTHORS_CLEAN at index 22 based on column AUTHORS using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS_CLEAN",
          "columnName": "AUTHORS_CLEAN",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "value.replace(/\\?+/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression value.replace(/\\?+/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "value.replace(\"author\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression value.replace(\"author\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(/^,|\\./,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(/^,|\\./,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(/^\\s+?,/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(/^\\s+?,/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(\"- ,\",\"-,\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(\"- ,\",\"-,\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(/\\s,/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(/\\s,/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": "\"",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(/\"+/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(/\"+/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": " :",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(\" :\",\":\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(\" :\",\":\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": "\"",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(/,\\s?\\./,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(/,\\s?\\./,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": "\"",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(/\\.$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(/\\.$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": ",$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(/,$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(/,$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS",
          "columnName": "AUTHORS",
          "query": "\\.$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(/,?\\s?\\.$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(/,?\\s?\\.$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS_CLEAN",
          "columnName": "AUTHORS_CLEAN",
          "query": "\\.\\s",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(/\\.\\s/,\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(/\\.\\s/,\" \")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "value",
    "edits": [
      {
        "from": [
          "James, Nickolas",
          "Nickolas James",
          "Nickolas, James"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "James, Nickolas"
      },
      {
        "from": [
          "John W Creswell",
          "Creswell, John W",
          "Creswell, John W.; Creswell, John W"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "John W Creswell"
      },
      {
        "from": [
          "Cleveland P Hickman Jr",
          "Cleveland P Hickman Jr."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland P Hickman Jr"
      },
      {
        "from": [
          "Liu, Yuehua",
          "Yuehua Liu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Liu, Yuehua"
      },
      {
        "from": [
          "Allison James",
          "James, Allison"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Allison James"
      },
      {
        "from": [
          "Dorothy E Smith",
          "Smith, Dorothy E"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dorothy E Smith"
      },
      {
        "from": [
          "Diana Whitton",
          "Whitton, Diana"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Diana Whitton"
      },
      {
        "from": [
          "Bordwell, David.; Thompson, Kristin",
          "Bordwell, David; Thompson, Kristin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bordwell, David.; Thompson, Kristin"
      },
      {
        "from": [
          "Becker, Ronald F",
          "Ronald F Becker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Becker, Ronald F"
      },
      {
        "from": [
          "Edward R Tufte",
          "Tufte, Edward R"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Edward R Tufte"
      },
      {
        "from": [
          "Pascoe, Bruce",
          "Bruce Pascoe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pascoe, Bruce"
      },
      {
        "from": [
          "Capra, Fritjof",
          "Fritjof Capra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Capra, Fritjof"
      },
      {
        "from": [
          "Field, Andy P.; Field, Andy P",
          "Andy P Field"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Andy P Field"
      },
      {
        "from": [
          "Salend, Spencer J",
          "Spencer J Salend"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salend, Spencer J"
      },
      {
        "from": [
          "Booker, George",
          "George Booker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Booker, George"
      },
      {
        "from": [
          "Joseph A DeVito",
          "DeVito, Joseph A"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Joseph A DeVito"
      },
      {
        "from": [
          "Rory Burke",
          "Burke, Rory"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rory Burke"
      },
      {
        "from": [
          "Lisa Fortini-Campbell",
          "Fortini-Campbell, Lisa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lisa Fortini-Campbell"
      },
      {
        "from": [
          "Max Van Manen",
          "Max van Manen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Max Van Manen"
      },
      {
        "from": [
          "Michel Foucault",
          "Foucault, Michel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Michel Foucault"
      },
      {
        "from": [
          "Oliver W Sacks",
          "Sacks, Oliver W"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oliver W Sacks"
      },
      {
        "from": [
          "Edgeworth, Brendan",
          "Brendan Edgeworth"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Edgeworth, Brendan"
      },
      {
        "from": [
          "Robson, Colin",
          "Colin Robson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Robson, Colin"
      },
      {
        "from": [
          "Luke Sullivan",
          "Sullivan, Luke"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luke Sullivan"
      },
      {
        "from": [
          "Newburn, Tim",
          "Tim Newburn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Newburn, Tim"
      },
      {
        "from": [
          "Margetts, Kay; Raban-Bisby, Bridie",
          "Raban-Bisby, Bridie.; Margetts, Kay"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Margetts, Kay; Raban-Bisby, Bridie"
      },
      {
        "from": [
          "Phillips, Gail; Lindgren, Mia.; Bishop, Russell",
          "Phillips, Gail; Lindgren, Mia; Bishop, Russell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Phillips, Gail; Lindgren, Mia.; Bishop, Russell"
      },
      {
        "from": [
          "Bell Hooks",
          "hooks, bell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bell Hooks"
      },
      {
        "from": [
          "Russell-Bowie, Deirdre",
          "Deirdre Russell-Bowie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Russell-Bowie, Deirdre"
      },
      {
        "from": [
          "Michele Hoffnung",
          "Hoffnung, Michele"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Michele Hoffnung"
      },
      {
        "from": [
          "OGuinn, Thomas C.; Semenik, Richard J; Allen, Chris T",
          "OGuinn, Thomas C; Allen, Chris T.; Semenik, Richard J"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OGuinn, Thomas C.; Semenik, Richard J; Allen, Chris T"
      },
      {
        "from": [
          "Marilyn Fleer",
          "Fleer, Marilyn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Marilyn Fleer"
      },
      {
        "from": [
          "Janet R Moyles",
          "Moyles, Janet R"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Janet R Moyles"
      },
      {
        "from": [
          "Robert Young",
          "Young, Robert"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Robert Young"
      },
      {
        "from": [
          "Mary Lou Roberts",
          "Roberts, Mary Lou"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mary Lou Roberts"
      },
      {
        "from": [
          "Neuman, William Lawrence",
          "William Lawrence Neuman"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Neuman, William Lawrence"
      },
      {
        "from": [
          "Alan Bryman",
          "Bryman, Alan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alan Bryman"
      },
      {
        "from": [
          "Stephen A Ross",
          "Ross, Stephen A"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stephen A Ross"
      },
      {
        "from": [
          "Ruth Reynolds",
          "Reynolds, Ruth"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ruth Reynolds"
      },
      {
        "from": [
          "Gerald Corey",
          "Corey, Gerald"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gerald Corey"
      },
      {
        "from": [
          "Bourdieu, Pierre",
          "Pierre Bourdieu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bourdieu, Pierre"
      },
      {
        "from": [
          "Benn, Suzanne; Bolton, Dianne",
          "Benn, Suzanne.; Bolton, Dianne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Benn, Suzanne; Bolton, Dianne"
      },
      {
        "from": [
          "Colin J Marsh",
          "Marsh, Colin J"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colin J Marsh"
      },
      {
        "from": [
          "Evans, Joel R.; Berman, Barry",
          "Berman, Barry; Evans, Joel R"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Evans, Joel R.; Berman, Barry"
      },
      {
        "from": [
          "Frances Baum",
          "Baum, Frances"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frances Baum"
      },
      {
        "from": [
          "Chitty, William",
          "William Chitty"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chitty, William"
      },
      {
        "from": [
          "Buchanan, John",
          "John Buchanan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buchanan, John"
      },
      {
        "from": [
          "Peter Guy Northouse",
          "Northouse, Peter Guy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Peter Guy Northouse"
      },
      {
        "from": [
          "Laura Mulvey",
          "Mulvey, Laura"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laura Mulvey"
      },
      {
        "from": [
          "Susan Fraser",
          "Fraser, Susan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Susan Fraser"
      },
      {
        "from": [
          "Stephen Lamble",
          "Lamble, Stephen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stephen Lamble"
      },
      {
        "from": [
          "Simone de Beauvoir",
          "Beauvoir, Simone de"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Simone de Beauvoir"
      },
      {
        "from": [
          "Churchill, Rick",
          "Rick Churchill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Churchill, Rick"
      },
      {
        "from": [
          "George Ritzer",
          "Ritzer, George"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "George Ritzer"
      },
      {
        "from": [
          "Walter, Maggie",
          "Maggie Walter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Walter, Maggie"
      },
      {
        "from": [
          "Don Nutbeam",
          "Nutbeam, Don"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Don Nutbeam"
      },
      {
        "from": [
          "Rhonda Craven",
          "Craven, Rhonda"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rhonda Craven"
      },
      {
        "from": [
          "Simons, Margaret",
          "Margaret Simons"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Simons, Margaret"
      },
      {
        "from": [
          "Michael Quinn Patton",
          "Patton, Michael Quinn.; Patton, Michael Quinn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Michael Quinn Patton"
      },
      {
        "from": [
          "George Orwell",
          "Orwell, George"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "George Orwell"
      },
      {
        "from": [
          "Judith Dwyer",
          "Dwyer, Judith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Judith Dwyer"
      },
      {
        "from": [
          "Ben Goldacre",
          "Goldacre, Ben"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ben Goldacre"
      },
      {
        "from": [
          "Martha L Abell",
          "Martha L L Abell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Martha L Abell"
      },
      {
        "from": [
          "Barbara Alysen",
          "Alysen, Barbara"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Barbara Alysen"
      },
      {
        "from": [
          "Barker, Chris",
          "Chris Barker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Barker, Chris"
      },
      {
        "from": [
          "Barthes, Roland",
          "Roland Barthes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Barthes, Roland"
      },
      {
        "from": [
          "Santrock, John W",
          "John W Santrock"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Santrock, John W"
      },
      {
        "from": [
          "Emerson, Lisa",
          "Lisa Emerson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Emerson, Lisa"
      },
      {
        "from": [
          "Robert Chambers",
          "Chambers, Robert"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Robert Chambers"
      },
      {
        "from": [
          "Eilean Hooper-Greenhill",
          "Hooper-Greenhill, Eilean"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eilean Hooper-Greenhill"
      },
      {
        "from": [
          "Jillian Rodd",
          "Rodd, Jillian"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jillian Rodd"
      },
      {
        "from": [
          "Hepburn, Samantha",
          "Samantha Hepburn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hepburn, Samantha"
      },
      {
        "from": [
          "Janice Koch",
          "Koch, Janice"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Janice Koch"
      },
      {
        "from": [
          "Craig Michael Deegan",
          "Deegan, Craig Michael"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Craig Michael Deegan"
      },
      {
        "from": [
          "Cathryn McConaghy",
          "McConaghy, Cathryn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cathryn McConaghy"
      },
      {
        "from": [
          "Max Weber",
          "Weber, Max"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Max Weber"
      },
      {
        "from": [
          "Michael W Eysenck",
          "Eysenck, Michael W"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Michael W Eysenck"
      },
      {
        "from": [
          "Berk, Laura E",
          "Laura E Berk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Berk, Laura E"
      },
      {
        "from": [
          "Sarah Maddison",
          "Maddison, Sarah"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sarah Maddison"
      },
      {
        "from": [
          "Schirato, Tony",
          "Tony Schirato"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schirato, Tony"
      },
      {
        "from": [
          "Malcolm Gladwell",
          "Gladwell, Malcolm"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Malcolm Gladwell"
      },
      {
        "from": [
          "Bain Attwood",
          "Attwood, Bain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bain Attwood"
      },
      {
        "from": [
          "Dan P McAdams",
          "McAdams, Dan P"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dan P McAdams"
      },
      {
        "from": [
          "Strauven, Wanda",
          "Wanda Strauven"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Strauven, Wanda"
      },
      {
        "from": [
          "Norman Fairclough",
          "Fairclough, Norman"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norman Fairclough"
      },
      {
        "from": [
          "Arvanitakis, James",
          "James Arvanitakis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Arvanitakis, James"
      },
      {
        "from": [
          "Dan Lattimore",
          "Lattimore, Dan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dan Lattimore"
      },
      {
        "from": [
          "Mahoney, James Scott",
          "James Scott Mahoney"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mahoney, James Scott"
      },
      {
        "from": [
          "Albie Brooks",
          "Brooks, Albie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albie Brooks"
      },
      {
        "from": [
          "Gail Sedorkin",
          "Sedorkin, Gail"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gail Sedorkin"
      },
      {
        "from": [
          "Alison Theaker",
          "Theaker, Alison"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alison Theaker"
      },
      {
        "from": [
          "Matthew J Robinson",
          "Robinson, Matthew J"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Matthew J Robinson"
      },
      {
        "from": [
          "Arthur Asa Berger",
          "Berger, Arthur Asa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Arthur Asa Berger"
      },
      {
        "from": [
          "Eugenia Siapera",
          "Siapera, Eugenia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eugenia Siapera"
      },
      {
        "from": [
          "Keller, Kevin Lane",
          "Kevin Lane Keller"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Keller, Kevin Lane"
      },
      {
        "from": [
          "Macionis, John J.; Plummer, Kenneth",
          "Macionis, John J; Plummer, Kenneth"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Macionis, John J.; Plummer, Kenneth"
      },
      {
        "from": [
          "Robert van Krieken",
          "Van Krieken, Robert"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Robert van Krieken"
      }
    ],
    "description": "Mass edit cells in column AUTHORS_CLEAN"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "VOLUME_OR_SERIES_CLEAN",
    "newColumnName": "VOLUME_CLEAN",
    "description": "Rename column VOLUME_OR_SERIES_CLEAN to VOLUME_CLEAN"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "VOLUME_OR_SERIES",
    "newColumnName": "VOLUME",
    "description": "Rename column VOLUME_OR_SERIES to VOLUME"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "PUB_DATE",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "PUB_DATE_CLEAN",
    "columnInsertIndex": 17,
    "description": "Create column PUB_DATE_CLEAN at index 17 based on column PUB_DATE using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE",
          "columnName": "PUB_DATE",
          "query": "\\.",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "value",
    "edits": [
      {
        "from": [
          "c2006 [ie. 2005"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "c2006 [ie. 2005]"
      }
    ],
    "description": "Mass edit cells in column PUB_DATE_CLEAN"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE",
          "columnName": "PUB_DATE",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "value.replace(\"?\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression value.replace(\"?\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE",
          "columnName": "PUB_DATE",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE_CLEAN",
          "columnName": "PUB_DATE_CLEAN",
          "query": "[",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "grel:value.replace(/^\\[/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression grel:value.replace(/^\\[/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE_CLEAN",
          "columnName": "PUB_DATE_CLEAN",
          "query": "]",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "grel:value.replace(\"]\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression grel:value.replace(\"]\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE_CLEAN",
          "columnName": "PUB_DATE_CLEAN",
          "query": "^c",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "PUB_DATE_CLEAN",
          "expression": "value",
          "columnName": "PUB_DATE_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "c2009 [i.e. 2008",
                "l": "c2009 [i.e. 2008"
              }
            },
            {
              "v": {
                "v": "c2012 [i.e. 2011",
                "l": "c2012 [i.e. 2011"
              }
            },
            {
              "v": {
                "v": "c2010 [i.e. 2009",
                "l": "c2010 [i.e. 2009"
              }
            },
            {
              "v": {
                "v": "c2006 [ie. 2005",
                "l": "c2006 [ie. 2005"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "grel:value + \"]\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression grel:value + \"]\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE_CLEAN",
          "columnName": "PUB_DATE_CLEAN",
          "query": "-$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "grel:value.replace(/-$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression grel:value.replace(/-$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "PUB_DATE_CLEAN",
          "expression": "value",
          "columnName": "PUB_DATE_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "nan",
                "l": "nan"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE_CLEAN",
          "columnName": "PUB_DATE_CLEAN",
          "query": "\\b([1-9])\\b",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE_CLEAN",
          "columnName": "PUB_DATE_CLEAN",
          "query": "\\b([0-9][0-9])\\b",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "PUB_DATE_CLEAN",
          "expression": "value",
          "columnName": "PUB_DATE_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "20",
                "l": "20"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE_CLEAN",
          "columnName": "PUB_DATE_CLEAN",
          "query": "\\b([0-9][0-9][0-9])\\b",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUB_DATE_CLEAN",
          "columnName": "PUB_DATE_CLEAN",
          "query": "\\d{5}",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS_CLEAN",
          "columnName": "AUTHORS_CLEAN",
          "query": "nan",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "AUTHORS_CLEAN",
          "expression": "value",
          "columnName": "AUTHORS_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "nan",
                "l": "nan"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "AUTHORS_CLEAN",
          "columnName": "AUTHORS_CLEAN",
          "query": " ;",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:value.replace(\" ;\",\";\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:value.replace(\" ;\",\";\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PAGES_CLEAN",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES_CLEAN using expression value.toString()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "PUBLISHER",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "PUBLISHER_CLEAN",
    "columnInsertIndex": 16,
    "description": "Create column PUBLISHER_CLEAN at index 16 based on column PUBLISHER using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "value.replace(\"?\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression value.replace(\"?\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER",
          "columnName": "PUBLISHER",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER",
          "columnName": "PUBLISHER",
          "query": " :",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(\" :\", \":\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(\" :\", \":\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER",
          "columnName": "PUBLISHER",
          "query": " ;",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(\" ;\", \";\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(\" ;\", \";\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER",
          "columnName": "PUBLISHER",
          "query": "\"",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "value.replace(\"\\\"\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression value.replace(\"\\\"\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER",
          "columnName": "PUBLISHER",
          "query": "^:",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(/^:\\s/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(/^:\\s/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER",
          "columnName": "PUBLISHER",
          "query": "^;",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(/^;\\s/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(/^;\\s/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER",
          "columnName": "PUBLISHER",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PUBLISHER_CLEAN",
          "columnName": "PUBLISHER_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(\": ; \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(\": ; \",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER",
          "columnName": "PUBLISHER",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PUBLISHER_CLEAN",
          "columnName": "PUBLISHER_CLEAN",
          "query": "\\d{4}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(/,\\s?c?\\d{4}$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(/,\\s?c?\\d{4}$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER",
          "columnName": "PUBLISHER",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PUBLISHER_CLEAN",
          "columnName": "PUBLISHER_CLEAN",
          "query": "\\d{4}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "PUBLISHER_CLEAN",
          "expression": "value",
          "columnName": "PUBLISHER_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Stamford, CT Cengage Learning 2015",
                "l": "Stamford, CT Cengage Learning 2015"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified Oxford University Press 2003",
                "l": "Place of publication not identified Oxford University Press 2003"
              }
            },
            {
              "v": {
                "v": "Clifton Park, N.Y.: Delmar, Cengage Learning; 2011",
                "l": "Clifton Park, N.Y.: Delmar, Cengage Learning; 2011"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified McGraw Hill 2014",
                "l": "Place of publication not identified McGraw Hill 2014"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified American Psychological Association 2002",
                "l": "Place of publication not identified American Psychological Association 2002"
              }
            },
            {
              "v": {
                "v": "St. Louis, Missouri: Elsevier/Mosby; 2017",
                "l": "St. Louis, Missouri: Elsevier/Mosby; 2017"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified John Benjamins Publishing Company 2003",
                "l": "Place of publication not identified John Benjamins Publishing Company 2003"
              }
            },
            {
              "v": {
                "v": "Melbourne: lab.3000",
                "l": "Melbourne: lab.3000"
              }
            },
            {
              "v": {
                "v": "Crows Nest, New South Wales: Allen & Unwin: Macquarie University Sydney: Sydney Pen, 2014",
                "l": "Crows Nest, New South Wales: Allen & Unwin: Macquarie University Sydney: Sydney Pen, 2014"
              }
            },
            {
              "v": {
                "v": "London; New York, NY: Routledge, Taylor & Francis Group 2017",
                "l": "London; New York, NY: Routledge, Taylor & Francis Group 2017"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified McGraw Hill Education 2014",
                "l": "Place of publication not identified McGraw Hill Education 2014"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified American Psychological Association 2004",
                "l": "Place of publication not identified American Psychological Association 2004"
              }
            },
            {
              "v": {
                "v": "Dubuque, IA: Kendall Hunt Pub Co.; 2017",
                "l": "Dubuque, IA: Kendall Hunt Pub Co.; 2017"
              }
            },
            {
              "v": {
                "v": "San Francisco Skys Edge 2012",
                "l": "San Francisco Skys Edge 2012"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified McGraw Hill Education 2016",
                "l": "Place of publication not identified McGraw Hill Education 2016"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified American Psychological Association 2006",
                "l": "Place of publication not identified American Psychological Association 2006"
              }
            },
            {
              "v": {
                "v": "Cambridge, Massachusetts: The MIT Press, 2013",
                "l": "Cambridge, Massachusetts: The MIT Press, 2013"
              }
            },
            {
              "v": {
                "v": "New York, NY: McGraw-Hill Education, 2014; 2014",
                "l": "New York, NY: McGraw-Hill Education, 2014; 2014"
              }
            },
            {
              "v": {
                "v": "Boston, Mass. $b Cengage Learning, $c 2016",
                "l": "Boston, Mass. $b Cengage Learning, $c 2016"
              }
            },
            {
              "v": {
                "v": "Hoboken, NJ Wiley Custom 2018",
                "l": "Hoboken, NJ Wiley Custom 2018"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified Bloomsbury Academic 2011",
                "l": "Place of publication not identified Bloomsbury Academic 2011"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified McGraw Hill Medical 2013",
                "l": "Place of publication not identified McGraw Hill Medical 2013"
              }
            },
            {
              "v": {
                "v": "Place of publication not identified Saunders/Elsevier 2010",
                "l": "Place of publication not identified Saunders/Elsevier 2010"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(/,?;?\\s\\d{4}$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(/,?;?\\s\\d{4}$/,\"\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER",
          "columnName": "PUBLISHER",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "PUBLISHER_CLEAN",
          "columnName": "PUBLISHER_CLEAN",
          "query": "\\d{4}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "value",
    "edits": [
      {
        "from": [
          "ACHPER WA state confernece Novmeber 2011"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ACHPER WA state conference November 2011"
      }
    ],
    "description": "Mass edit cells in column PUBLISHER_CLEAN"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER_CLEAN",
          "columnName": "PUBLISHER_CLEAN",
          "query": "Place of publication",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(\"Place of publication not identified\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(\"Place of publication not identified\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER_CLEAN",
          "columnName": "PUBLISHER_CLEAN",
          "query": "^:",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "value.replace(\": \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression value.replace(\": \",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER_CLEAN",
          "columnName": "PUBLISHER_CLEAN",
          "query": "^\\[",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(/^\\[.+\\]:\\s/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(/^\\[.+\\]:\\s/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER_CLEAN",
          "columnName": "PUBLISHER_CLEAN",
          "query": "^\\[",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER_CLEAN",
          "columnName": "PUBLISHER_CLEAN",
          "query": "\\d{4}\\.$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(/,\\s\\d+\\.$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(/,\\s\\d+\\.$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(\",\",\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(\",\",\", \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "PUBLISHER_CLEAN",
          "columnName": "PUBLISHER_CLEAN",
          "query": "...",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:value.replace(\"... \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:value.replace(\"... \",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "nan",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "Null",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION using expression \"\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "EDITION",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "EDITION_CLEAN",
    "columnInsertIndex": 14,
    "description": "Create column EDITION_CLEAN at index 14 based on column EDITION using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "{",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(/\\{/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(/\\{/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "{",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(/\\.?\\}$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(/\\.?\\}$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "Rev\\.?",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"Rev.\",\"Revised\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"Rev.\",\"Revised\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "Rev\\.?",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"rev\",\"revised\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"rev\",\"revised\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "Rev\\.?",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"Rev\",\"Revised\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"Rev\",\"Revised\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "Rev\\.?",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"Revisedised\",\"Revised\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"Revisedised\",\"Revised\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "Rev\\.?",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"revisedised\",\"revised\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"revisedised\",\"revised\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "Rev\\.?",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"revised.\", \"revised \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"revised.\", \"revised \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "Rev\\.?",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "^\\[",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"[\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"[\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "^\\[",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\".]\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\".]\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "^\\[",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"]\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"]\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "\\]",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"[\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"[\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "\\]",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\".]\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\".]\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "\\]",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"]\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"]\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "...",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"...\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"...\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "ed",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\" ed\",\" edition\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\" ed\",\" edition\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "ed",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"editionition\",\"edition\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"editionition\",\"edition\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "ed",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"Edition\",\"edition\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"Edition\",\"edition\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "enl",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"Enl.\", \"Enlarged\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"Enl.\", \"Enlarged\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "enl",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"enl.\",\"enlarged\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"enl.\",\"enlarged\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "\"",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "value.replace(\"\\\"\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression value.replace(\"\\\"\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION_CLEAN",
          "columnName": "EDITION_CLEAN",
          "query": "editionitor",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"editionitor\",\"editor\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"editionitor\",\"editor\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION_CLEAN",
          "columnName": "EDITION_CLEAN",
          "query": "edition.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"edition.\",\"edition\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"edition.\",\"edition\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION_CLEAN",
          "columnName": "EDITION_CLEAN",
          "query": "edition.",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"edition.\",\"edition\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"edition.\",\"edition\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION_CLEAN",
          "columnName": "EDITION_CLEAN",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "value.replace(\"?\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression value.replace(\"?\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION_CLEAN",
          "columnName": "EDITION_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "value.replace(\" ;\",\";\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression value.replace(\" ;\",\";\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITION_CLEAN",
          "columnName": "EDITION_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"2.; \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"2.; \",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITION_CLEAN",
          "columnName": "EDITION_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\"1.; \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\"1.; \",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITION_CLEAN",
          "columnName": "EDITION_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:value.replace(\".; \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:value.replace(\".; \",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION_CLEAN",
          "columnName": "EDITION_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION_CLEAN",
          "columnName": "EDITION_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Revised 2nd edition",
          "2nd revised edition",
          "2nd (revised ) edition",
          "2nd edition revised",
          "2nd edition, Revised edition",
          "2nd edition, revised"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revised 2nd edition"
      },
      {
        "from": [
          "3rd revised edition",
          "3rd edition revised",
          "Revised 3rd edition",
          "3rd Revised edition",
          "3rd edition, revised"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3rd revised edition"
      },
      {
        "from": [
          "Twelfth edition, Global edition",
          "Twelfth edition / Global edition",
          "Twelfth edition, global edition",
          "Twelfth edition; Global edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Twelfth edition, Global edition"
      },
      {
        "from": [
          "5th edition international edition",
          "5th International edition",
          "5th edition, International edition",
          "International edition, 5th edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "5th edition, International edition"
      },
      {
        "from": [
          "Sixth edition, international edition",
          "International sixth edition",
          "Sixth edition, International edition",
          "Sixth international edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sixth edition, International edition"
      },
      {
        "from": [
          "6th edition",
          "6th edition 6th edition",
          "6th 6th edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "6th edition"
      },
      {
        "from": [
          "8th edition, International edition",
          "8th edition International edition",
          "8th edition, international edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "8th edition, International edition"
      },
      {
        "from": [
          "7th edition, International edition",
          "7th edition, international edition",
          "7th international edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "7th edition, International edition"
      },
      {
        "from": [
          "Second edition",
          "Second edition Second edition",
          "second edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second edition"
      },
      {
        "from": [
          "2nd edition",
          "2nd. edition",
          "2nd edition 2nd edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd edition"
      },
      {
        "from": [
          "1st edition",
          "1st. edition",
          "1st edition 1st edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1st edition"
      },
      {
        "from": [
          "Fourth edition (International edition)",
          "Fourth edition, International edition",
          "Fourth edition, international edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fourth edition, International edition"
      },
      {
        "from": [
          "3rd edition",
          "3rd edition 3rd edition",
          "3rd. edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3rd edition"
      },
      {
        "from": [
          "Revised and updated edition",
          "Updated and revised edition",
          "revised and updated edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revised and updated edition"
      },
      {
        "from": [
          "2nd Asia-Pacific edition",
          "2nd edition, Asia-Pacific edition",
          "Asia-Pacific 2nd edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd edition, Asia-Pacific edition"
      },
      {
        "from": [
          "2nd Australian edition",
          "2nd edition, Australian edition",
          "2nd edition; Australian edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd edition, Australian edition"
      },
      {
        "from": [
          "4th edition Fourth edition",
          "4th edition Fourth edition 4th edition Fourth edition",
          "Fourth edition 4th edition Fourth edition 4th edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4th edition"
      },
      {
        "from": [
          "4th Asia-Pacific edition",
          "4th edition, Asia-Pacific edition",
          "4th Asia-Pacific edition 4th Asia-Pacific edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4th edition, Asia-Pacific edition"
      },
      {
        "from": [
          "Fourth edition",
          "Fourth edition Fourth edition",
          "FOURth edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fourth edition"
      },
      {
        "from": [
          "4th edition",
          "4th edition 4th edition",
          "4th. edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4th edition"
      },
      {
        "from": [
          "3rd Australian edition",
          "3rd edition, Australian",
          "3rd edition, Australian edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3rd edition, Australian edition"
      },
      {
        "from": [
          "Revised edition",
          "revised edition",
          "revised edition revised edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revised edition"
      },
      {
        "from": [
          "Seventh edition, Global edition",
          "Seventh edition, global edition",
          "seventh edition, global edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Seventh edition, Global edition"
      },
      {
        "from": [
          "5th revised edition",
          "5th Revised edition",
          "5th edition, revised"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "5th revised edition"
      },
      {
        "from": [
          "8th edition (global edition).",
          "8th edition, Global edition",
          "Global 8th edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "8th edition, Global edition"
      },
      {
        "from": [
          "4th edition, international edition",
          "4th edition, International edition",
          "4th edition international edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4th edition, International edition"
      },
      {
        "from": [
          "3e",
          "3E.",
          "3E"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3e"
      },
      {
        "from": [
          "4e",
          "4E.",
          "4E.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4e"
      },
      {
        "from": [
          "Seventh edition",
          "Seventh edition Seventh edition",
          "seventh edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Seventh edition"
      },
      {
        "from": [
          "2nd edition, revised and expanded",
          "2nd revised and expanded edition",
          "Revised and expanded 2nd edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd edition, revised and expanded"
      },
      {
        "from": [
          "Ninth edition, global edition",
          "Ninth edition, Global edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ninth edition, Global edition"
      },
      {
        "from": [
          "Revised and expanded edition",
          "Expanded and revised edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revised and expanded edition"
      },
      {
        "from": [
          "Australian edition",
          "Australian edition Australian edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Australian edition"
      },
      {
        "from": [
          "Third edition",
          "Third edition Third edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Third edition"
      },
      {
        "from": [
          "Eighteenth edition",
          "Eighteenth edition Eighteenth edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eighteenth edition"
      },
      {
        "from": [
          "1st U.S. edition",
          "1st US edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1st U.S. edition"
      },
      {
        "from": [
          "2-disc ultimate edition",
          "Ultimate 2-disc edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2-disc ultimate edition"
      },
      {
        "from": [
          "Pearson international edition",
          "Pearson International edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pearson International edition"
      },
      {
        "from": [
          "4th Revised edition",
          "4th revised edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4th revised edition"
      },
      {
        "from": [
          "Thirteenth edition, Global edition",
          "Global edition, Thirteenth edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Thirteenth edition, Global edition"
      },
      {
        "from": [
          "Fifth edition",
          "Fifth edition Fifth edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth edition"
      },
      {
        "from": [
          "3rd, updated and enlarged edition",
          "3rd updated and enlarged edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3rd, updated and enlarged edition"
      },
      {
        "from": [
          "9th edition / William D. Callister, Jr. Department Of Metallurgical Engineering, the University Of Utah, David G. Rethwisch, Department of Chemical and Biochemical Engineering, the University of Iowa",
          "9th edition / William D. Callister, Jr. Department Of Metallurgical Engineering, the University Of Utah, David G. Rethwisch, Department of Chemical and Biochemical Engineering, the University of Iowa.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "9th edition / William D. Callister, Jr. Department Of Metallurgical Engineering, the University Of Utah, David G. Rethwisch, Department of Chemical and Biochemical Engineering, the University of Iowa"
      },
      {
        "from": [
          "Fifteenth edition, Global edition",
          "Fifteenth edition, global edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifteenth edition, Global edition"
      },
      {
        "from": [
          "Revised and updated third edition",
          "Third edition revised and updated"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Third edition, revised and updated"
      },
      {
        "from": [
          "edition 5",
          "5 edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "5th edition"
      },
      {
        "from": [
          "Seventh edition, Pearson new international edition",
          "Seventh edition, Pearson New International edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Seventh edition, Pearson new international edition"
      },
      {
        "from": [
          "3rd New edition",
          "New (3rd) edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New (3rd) edition"
      },
      {
        "from": [
          "11th edition, international edition",
          "11th edition, International edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "11th edition, International edition"
      },
      {
        "from": [
          "2nd Ed",
          "2ND ED."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd edition"
      },
      {
        "from": [
          "2nd edition Revised and enlarged",
          "2nd revised and enlarged edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd edition, revised and enlarged"
      },
      {
        "from": [
          "5th edition",
          "5th edition 5th edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "5th edition"
      },
      {
        "from": [
          "First Anchor Books edition",
          "First Anchor books edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "First Anchor Books edition"
      },
      {
        "from": [
          "6th Australian edition",
          "6th edition, Australian edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "6th edition, Australian edition"
      },
      {
        "from": [
          "edition 10",
          "10 edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "10th edition"
      },
      {
        "from": [
          "6th edition, International edition",
          "6th edition- International edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "6th edition, International edition"
      },
      {
        "from": [
          "3rd international edition",
          "3rd edition, international edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3rd edition, International edition"
      },
      {
        "from": [
          "Fifth edition Global edition",
          "Fifth edition, Global edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth edition, Global edition"
      },
      {
        "from": [
          "New and Expanded edition",
          "New and expanded edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New and expanded edition"
      },
      {
        "from": [
          "3e 3rd edition, Australian",
          "3e 3rd edition, Australian edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3e 3rd edition, Australian edition"
      },
      {
        "from": [
          "1st Australian edition",
          "1st Australian edition 1st Australian edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1st Australian edition"
      },
      {
        "from": [
          "3E Third edition",
          "3e Third edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3e Third edition"
      },
      {
        "from": [
          "13th edition, Global edition",
          "Global edition, 13th edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "13th edition, Global edition"
      },
      {
        "from": [
          "Revised and updated",
          "Updated and revised"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revised and updated"
      },
      {
        "from": [
          "3rd Asia-Pacific edition",
          "3rd edition, Asia-Pacific edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3rd edition, Asia-Pacific edition"
      },
      {
        "from": [
          "First Vintage Books edition",
          "First Vintage books edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "First Vintage Books edition"
      },
      {
        "from": [
          "3rd edition, Revised and expanded edition",
          "3rd edition, revised and expanded edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3rd edition, revised and expanded edition"
      },
      {
        "from": [
          "First U.S. edition",
          "First US edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "First U.S. edition"
      },
      {
        "from": [
          "10th edition",
          "10th. edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "10th edition"
      },
      {
        "from": [
          "edition 3",
          "3 edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3rd edition"
      },
      {
        "from": [
          "Second edition, revised and expanded",
          "Second revised and expanded edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second edition, revised and expanded"
      },
      {
        "from": [
          "Global edition, eighth edition",
          "Eighth edition, Global edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eighth edition, Global edition"
      },
      {
        "from": [
          "4th edition, Global edition",
          "4th, Global edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4th edition, Global edition"
      },
      {
        "from": [
          "2nd edition, enlarged",
          "2nd enlarged edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd edition, enlarged"
      },
      {
        "from": [
          "8th international student edition",
          "International student edition, 8th edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "8th edition, International student edition"
      },
      {
        "from": [
          "edition 4",
          "4 edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4th edition"
      },
      {
        "from": [
          "Pearson new international edition, third edition",
          "Third edition, Pearson new international edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Third edition, Pearson new international edition"
      },
      {
        "from": [
          "1 edition",
          "1. edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1st edition"
      },
      {
        "from": [
          "7th edition revised",
          "7th revised edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "7th edition, revised"
      },
      {
        "from": [
          "Third Australian and New Zealand edition",
          "Australian and New Zealand third edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Third Australian and New Zealand edition"
      },
      {
        "from": [
          "Sixth edition",
          "Sixth edition Sixth edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sixth edition"
      },
      {
        "from": [
          "Second edition, Australian and New Zealand edition",
          "Second Australian and New Zealand edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second edition, Australian and New Zealand edition"
      },
      {
        "from": [
          "Collector's edition",
          "Collectors edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Collector's edition"
      },
      {
        "from": [
          "Fourth Australian edition",
          "Fourth edition, Australian edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fourth edition, Australian edition"
      },
      {
        "from": [
          "Fourteenth edition in SI units, Global edition",
          "Fourteenth Global edition in SI units"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fourteenth edition in SI units, Global edition"
      },
      {
        "from": [
          "3rd revised international edition",
          "Revised 3rd international edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revised 3rd international edition"
      },
      {
        "from": [
          "Second edition, Global edition",
          "Second edition; Global edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second edition, Global edition"
      },
      {
        "from": [
          "Third edition, Global edition",
          "Third edition, global edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Third edition, Global edition"
      },
      {
        "from": [
          "1st Vintage Books edition",
          "1st Vintage books edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1st Vintage Books edition"
      },
      {
        "from": [
          "First edition",
          "First edition First edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "First edition"
      },
      {
        "from": [
          "Ninth edition, Pearson new international edition",
          "Pearson new international edition, Ninth edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ninth edition, Pearson new international edition"
      },
      {
        "from": [
          "Widescreen",
          "Widescreen.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Widescreen"
      },
      {
        "from": [
          "Fifth edition, Pearson new international edition",
          "Pearson new international edition, Fifth edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth edition, Pearson new international edition"
      },
      {
        "from": [
          "Fourth edition, international student edition",
          "Fourth edition, International student edition Fourth edition, International student edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fourth edition, International student edition"
      },
      {
        "from": [
          "1st American edition",
          "1st American edition 1st American edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1st American edition"
      },
      {
        "from": [
          "7th edition",
          "7th edition 7th edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "7th edition"
      },
      {
        "from": [
          "Updated and expanded edition",
          "updated and expanded edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Updated and expanded edition"
      },
      {
        "from": [
          "Revised Ed",
          "Revised Ed."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revised edition"
      },
      {
        "from": [
          "14e",
          "14e /"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "14e"
      },
      {
        "from": [
          "Second revised edition",
          "Revised second edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second revised edition"
      },
      {
        "from": [
          "5e",
          "5E."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "5e"
      },
      {
        "from": [
          "Fourth edition, Pearson new international edition",
          "Fourth edition, Pearson new international edition Fourth edition, Pearson new international edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fourth edition, Pearson new international edition"
      },
      {
        "from": [
          "6e",
          "6E"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "6e"
      },
      {
        "from": [
          "8e 8th edition",
          "8E (8th edition).."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "8e 8th edition"
      },
      {
        "from": [
          "Third edition, revised edition",
          "Third revised edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Third edition, revised edition"
      },
      {
        "from": [
          "2. edition",
          "2 edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd edition"
      },
      {
        "from": [
          "1st Asia-Pacific edition",
          "Asia-Pacific edition, 1st edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1st Asia-Pacific edition"
      },
      {
        "from": [
          "4th edition; international student edition",
          "4th edition, international student edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4th edition, International student edition"
      },
      {
        "from": [
          "3rd Australian and New Zealand edition",
          "3rd edition Australian and New Zealand edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3rd edition, Australian and New Zealand edition"
      },
      {
        "from": [
          "Eighth edition International edition",
          "Eighth edition, International edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eighth edition, International edition"
      },
      {
        "from": [
          "7th Australian and New Zealand edition",
          "Australian and New Zealand 7th edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "7th Australian and New Zealand edition"
      }
    ],
    "description": "Mass edit cells in column EDITION_CLEAN"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "value",
    "edits": [
      {
        "from": [
          "2nd",
          "2nd."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd edition"
      },
      {
        "from": [
          "1st Owl Book edition",
          "1st Owl book edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1st Owl Book edition"
      },
      {
        "from": [
          "2nd Australasian edition",
          "Australasian 2nd edition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd Australasian edition"
      }
    ],
    "description": "Mass edit cells in column EDITION_CLEAN"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITION",
          "columnName": "EDITION",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "EDITORS",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "EDITORS_CLEAN",
    "columnInsertIndex": 16,
    "description": "Create column EDITORS_CLEAN at index 16 based on column EDITORS using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "[]",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "nan",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "EDITORS_CLEAN",
          "expression": "value",
          "columnName": "EDITORS_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "nan",
                "l": "nan"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "[{",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(\"[{\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(\"[{\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "[{",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(\"}]\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(\"}]\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "full_",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(\"full_name:\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(\"full_name:\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "type:person",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(\",type:person\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(\",type:person\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "first_",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(\"first_name:\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(\"first_name:\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "surname",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(\",surname:\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(\",surname:\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "{",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(\"}\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(\"}\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "{",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(\"{\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(\"{\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "value.replace(\"?\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression value.replace(\"?\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "?",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(\" ,\",\",\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(\" ,\",\",\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": ",,",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(/,+/,\",\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(/,+/,\",\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "^,",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:value.replace(/^,/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:value.replace(/^,/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "\"",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "value.replace(\"\\\"\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression value.replace(\"\\\"\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "\"",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "\"",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS_CLEAN",
          "columnName": "EDITORS_CLEAN",
          "query": "\\.$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "value.replace(/\\.$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression value.replace(/\\.$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EDITORS",
          "columnName": "EDITORS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "DOI",
          "columnName": "DOI",
          "query": "DOI",
          "mode": "text",
          "caseSensitive": true,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "DOI",
    "expression": "value.replace(\"DOI\",\"doi\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DOI using expression value.replace(\"DOI\",\"doi\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DOI",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DOI using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "DOI",
          "columnName": "DOI",
          "query": "^doi",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "DOI",
          "expression": "value",
          "columnName": "DOI",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "doi:  10.1186/1742-7622-9-1",
                "l": "doi:  10.1186/1742-7622-9-1"
              }
            },
            {
              "v": {
                "v": "doi:  10.1038/srep09016",
                "l": "doi:  10.1038/srep09016"
              }
            },
            {
              "v": {
                "v": "doi:  10.1146/annurev-clinpsy-021815-093122",
                "l": "doi:  10.1146/annurev-clinpsy-021815-093122"
              }
            },
            {
              "v": {
                "v": "doi:  10.2147/CIA.S38589",
                "l": "doi:  10.2147/CIA.S38589"
              }
            },
            {
              "v": {
                "v": "doi:  10.1503/jpn.150099",
                "l": "doi:  10.1503/jpn.150099"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "DOI",
    "expression": "value",
    "edits": [
      {
        "from": [
          "doi:  10.1038/srep09016"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "doi:10.1038/srep09016"
      }
    ],
    "description": "Mass edit cells in column DOI"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "DOI",
          "columnName": "DOI",
          "query": "^doi",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "DOI",
          "expression": "value",
          "columnName": "DOI",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "doi:  10.1186/1742-7622-9-1",
                "l": "doi:  10.1186/1742-7622-9-1"
              }
            },
            {
              "v": {
                "v": "doi:  10.1146/annurev-clinpsy-021815-093122",
                "l": "doi:  10.1146/annurev-clinpsy-021815-093122"
              }
            },
            {
              "v": {
                "v": "doi:  10.2147/CIA.S38589",
                "l": "doi:  10.2147/CIA.S38589"
              }
            },
            {
              "v": {
                "v": "doi:  10.1503/jpn.150099",
                "l": "doi:  10.1503/jpn.150099"
              }
            },
            {
              "v": {
                "v": "doi:  10.1038/srep09016",
                "l": "doi:  10.1038/srep09016"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "DOI",
    "expression": "value",
    "edits": [
      {
        "from": [
          "doi:  10.1186/1742-7622-9-1"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "doi:10.1186/1742-7622-9-1"
      }
    ],
    "description": "Mass edit cells in column DOI"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "DOI",
          "columnName": "DOI",
          "query": "^doi",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "DOI",
          "expression": "value",
          "columnName": "DOI",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "doi:  10.1146/annurev-clinpsy-021815-093122",
                "l": "doi:  10.1146/annurev-clinpsy-021815-093122"
              }
            },
            {
              "v": {
                "v": "doi:  10.2147/CIA.S38589",
                "l": "doi:  10.2147/CIA.S38589"
              }
            },
            {
              "v": {
                "v": "doi:  10.1503/jpn.150099",
                "l": "doi:  10.1503/jpn.150099"
              }
            },
            {
              "v": {
                "v": "doi:  10.1186/1742-7622-9-1",
                "l": "doi:  10.1186/1742-7622-9-1"
              }
            },
            {
              "v": {
                "v": "doi:  10.1038/srep09016",
                "l": "doi:  10.1038/srep09016"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "DOI",
    "expression": "value",
    "edits": [
      {
        "from": [
          "doi:  10.1146/annurev-clinpsy-021815-093122"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "doi:10.1146/annurev-clinpsy-021815-093122"
      }
    ],
    "description": "Mass edit cells in column DOI"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "DOI",
          "columnName": "DOI",
          "query": "^doi",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "DOI",
          "expression": "value",
          "columnName": "DOI",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "doi:  10.2147/CIA.S38589",
                "l": "doi:  10.2147/CIA.S38589"
              }
            },
            {
              "v": {
                "v": "doi:  10.1503/jpn.150099",
                "l": "doi:  10.1503/jpn.150099"
              }
            },
            {
              "v": {
                "v": "doi:  10.1146/annurev-clinpsy-021815-093122",
                "l": "doi:  10.1146/annurev-clinpsy-021815-093122"
              }
            },
            {
              "v": {
                "v": "doi:  10.1186/1742-7622-9-1",
                "l": "doi:  10.1186/1742-7622-9-1"
              }
            },
            {
              "v": {
                "v": "doi:  10.1038/srep09016",
                "l": "doi:  10.1038/srep09016"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "DOI",
    "expression": "value",
    "edits": [
      {
        "from": [
          "doi:  10.1503/jpn.150099"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "doi:10.1503/jpn.150099"
      }
    ],
    "description": "Mass edit cells in column DOI"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "DOI",
          "columnName": "DOI",
          "query": "^doi",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "DOI",
    "expression": "value",
    "edits": [
      {
        "from": [
          "doi:  10.1177/003335490712200102"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "doi:10.1177/003335490712200102"
      }
    ],
    "description": "Mass edit cells in column DOI"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "DOI",
          "columnName": "DOI",
          "query": "doi",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "DOI",
    "expression": "grel:value.replace(/^doi:/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DOI using expression grel:value.replace(/^doi:/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "DOI",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DOI using expression value.trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "ISSNS",
    "expression": "grel:null",
    "onError": "set-to-blank",
    "newColumnName": "I(EI)SSNS",
    "columnInsertIndex": 11,
    "description": "Create column I(EI)SSNS at index 11 based on column ISSNS using expression grel:null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S",
    "expression": "grel:if(cells['ISSNS'].value.contains(\"ISBN\"),cells['ISSNS'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S using expression grel:if(cells['ISSNS'].value.contains(\"ISBN\"),cells['ISSNS'].value,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "ISBN",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISSNS",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISSNS using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISSNS",
    "expression": "grel:value.replace(\"{'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISSNS using expression grel:value.replace(\"{'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISSNS",
    "expression": "grel:value.replace(\"'}\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISSNS using expression grel:value.replace(\"'}\",\"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "ISSN",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "I(EI)SSNS",
    "expression": "grel:null",
    "onError": "set-to-blank",
    "newColumnName": "Done_Flag",
    "columnInsertIndex": 12,
    "description": "Create column Done_Flag at index 12 based on column I(EI)SSNS using expression grel:null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "ISSN",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "ISSN",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": "Y"
      }
    ],
    "description": "Mass edit cells in column Done_Flag"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "ISSN",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:value.replace(/E?ISSN-?/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:value.replace(/E?ISSN-?/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ISSNS",
          "expression": "value",
          "columnName": "ISSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "0959-8138 (Print)",
                "l": "0959-8138 (Print)"
              }
            },
            {
              "v": {
                "v": "1369-6513 (Print)1369-7625 (Electronic)",
                "l": "1369-6513 (Print)1369-7625 (Electronic)"
              }
            },
            {
              "v": {
                "v": "0022-0167 (Print)1939-2168 (Electronic)",
                "l": "0022-0167 (Print)1939-2168 (Electronic)"
              }
            },
            {
              "v": {
                "v": "1356-2517 (Print)1470-1294 (Electronic)",
                "l": "1356-2517 (Print)1470-1294 (Electronic)"
              }
            },
            {
              "v": {
                "v": "1944-5083 (Print)1944-5091 (Electronic)",
                "l": "1944-5083 (Print)1944-5091 (Electronic)"
              }
            },
            {
              "v": {
                "v": "0031-9384 (Print)",
                "l": "0031-9384 (Print)"
              }
            },
            {
              "v": {
                "v": "1471-003X (Print)",
                "l": "1471-003X (Print)"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "Print",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ISSNS",
          "expression": "value",
          "columnName": "ISSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "0959-8138 (Print)",
                "l": "0959-8138 (Print)"
              }
            },
            {
              "v": {
                "v": "1369-6513 (Print)1369-7625 (Electronic)",
                "l": "1369-6513 (Print)1369-7625 (Electronic)"
              }
            },
            {
              "v": {
                "v": "0022-0167 (Print)1939-2168 (Electronic)",
                "l": "0022-0167 (Print)1939-2168 (Electronic)"
              }
            },
            {
              "v": {
                "v": "1356-2517 (Print)1470-1294 (Electronic)",
                "l": "1356-2517 (Print)1470-1294 (Electronic)"
              }
            },
            {
              "v": {
                "v": "1944-5083 (Print)1944-5091 (Electronic)",
                "l": "1944-5083 (Print)1944-5091 (Electronic)"
              }
            },
            {
              "v": {
                "v": "0031-9384 (Print)",
                "l": "0031-9384 (Print)"
              }
            },
            {
              "v": {
                "v": "1471-003X (Print)",
                "l": "1471-003X (Print)"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "Print",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": "Y"
      }
    ],
    "description": "Mass edit cells in column Done_Flag"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ISSNS",
          "expression": "value",
          "columnName": "ISSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "0959-8138 (Print)",
                "l": "0959-8138 (Print)"
              }
            },
            {
              "v": {
                "v": "1369-6513 (Print)1369-7625 (Electronic)",
                "l": "1369-6513 (Print)1369-7625 (Electronic)"
              }
            },
            {
              "v": {
                "v": "0022-0167 (Print)1939-2168 (Electronic)",
                "l": "0022-0167 (Print)1939-2168 (Electronic)"
              }
            },
            {
              "v": {
                "v": "1356-2517 (Print)1470-1294 (Electronic)",
                "l": "1356-2517 (Print)1470-1294 (Electronic)"
              }
            },
            {
              "v": {
                "v": "1944-5083 (Print)1944-5091 (Electronic)",
                "l": "1944-5083 (Print)1944-5091 (Electronic)"
              }
            },
            {
              "v": {
                "v": "0031-9384 (Print)",
                "l": "0031-9384 (Print)"
              }
            },
            {
              "v": {
                "v": "1471-003X (Print)",
                "l": "1471-003X (Print)"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "Print",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:value.replace(\" (Electronic)\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:value.replace(\" (Electronic)\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ISSNS",
          "expression": "value",
          "columnName": "ISSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "0959-8138 (Print)",
                "l": "0959-8138 (Print)"
              }
            },
            {
              "v": {
                "v": "1369-6513 (Print)1369-7625 (Electronic)",
                "l": "1369-6513 (Print)1369-7625 (Electronic)"
              }
            },
            {
              "v": {
                "v": "0022-0167 (Print)1939-2168 (Electronic)",
                "l": "0022-0167 (Print)1939-2168 (Electronic)"
              }
            },
            {
              "v": {
                "v": "1356-2517 (Print)1470-1294 (Electronic)",
                "l": "1356-2517 (Print)1470-1294 (Electronic)"
              }
            },
            {
              "v": {
                "v": "1944-5083 (Print)1944-5091 (Electronic)",
                "l": "1944-5083 (Print)1944-5091 (Electronic)"
              }
            },
            {
              "v": {
                "v": "0031-9384 (Print)",
                "l": "0031-9384 (Print)"
              }
            },
            {
              "v": {
                "v": "1471-003X (Print)",
                "l": "1471-003X (Print)"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "Print",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:value.replace(\" (Print)\",\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:value.replace(\" (Print)\",\", \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ISSNS",
          "expression": "value",
          "columnName": "ISSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "0959-8138 (Print)",
                "l": "0959-8138 (Print)"
              }
            },
            {
              "v": {
                "v": "1369-6513 (Print)1369-7625 (Electronic)",
                "l": "1369-6513 (Print)1369-7625 (Electronic)"
              }
            },
            {
              "v": {
                "v": "0022-0167 (Print)1939-2168 (Electronic)",
                "l": "0022-0167 (Print)1939-2168 (Electronic)"
              }
            },
            {
              "v": {
                "v": "1356-2517 (Print)1470-1294 (Electronic)",
                "l": "1356-2517 (Print)1470-1294 (Electronic)"
              }
            },
            {
              "v": {
                "v": "1944-5083 (Print)1944-5091 (Electronic)",
                "l": "1944-5083 (Print)1944-5091 (Electronic)"
              }
            },
            {
              "v": {
                "v": "0031-9384 (Print)",
                "l": "0031-9384 (Print)"
              }
            },
            {
              "v": {
                "v": "1471-003X (Print)",
                "l": "1471-003X (Print)"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "Print",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:value.replace(/, $/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:value.replace(/, $/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "\\n\\n",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "\\n\\n",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": "Y"
      }
    ],
    "description": "Mass edit cells in column Done_Flag"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "\\n\\n",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:value.replace(/\\\\n.*\\\\t/,\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:value.replace(/\\\\n.*\\\\t/,\", \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": ",",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "Done_Flag",
          "expression": "value",
          "columnName": "Done_Flag",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": ",",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "Done_Flag",
          "expression": "value",
          "columnName": "Done_Flag",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": "Y"
      }
    ],
    "description": "Mass edit cells in column Done_Flag"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ISSNS",
          "expression": "value",
          "columnName": "ISSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "1069-031X,1547-7215",
                "l": "1069-031X,1547-7215"
              }
            },
            {
              "v": {
                "v": "2373-5023,1462-6381",
                "l": "2373-5023,1462-6381"
              }
            },
            {
              "v": {
                "v": "1942-678X,1942-6771",
                "l": "1942-678X,1942-6771"
              }
            },
            {
              "v": {
                "v": "1754-8187,2042-8642",
                "l": "1754-8187,2042-8642"
              }
            },
            {
              "v": {
                "v": "1522-1970,1099-2340",
                "l": "1522-1970,1099-2340"
              }
            },
            {
              "v": {
                "v": "0015-7228,1945-2276",
                "l": "0015-7228,1945-2276"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": ",",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:value.replace(\",\",\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:value.replace(\",\",\", \")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": " -",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": "Y"
      }
    ],
    "description": "Mass edit cells in column Done_Flag"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "I(EI)SSNS",
          "expression": "value",
          "columnName": "I(EI)SSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": " -",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": " -",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "value.replace(\" - \",\"-\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression value.replace(\" - \",\"-\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "I(EI)SSNS",
          "expression": "value",
          "columnName": "I(EI)SSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "- ",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value + \", \" + cells['EISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value + \", \" + cells['EISSNS'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "- ",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:value.replace(\"- \",\"-\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:value.replace(\"- \",\"-\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "- ",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": "Y"
      }
    ],
    "description": "Mass edit cells in column Done_Flag"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "–",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": "Y"
      }
    ],
    "description": "Mass edit cells in column Done_Flag"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "–",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "–",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:value.replace(/\\s?–\\s?/,\"-\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:value.replace(/\\s?–\\s?/,\"-\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "-\\d{8}-",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "^\\d{7}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "^\\d{7}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:value.substring(0,4) + \"-\" + value.substring(4,8)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:value.substring(0,4) + \"-\" + value.substring(4,8)"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "^\\d{7}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": "Y?"
      }
    ],
    "description": "Mass edit cells in column Done_Flag"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "^\\d{7}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:if(or(cells['EISSNS'].value==\"\",cells['EISSNS'].value==\"0\"),value,value + \", \" + substring(cells['EISSNS'].value,0,4)+ \"-\" + substring(cells['EISSNS'].value,4,8))",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:if(or(cells['EISSNS'].value==\"\",cells['EISSNS'].value==\"0\"),value,value + \", \" + substring(cells['EISSNS'].value,0,4)+ \"-\" + substring(cells['EISSNS'].value,4,8))"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "^\\d{7}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Y?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Y"
      }
    ],
    "description": "Mass edit cells in column Done_Flag"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "^\\d{4}-\\d{3}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:if(or(cells['ISSNS'].value==cells['EISSNS'].value,cells['EISSNS'].value==\"\"),cells['ISSNS'].value,cells['ISSNS'].value + \", \" + cells['EISSNS'].value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:if(or(cells['ISSNS'].value==cells['EISSNS'].value,cells['EISSNS'].value==\"\"),cells['ISSNS'].value,cells['ISSNS'].value + \", \" + cells['EISSNS'].value)"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "^\\d{4}-\\d{3}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "value",
    "edits": [
      {
        "from": [
          ""
        ],
        "fromBlank": true,
        "fromError": false,
        "to": "Y"
      }
    ],
    "description": "Mass edit cells in column Done_Flag"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "^[A-Za-z0-9]{10}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "ISBN13S",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "ISBN13S_CLEAN",
    "columnInsertIndex": 10,
    "description": "Create column ISBN13S_CLEAN at index 10 based on column ISBN13S using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "^[A-Za-z0-9]{13}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Done_Flag",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Done_Flag using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "EISSNS",
          "columnName": "EISSNS",
          "query": "^978",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S",
    "expression": "grel:cells['EISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S using expression grel:cells['EISSNS'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "I(EI)SSNS",
          "expression": "value",
          "columnName": "I(EI)SSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "EISSNS",
          "columnName": "EISSNS",
          "query": "^\\d{7}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['EISSNS'].value.substring(0,4) + \"-\" + cells['EISSNS'].value.substring(4,8)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['EISSNS'].value.substring(0,4) + \"-\" + cells['EISSNS'].value.substring(4,8)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "EISSNS",
          "expression": "value",
          "columnName": "EISSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "I(EI)SSNS",
          "expression": "value",
          "columnName": "I(EI)SSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "^\\d{4}-",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "I(EI)SSNS",
          "columnName": "I(EI)SSNS",
          "query": "-\\d{3}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ISSNS",
          "expression": "value",
          "columnName": "ISSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "0096-3445‎",
                "l": "0096-3445‎"
              }
            },
            {
              "v": {
                "v": "0011-8044‎",
                "l": "0011-8044‎"
              }
            },
            {
              "v": {
                "v": "0025-4878‎",
                "l": "0025-4878‎"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "I(EI)SSNS",
          "expression": "value",
          "columnName": "I(EI)SSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "EISSNS",
          "columnName": "EISSNS",
          "query": "^\\d{4}-\\d{3}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "I(EI)SSNS",
          "columnName": "I(EI)SSNS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['ISSNS'].value + \", \" + cells['EISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['ISSNS'].value + \", \" + cells['EISSNS'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ISSNS",
          "expression": "value",
          "columnName": "ISSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "I(EI)SSNS",
          "expression": "value",
          "columnName": "I(EI)SSNS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "EISSNS",
          "columnName": "EISSNS",
          "query": "^\\d{4}-\\d{3}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "I(EI)SSNS",
          "columnName": "I(EI)SSNS",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS",
    "expression": "grel:cells['EISSNS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS using expression grel:cells['EISSNS'].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "Done_Flag",
    "description": "Remove column Done_Flag"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "value.replace(\"-\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression value.replace(\"-\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(\"{'ISBN : \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(\"{'ISBN : \",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(\"'}\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(\"'}\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(\", 'ISBN : \",\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(\", 'ISBN : \",\", \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "value.replace(\"\\'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression value.replace(\"\\'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/\\(.+?\\)/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/\\(.+?\\)/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(\", , \",\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(\", , \",\", \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/, $/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/, $/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/ :$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/ :$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(\":,\",\",\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(\":,\",\",\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(\" ,\",\",\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(\" ,\",\",\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S",
    "expression": "grel:cells['ISBN13S_CLEAN'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S using expression grel:cells['ISBN13S_CLEAN'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/^, /,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/^, /,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(\"{\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(\"{\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "value.replace(\".\",\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression value.replace(\".\",\", \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/ \\d{9}[A-Za-z0-9],/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/ \\d{9}[A-Za-z0-9],/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/^\\d{9}[A-Za-z0-9],\\s\\d{9}[A-Za-z0-9]\\s?$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/^\\d{9}[A-Za-z0-9],\\s\\d{9}[A-Za-z0-9]\\s?$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/^\\d{9}[A-Za-z0-9],\\s/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/^\\d{9}[A-Za-z0-9],\\s/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/, \\d{9}[A-Za-z0-9]\\s?$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/, \\d{9}[A-Za-z0-9]\\s?$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "ISBN13S_CLEAN",
          "expression": "value",
          "columnName": "ISBN13S_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "0826415520(qUS $24, 95, 0826415520(qUS $24, 95",
                "l": "0826415520(qUS $24, 95, 0826415520(qUS $24, 95"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:if(substring(value,0,13)==substring(value,15,28),substring(value,0,13),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:if(substring(value,0,13)==substring(value,15,28),substring(value,0,13),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "ISBN13S_CLEAN",
          "expression": "value",
          "columnName": "ISBN13S_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "9780857020413, 9780857020406, 9780857020413, 9780857020406",
                "l": "9780857020413, 9780857020406, 9780857020413, 9780857020406"
              }
            },
            {
              "v": {
                "v": "9781446209004, 9781446208991, 9781446208991, 9781446209004",
                "l": "9781446209004, 9781446208991, 9781446208991, 9781446209004"
              }
            },
            {
              "v": {
                "v": "9780203127650, 9780415434317, 9780415434300, 9780415434317, 9780415434300, 9780203127650",
                "l": "9780203127650, 9780415434317, 9780415434300, 9780415434317, 9780415434300, 9780203127650"
              }
            },
            {
              "v": {
                "v": "9781492572350, 9781492561149, 9781492572350, 9781492570592, 9781492561149, 9781492570592",
                "l": "9781492572350, 9781492561149, 9781492572350, 9781492570592, 9781492561149, 9781492570592"
              }
            },
            {
              "v": {
                "v": "9781496354044, 9781496347213, 9781496347213, 9781496354044",
                "l": "9781496354044, 9781496347213, 9781496347213, 9781496354044"
              }
            },
            {
              "v": {
                "v": "9780538735902, 9780534403027, 9780538735902, 9780534403027",
                "l": "9780538735902, 9780534403027, 9780538735902, 9780534403027"
              }
            },
            {
              "v": {
                "v": "9780230359093, 9780312681708, 9780230359093, 9780312681708",
                "l": "9780230359093, 9780312681708, 9780230359093, 9780312681708"
              }
            },
            {
              "v": {
                "v": "9780730304685, 9780730315490, 9780730315490, 9780730304685",
                "l": "9780730304685, 9780730315490, 9780730315490, 9780730304685"
              }
            },
            {
              "v": {
                "v": "9781526423863, 9781526423870, 9781526423870, 9781526423863",
                "l": "9781526423863, 9781526423870, 9781526423870, 9781526423863"
              }
            },
            {
              "v": {
                "v": "9780205810468, 9780205829385, 9780205810468, 9780205829385",
                "l": "9780205810468, 9780205829385, 9780205810468, 9780205829385"
              }
            },
            {
              "v": {
                "v": "9781408191880, 9781408191873, 9781408191880, 9781408191873",
                "l": "9781408191880, 9781408191873, 9781408191880, 9781408191873"
              }
            },
            {
              "v": {
                "v": "9781900621748, 9781900621731, 9781900621748, 9781900621731",
                "l": "9781900621748, 9781900621731, 9781900621748, 9781900621731"
              }
            },
            {
              "v": {
                "v": "9780230584693, 9780230584686, 9780230584693, 9780230584686",
                "l": "9780230584693, 9780230584686, 9780230584693, 9780230584686"
              }
            },
            {
              "v": {
                "v": "9780415326537, 9780415335751, 9780415335751, 9780415326537",
                "l": "9780415326537, 9780415335751, 9780415335751, 9780415326537"
              }
            },
            {
              "v": {
                "v": "9781285866345, 9781305629943, 9781305629943, 9781285866345",
                "l": "9781285866345, 9781305629943, 9781305629943, 9781285866345"
              }
            },
            {
              "v": {
                "v": "9781847883896, 9781847883889, 9781847883889, 9781847883896",
                "l": "9781847883896, 9781847883889, 9781847883889, 9781847883896"
              }
            },
            {
              "v": {
                "v": "9781496339072, 9781496339065, 9781496339072, 9781496339065",
                "l": "9781496339072, 9781496339065, 9781496339072, 9781496339065"
              }
            },
            {
              "v": {
                "v": "9780073404806, 9780071289238, 9780071289238, 9780073404806",
                "l": "9780073404806, 9780071289238, 9780071289238, 9780073404806"
              }
            },
            {
              "v": {
                "v": "9781598570793, 9781598570809, 9781598570793, 9781598570809",
                "l": "9781598570793, 9781598570809, 9781598570793, 9781598570809"
              }
            },
            {
              "v": {
                "v": "9780670785896, 9780670024810, 9780670024810, 9780670785896",
                "l": "9780670785896, 9780670024810, 9780670024810, 9780670785896"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:if(substring(value,0,28)==substring(value,30,58),substring(value,0,28),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:if(substring(value,0,28)==substring(value,30,58),substring(value,0,28),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "ISBN13S_CLEAN",
          "expression": "value",
          "columnName": "ISBN13S_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "9781446209004, 9781446208991, 9781446208991, 9781446209004",
                "l": "9781446209004, 9781446208991, 9781446208991, 9781446209004"
              }
            },
            {
              "v": {
                "v": "9780203127650, 9780415434317, 9780415434300, 9780415434317, 9780415434300, 9780203127650",
                "l": "9780203127650, 9780415434317, 9780415434300, 9780415434317, 9780415434300, 9780203127650"
              }
            },
            {
              "v": {
                "v": "9781492572350, 9781492561149, 9781492572350, 9781492570592, 9781492561149, 9781492570592",
                "l": "9781492572350, 9781492561149, 9781492572350, 9781492570592, 9781492561149, 9781492570592"
              }
            },
            {
              "v": {
                "v": "9781496354044, 9781496347213, 9781496347213, 9781496354044",
                "l": "9781496354044, 9781496347213, 9781496347213, 9781496354044"
              }
            },
            {
              "v": {
                "v": "9780730304685, 9780730315490, 9780730315490, 9780730304685",
                "l": "9780730304685, 9780730315490, 9780730315490, 9780730304685"
              }
            },
            {
              "v": {
                "v": "9781526423863, 9781526423870, 9781526423870, 9781526423863",
                "l": "9781526423863, 9781526423870, 9781526423870, 9781526423863"
              }
            },
            {
              "v": {
                "v": "9780415326537, 9780415335751, 9780415335751, 9780415326537",
                "l": "9780415326537, 9780415335751, 9780415335751, 9780415326537"
              }
            },
            {
              "v": {
                "v": "9781285866345, 9781305629943, 9781305629943, 9781285866345",
                "l": "9781285866345, 9781305629943, 9781305629943, 9781285866345"
              }
            },
            {
              "v": {
                "v": "9781847883896, 9781847883889, 9781847883889, 9781847883896",
                "l": "9781847883896, 9781847883889, 9781847883889, 9781847883896"
              }
            },
            {
              "v": {
                "v": "9780073404806, 9780071289238, 9780071289238, 9780073404806",
                "l": "9780073404806, 9780071289238, 9780071289238, 9780073404806"
              }
            },
            {
              "v": {
                "v": "9780670785896, 9780670024810, 9780670024810, 9780670785896",
                "l": "9780670785896, 9780670024810, 9780670024810, 9780670785896"
              }
            },
            {
              "v": {
                "v": "9780857020413, 9780857020406, 9780857020413, 9780857020406",
                "l": "9780857020413, 9780857020406, 9780857020413, 9780857020406"
              }
            },
            {
              "v": {
                "v": "9780538735902, 9780534403027, 9780538735902, 9780534403027",
                "l": "9780538735902, 9780534403027, 9780538735902, 9780534403027"
              }
            },
            {
              "v": {
                "v": "9780230359093, 9780312681708, 9780230359093, 9780312681708",
                "l": "9780230359093, 9780312681708, 9780230359093, 9780312681708"
              }
            },
            {
              "v": {
                "v": "9780205810468, 9780205829385, 9780205810468, 9780205829385",
                "l": "9780205810468, 9780205829385, 9780205810468, 9780205829385"
              }
            },
            {
              "v": {
                "v": "9781408191880, 9781408191873, 9781408191880, 9781408191873",
                "l": "9781408191880, 9781408191873, 9781408191880, 9781408191873"
              }
            },
            {
              "v": {
                "v": "9781900621748, 9781900621731, 9781900621748, 9781900621731",
                "l": "9781900621748, 9781900621731, 9781900621748, 9781900621731"
              }
            },
            {
              "v": {
                "v": "9780230584693, 9780230584686, 9780230584693, 9780230584686",
                "l": "9780230584693, 9780230584686, 9780230584693, 9780230584686"
              }
            },
            {
              "v": {
                "v": "9781496339072, 9781496339065, 9781496339072, 9781496339065",
                "l": "9781496339072, 9781496339065, 9781496339072, 9781496339065"
              }
            },
            {
              "v": {
                "v": "9781598570793, 9781598570809, 9781598570793, 9781598570809",
                "l": "9781598570793, 9781598570809, 9781598570793, 9781598570809"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:if(substring(value,15,28)==substring(value,30,43),substring(value,0,28),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:if(substring(value,15,28)==substring(value,30,43),substring(value,0,28),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "ISBN13S_CLEAN",
          "expression": "value",
          "columnName": "ISBN13S_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "9781492572350, 9781492561149, 9781492572350, 9781492570592, 9781492561149, 9781492570592",
                "l": "9781492572350, 9781492561149, 9781492572350, 9781492570592, 9781492561149, 9781492570592"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:substring(value,0,28) + \", \" + substring(value,45,58)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:substring(value,0,28) + \", \" + substring(value,45,58)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "ISBN13S_CLEAN",
          "expression": "value",
          "columnName": "ISBN13S_CLEAN",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "9780203127650, 9780415434317, 9780415434300, 9780415434317, 9780415434300, 9780203127650",
                "l": "9780203127650, 9780415434317, 9780415434300, 9780415434317, 9780415434300, 9780203127650"
              }
            },
            {
              "v": {
                "v": "9781492572350, 9781492561149, 9781492572350, 9781492570592, 9781492561149, 9781492570592",
                "l": "9781492572350, 9781492561149, 9781492572350, 9781492570592, 9781492561149, 9781492570592"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:substring(value,0,43)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:substring(value,0,43)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": ",$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "value.replace(\",\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression value.replace(\",\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": ",[A-Za-z0-9]",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "value.replace(\",\",\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression value.replace(\",\",\", \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "\\(.+?\\)",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/\\(.+?\\)/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/\\(.+?\\)/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(\" ,\", \",\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(\" ,\", \",\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "ISBN",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/E?ISBN /,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/E?ISBN /,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "^\\d{1}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "^\\d{9}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "^\\d{10}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S",
    "expression": "grel:cells['ISBN13S_CLEAN'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S using expression grel:cells['ISBN13S_CLEAN'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "^\\d{10}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "^\\d{12}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "^\\d{14}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISBN13S",
          "columnName": "ISBN13S",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "ISSNS",
          "columnName": "ISSNS",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression null"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "ISBN10S",
    "expression": "grel:null",
    "onError": "set-to-blank",
    "newColumnName": "ISBN10S_CLEAN",
    "columnInsertIndex": 9,
    "description": "Create column ISBN10S_CLEAN at index 9 based on column ISBN10S using expression grel:null"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "I(EI)SSNS",
    "newColumnName": "I(EI)SSNS_CLEAN",
    "description": "Rename column I(EI)SSNS to I(EI)SSNS_CLEAN"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S",
          "columnName": "ISBN10S",
          "query": "{",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S",
    "expression": "grel:value.replace(\"{\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S using expression grel:value.replace(\"{\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S",
          "columnName": "ISBN10S",
          "query": "^\\d{10}$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:cells['ISBN10S'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:cells['ISBN10S'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "^\\d{9}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S",
          "columnName": "ISBN10S",
          "query": "^\\d{9}[A-Za-z0-9]$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:if(value==null,cells['ISBN10S'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:if(value==null,cells['ISBN10S'].value,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "E",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "value.replace(\".\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression value.replace(\".\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "E",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(/97E\\d+$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(/97E\\d+$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S",
          "columnName": "ISBN10S",
          "query": "^,",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S",
    "expression": "grel:value.replace(/^, /,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S using expression grel:value.replace(/^, /,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S",
          "columnName": "ISBN10S",
          "query": "E",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:if(value!=null,value,cells['ISBN10S'].value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:if(value!=null,value,cells['ISBN10S'].value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": "E",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "value.replace(\".\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression value.replace(\".\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": "E",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:substring(value,0,10)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:substring(value,0,10)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S",
          "columnName": "ISBN10S",
          "query": ",",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:if(value==null,cells['ISBN10S'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:if(value==null,cells['ISBN10S'].value,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S",
          "columnName": "ISBN10S",
          "query": ",",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "value.replace(\",\",\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression value.replace(\",\",\", \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S",
          "columnName": "ISBN10S",
          "query": ",",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": "^\\d{12}[A-Za-z0-9], \\d{12}[A-Za-z0-9]",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:value.replace(/^\\d{12}[A-Za-z0-9], \\d{12}[A-Za-z0-9],?\\s?/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:value.replace(/^\\d{12}[A-Za-z0-9], \\d{12}[A-Za-z0-9],?\\s?/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": "^\\d{12}[A-Za-z0-9], \\d{12}[A-Za-z0-9]",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:value.replace(/^\\d{12}[A-Za-z0-9], \\d{12}[A-Za-z0-9],?\\s?/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:value.replace(/^\\d{12}[A-Za-z0-9], \\d{12}[A-Za-z0-9],?\\s?/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": "^\\d{12}[A-Za-z0-9],",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:value.replace(/\\d{12}[A-Za-z0-9]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:value.replace(/\\d{12}[A-Za-z0-9]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": "978\\d+,",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:value.replace(/978\\d+,?/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:value.replace(/978\\d+,?/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": ",",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": ",",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:value.replace(\", , \",\", \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:value.replace(\", , \",\", \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": ",",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:value.replace(/^, /,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:value.replace(/^, /,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": ",",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:if(substring(value,0,10)==substring(value,12,22),substring(value,0,10),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:if(substring(value,0,10)==substring(value,12,22),substring(value,0,10),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": ",",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:if(substring(value,0,22)==substring(value,24,46),substring(value,0,22),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:if(substring(value,0,22)==substring(value,24,46),substring(value,0,22),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": ",",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:if(substring(value,12,22)==substring(value,24,34),substring(value,12,22),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:if(substring(value,12,22)==substring(value,24,34),substring(value,12,22),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "value.replace(\"-\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression value.replace(\"-\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "value.replace(\"x\",\"X\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression value.replace(\"x\",\"X\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS_CLEAN",
    "expression": "value.replace(\"x\",\"X\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS_CLEAN using expression value.replace(\"x\",\"X\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "TITLE",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "TITLE_CLEAN",
    "columnInsertIndex": 5,
    "description": "Create column TITLE_CLEAN at index 5 based on column TITLE using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "TITLE_CLEAN",
          "columnName": "TITLE_CLEAN",
          "query": "\\?{2}",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "grel:value.replace(/\\?{2}/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression grel:value.replace(/\\?{2}/,\"\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "TITLE_CLEAN",
          "columnName": "TITLE_CLEAN",
          "query": "^\\?",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "value",
    "edits": [
      {
        "from": [
          "?Little Pig, Little Pig, Yet Me Come In!? Animating The Three Little Pigs with Preschoolers"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Little Pig, Little Pig, Yet Me Come In!? Animating The Three Little Pigs with Preschoolers"
      }
    ],
    "description": "Mass edit cells in column TITLE_CLEAN"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "TITLE",
          "columnName": "TITLE",
          "query": "\"",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "grel:value.replace(/\"+/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression grel:value.replace(/\"+/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "TITLE",
          "columnName": "TITLE",
          "query": " :",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "grel:value.replace(\" :\",\":\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression grel:value.replace(\" :\",\":\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "TITLE",
          "columnName": "TITLE",
          "query": ",$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "grel:value.replace(/,$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression grel:value.replace(/,$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "TITLE",
          "columnName": "TITLE",
          "query": "\\.$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "grel:value.replace(/\\.$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression grel:value.replace(/\\.$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "TITLE",
          "columnName": "TITLE",
          "query": ":$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "grel:value.replace(/:$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression grel:value.replace(/:$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "TITLE",
          "columnName": "TITLE",
          "query": ";$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "grel:value.replace(/;$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression grel:value.replace(/;$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "value.toLowercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression value.toLowercase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "COURSENAME_CLEAN",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME_CLEAN using expression value.toTitlecase()"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "I(EI)SSNS_CLEAN",
    "keyColumnName": "ID",
    "mode": "separator",
    "separator": ",",
    "regex": false,
    "description": "Split multi-valued cells in column I(EI)SSNS_CLEAN"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "I(EI)SSNS_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column I(EI)SSNS_CLEAN using expression value.trim()"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "ISBN13S_CLEAN",
    "keyColumnName": "ID",
    "mode": "separator",
    "separator": ",",
    "regex": false,
    "description": "Split multi-valued cells in column ISBN13S_CLEAN"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression value.trim()"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "ISBN10S_CLEAN",
    "keyColumnName": "ID",
    "mode": "separator",
    "separator": ",",
    "regex": false,
    "description": "Split multi-valued cells in column ISBN10S_CLEAN"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN10S_CLEAN",
          "columnName": "ISBN10S_CLEAN",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "ISBN13S_CLEAN",
          "columnName": "ISBN13S_CLEAN",
          "query": "\\d+\\s\\d+",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:value.replace(\" \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:value.replace(\" \",\"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "ISBN10S_CLEAN",
    "expression": "join ([coalesce(cells['ISBN10S_CLEAN'].value,''),coalesce(cells['ISBN13S_CLEAN'].value,''),coalesce(cells['I(EI)SSNS_CLEAN'].value,''),coalesce(cells['DOI'].value,'')],',')",
    "onError": "keep-original",
    "newColumnName": "RESOURCE_IDENTIFIER",
    "columnInsertIndex": 11,
    "description": "Create column RESOURCE_IDENTIFIER at index 11 based on column ISBN10S_CLEAN using expression join ([coalesce(cells['ISBN10S_CLEAN'].value,''),coalesce(cells['ISBN13S_CLEAN'].value,''),coalesce(cells['I(EI)SSNS_CLEAN'].value,''),coalesce(cells['DOI'].value,'')],',')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "RESOURCE_IDENTIFIER",
          "columnName": "RESOURCE_IDENTIFIER",
          "query": ",{3}",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "RESOURCE_IDENTIFIER",
    "expression": "grel:value.replace(/,{3}/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_IDENTIFIER using expression grel:value.replace(/,{3}/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "RESOURCE_IDENTIFIER",
          "columnName": "RESOURCE_IDENTIFIER",
          "query": ",{2}",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "RESOURCE_IDENTIFIER",
    "expression": "grel:value.replace(/,{2}/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_IDENTIFIER using expression grel:value.replace(/,{2}/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "RESOURCE_IDENTIFIER",
          "columnName": "RESOURCE_IDENTIFIER",
          "query": ",$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "RESOURCE_IDENTIFIER",
    "expression": "grel:value.replace(/,$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_IDENTIFIER using expression grel:value.replace(/,$/,\"\")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "RESOURCE_IDENTIFIER",
    "keyColumnName": "ID",
    "mode": "separator",
    "separator": ",",
    "regex": false,
    "description": "Split multi-valued cells in column RESOURCE_IDENTIFIER"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "RESOURCE_IDENTIFIER",
    "expression": "grel:if(value.contains(\"doi\"),\"DOI\",null)",
    "onError": "set-to-blank",
    "newColumnName": "RESOURCE_IDENTIFIER_NAME",
    "columnInsertIndex": 12,
    "description": "Create column RESOURCE_IDENTIFIER_NAME at index 12 based on column RESOURCE_IDENTIFIER using expression grel:if(value.contains(\"doi\"),\"DOI\",null)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "RESOURCE_IDENTIFIER_NAME",
    "expression": "grel:if(cells['RESOURCE_IDENTIFIER'].value.contains(/^\\d{4}-/),\"I(EI)SSN\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_IDENTIFIER_NAME using expression grel:if(cells['RESOURCE_IDENTIFIER'].value.contains(/^\\d{4}-/),\"I(EI)SSN\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "RESOURCE_IDENTIFIER_NAME",
    "expression": "grel:if(cells['RESOURCE_IDENTIFIER'].value.contains(/^\\d{13}$/),\"ISBN13\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_IDENTIFIER_NAME using expression grel:if(cells['RESOURCE_IDENTIFIER'].value.contains(/^\\d{13}$/),\"ISBN13\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "RESOURCE_IDENTIFIER_NAME",
    "expression": "grel:if(cells['RESOURCE_IDENTIFIER'].value.contains(/^\\d{10}$/),\"ISBN10\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_IDENTIFIER_NAME using expression grel:if(cells['RESOURCE_IDENTIFIER'].value.contains(/^\\d{10}$/),\"ISBN10\",value)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ID",
    "newColumnName": "UNI_ID",
    "description": "Rename column ID to UNI_ID"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "UNI_ID",
    "expression": "grel:row.record.index + 1",
    "onError": "set-to-blank",
    "newColumnName": "ID",
    "columnInsertIndex": 1,
    "description": "Create column ID at index 1 based on column UNI_ID using expression grel:row.record.index + 1"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ID",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ID using expression value.toString()"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ID",
    "newColumnName": "RECORD_ID",
    "description": "Rename column ID to RECORD_ID"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "RECORD_ID",
    "expression": "grel:row.index + 1",
    "onError": "set-to-blank",
    "newColumnName": "ROW_ID",
    "columnInsertIndex": 2,
    "description": "Create column ROW_ID at index 2 based on column RECORD_ID using expression grel:row.index + 1"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ROW_ID",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ROW_ID using expression value.toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_IDENTIFIER_NAME",
    "expression": "grel:if(cells['RESOURCE_IDENTIFIER'].value.contains(/^\\d{9}X$/),\"ISBN10\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_IDENTIFIER_NAME using expression grel:if(cells['RESOURCE_IDENTIFIER'].value.contains(/^\\d{9}X$/),\"ISBN10\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_IDENTIFIER_NAME",
    "expression": "grel:if(cells['RESOURCE_IDENTIFIER'].value.contains(\".x\"),\"DOI\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_IDENTIFIER_NAME using expression grel:if(cells['RESOURCE_IDENTIFIER'].value.contains(\".x\"),\"DOI\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RESOURCE_IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "RESOURCE_IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "RESOURCE_IDENTIFIER",
          "columnName": "RESOURCE_IDENTIFIER",
          "query": "http",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "RESOURCE_IDENTIFIER",
    "expression": "grel:value.replace(/.+?(?=10\\.)/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_IDENTIFIER using expression grel:value.replace(/.+?(?=10\\.)/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "COURSENAME_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column COURSENAME_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ITEM_COUNT",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ITEM_COUNT using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "RESOURCE_TYPE_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ISBN10S_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ISBN13S_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "DOI",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column DOI using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EDITION_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EDITORS_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "PUBLISHER_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "PUB_DATE_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "VOLUME_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "PAGES_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGES_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "AUTHORS_CLEAN",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS_CLEAN using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "NAME",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NAME using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "TITLE",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "RESOURCE_TYPE",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_TYPE using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "SUBTITLE",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ISBN10S",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN10S using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ISBN13S",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISBN13S using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ISSNS",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ISSNS using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EISSNS",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EISSNS using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EDITION",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITION using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EDITORS",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column EDITORS using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "PUBLISHER",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUBLISHER using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "PUB_DATE",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PUB_DATE using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "VOLUME",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VOLUME using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "PAGE_END",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PAGE_END using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "AUTHORS",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AUTHORS using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "SUBTITLE",
    "expression": "grel:if(cells.TITLE.value==cells.SUBTITLE.value,null,cells.SUBTITLE.value)",
    "onError": "set-to-blank",
    "newColumnName": "SUBTITLE_CLEAN",
    "columnInsertIndex": 11,
    "description": "Create column SUBTITLE_CLEAN at index 11 based on column SUBTITLE using expression grel:if(cells.TITLE.value==cells.SUBTITLE.value,null,cells.SUBTITLE.value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "TITLE_CLEAN",
    "expression": "value.replace(/\\bnan\\b/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_CLEAN using expression value.replace(/\\bnan\\b/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "SUBTITLE_CLEAN",
    "expression": "value.toLowercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE_CLEAN using expression value.toLowercase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "SUBTITLE_CLEAN",
    "expression": "grel:value.replace(\" :\",\":\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE_CLEAN using expression grel:value.replace(\" :\",\":\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "SUBTITLE_CLEAN",
    "expression": "value.replace(\"\\\"\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE_CLEAN using expression value.replace(\"\\\"\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "SUBTITLE_CLEAN",
    "expression": "grel:value.replace(/\\.$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE_CLEAN using expression grel:value.replace(/\\.$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "SUBTITLE_CLEAN",
    "expression": "value.replace(/\\\\/,\"'\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE_CLEAN using expression value.replace(/\\\\/,\"'\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "RESOURCE_IDENTIFIER_NAME",
    "expression": "value.replace(\"I(EI)SSN\",\"ISSN\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RESOURCE_IDENTIFIER_NAME using expression value.replace(\"I(EI)SSN\",\"ISSN\")"
  },
  {
    "op": "core/column-removal",
    "columnName": "NAME",
    "description": "Remove column NAME"
  },
  {
    "op": "core/column-removal",
    "columnName": "TITLE",
    "description": "Remove column TITLE"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "TITLE_CLEAN",
    "newColumnName": "TITLE",
    "description": "Rename column TITLE_CLEAN to TITLE"
  },
  {
    "op": "core/column-removal",
    "columnName": "RESOURCE_TYPE",
    "description": "Remove column RESOURCE_TYPE"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "RESOURCE_TYPE_CLEAN",
    "newColumnName": "RESOURCE_TYPE",
    "description": "Rename column RESOURCE_TYPE_CLEAN to RESOURCE_TYPE"
  },
  {
    "op": "core/column-removal",
    "columnName": "SUBTITLE",
    "description": "Remove column SUBTITLE"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "SUBTITLE_CLEAN",
    "newColumnName": "SUBTITLE",
    "description": "Rename column SUBTITLE_CLEAN to SUBTITLE"
  },
  {
    "op": "core/column-move",
    "columnName": "SUBTITLE",
    "index": 6,
    "description": "Move column SUBTITLE to position 6"
  },
  {
    "op": "core/column-removal",
    "columnName": "ISBN10S",
    "description": "Remove column ISBN10S"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ISBN10S_CLEAN",
    "newColumnName": "ISBN10",
    "description": "Rename column ISBN10S_CLEAN to ISBN10"
  },
  {
    "op": "core/column-move",
    "columnName": "ISBN10",
    "index": 9,
    "description": "Move column ISBN10 to position 9"
  },
  {
    "op": "core/column-move",
    "columnName": "ISBN10",
    "index": 10,
    "description": "Move column ISBN10 to position 10"
  },
  {
    "op": "core/column-removal",
    "columnName": "ISBN13S",
    "description": "Remove column ISBN13S"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ISBN13S_CLEAN",
    "newColumnName": "ISBN13",
    "description": "Rename column ISBN13S_CLEAN to ISBN13"
  },
  {
    "op": "core/column-removal",
    "columnName": "ISSNS",
    "description": "Remove column ISSNS"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "I(EI)SSNS_CLEAN",
    "newColumnName": "ISSN",
    "description": "Rename column I(EI)SSNS_CLEAN to ISSN"
  },
  {
    "op": "core/column-removal",
    "columnName": "EISSNS",
    "description": "Remove column EISSNS"
  },
  {
    "op": "core/column-removal",
    "columnName": "EDITION",
    "description": "Remove column EDITION"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "EDITION_CLEAN",
    "newColumnName": "EDITION",
    "description": "Rename column EDITION_CLEAN to EDITION"
  },
  {
    "op": "core/column-removal",
    "columnName": "EDITORS",
    "description": "Remove column EDITORS"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "EDITORS_CLEAN",
    "newColumnName": "EDITORS",
    "description": "Rename column EDITORS_CLEAN to EDITORS"
  },
  {
    "op": "core/column-removal",
    "columnName": "PUBLISHER",
    "description": "Remove column PUBLISHER"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PUBLISHER_CLEAN",
    "newColumnName": "PUBLISHER",
    "description": "Rename column PUBLISHER_CLEAN to PUBLISHER"
  },
  {
    "op": "core/column-removal",
    "columnName": "PUB_DATE",
    "description": "Remove column PUB_DATE"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PUB_DATE_CLEAN",
    "newColumnName": "PUB_DATE",
    "description": "Rename column PUB_DATE_CLEAN to PUB_DATE"
  },
  {
    "op": "core/column-removal",
    "columnName": "VOLUME",
    "description": "Remove column VOLUME"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "VOLUME_CLEAN",
    "newColumnName": "VOLUME",
    "description": "Rename column VOLUME_CLEAN to VOLUME"
  },
  {
    "op": "core/column-removal",
    "columnName": "PAGE_END",
    "description": "Remove column PAGE_END"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PAGES_CLEAN",
    "newColumnName": "PAGES",
    "description": "Rename column PAGES_CLEAN to PAGES"
  },
  {
    "op": "core/column-removal",
    "columnName": "AUTHORS",
    "description": "Remove column AUTHORS"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "AUTHORS_CLEAN",
    "newColumnName": "AUTHORS",
    "description": "Rename column AUTHORS_CLEAN to AUTHORS"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RESOURCE_IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "RESOURCE_IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "RESOURCE_IDENTIFIER",
    "urlExpression": "grel:'http://classify.oclc.org/classify2/Classify?isbn='+value+'&detail=true'",
    "onError": "store-error",
    "newColumnName": "OCLC_metadata",
    "columnInsertIndex": 9,
    "delay": 1000,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column OCLC_metadata at index 9 by fetching URLs based on column RESOURCE_IDENTIFIER using expression grel:'http://classify.oclc.org/classify2/Classify?isbn='+value+'&detail=true'"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RESOURCE_IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "RESOURCE_IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_metadata",
          "expression": "isBlank(value)",
          "columnName": "OCLC_metadata",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "RESOURCE_IDENTIFIER",
    "urlExpression": "grel:'http://classify.oclc.org/classify2/Classify?isbn='+value+'&detail=true'",
    "onError": "set-to-blank",
    "newColumnName": "temp",
    "columnInsertIndex": 9,
    "delay": 5000,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column temp at index 9 by fetching URLs based on column RESOURCE_IDENTIFIER using expression grel:'http://classify.oclc.org/classify2/Classify?isbn='+value+'&detail=true'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RESOURCE_IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "RESOURCE_IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_metadata",
          "expression": "isBlank(value)",
          "columnName": "OCLC_metadata",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_metadata",
    "expression": "grel:cells.temp.value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_metadata using expression grel:cells.temp.value"
  },
  {
    "op": "core/column-removal",
    "columnName": "temp",
    "description": "Remove column temp"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "UNI_ID",
    "expression": "grel:if(value==\"3\",\"UniB\",null)",
    "onError": "set-to-blank",
    "newColumnName": "UNI_NAME",
    "columnInsertIndex": 1,
    "description": "Create column UNI_NAME at index 1 based on column UNI_ID using expression grel:if(value==\"3\",\"UniB\",null)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "UNI_NAME",
    "expression": "grel:if(cells.UNI_ID.value==\"2\",\"UniA\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column UNI_NAME using expression grel:if(cells.UNI_ID.value==\"2\",\"UniA\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "UNI_NAME",
    "expression": "grel:if(cells.UNI_ID.value==\"4\",\"UniC\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column UNI_NAME using expression grel:if(cells.UNI_ID.value==\"4\",\"UniC\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "UNI_NAME",
    "expression": "grel:if(cells.UNI_ID.value==\"5\",\"UniD\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column UNI_NAME using expression grel:if(cells.UNI_ID.value==\"5\",\"UniD\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "UNI_NAME",
    "expression": "grel:row.record.cells[columnName].value[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column UNI_NAME using expression grel:row.record.cells[columnName].value[0]"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "UNI_ID",
    "newColumnName": "UNI_ID_old",
    "description": "Rename column UNI_ID to UNI_ID_old"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "UNI_NAME",
    "expression": "grel:if(value==\"UniA\",\"2\",null)",
    "onError": "set-to-blank",
    "newColumnName": "UNI_ID",
    "columnInsertIndex": 2,
    "description": "Create column UNI_ID at index 2 based on column UNI_NAME using expression grel:if(value==\"UniA\",\"2\",null)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "UNI_ID",
    "expression": "grel:if(cells.UNI_NAME.value==\"UniB\",\"3\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column UNI_ID using expression grel:if(cells.UNI_NAME.value==\"UniB\",\"3\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "UNI_ID",
    "expression": "grel:if(cells.UNI_NAME.value==\"UniC\",\"4\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column UNI_ID using expression grel:if(cells.UNI_NAME.value==\"UniC\",\"4\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "UNI_ID",
    "expression": "grel:if(cells.UNI_NAME.value==\"UniD\",\"5\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column UNI_ID using expression grel:if(cells.UNI_NAME.value==\"UniD\",\"5\",value)"
  },
  {
    "op": "core/column-removal",
    "columnName": "UNI_NAME",
    "description": "Remove column UNI_NAME"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "COURSENAME_CLEAN",
    "newColumnName": "COURSENAME",
    "description": "Rename column COURSENAME_CLEAN to COURSENAME"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "RESOURCE_IDENTIFIER",
    "newColumnName": "IDENTIFIER",
    "description": "Rename column RESOURCE_IDENTIFIER to IDENTIFIER"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "RESOURCE_IDENTIFIER_NAME",
    "newColumnName": "IDENTIFIER_NAME",
    "description": "Rename column RESOURCE_IDENTIFIER_NAME to IDENTIFIER_NAME"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "EDITORS",
    "newColumnName": "EDITOR",
    "description": "Rename column EDITORS to EDITOR"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "AUTHORS",
    "newColumnName": "AUTHOR",
    "description": "Rename column AUTHORS to AUTHOR"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "IDENTIFIER",
    "urlExpression": "grel:'http://classify.oclc.org/classify2/Classify?isbn='+value+'&detail=true'",
    "onError": "set-to-blank",
    "newColumnName": "temp",
    "columnInsertIndex": 10,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column temp at index 10 by fetching URLs based on column IDENTIFIER using expression grel:'http://classify.oclc.org/classify2/Classify?isbn='+value+'&detail=true'"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "IDENTIFIER",
    "urlExpression": "grel:'http://classify.oclc.org/classify2/Classify?issn='+value+'&detail=true'",
    "onError": "store-error",
    "newColumnName": "ttempIISNs",
    "columnInsertIndex": 10,
    "delay": 200,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column ttempIISNs at index 10 by fetching URLs based on column IDENTIFIER using expression grel:'http://classify.oclc.org/classify2/Classify?issn='+value+'&detail=true'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "OCLC_metadata",
    "expression": "grel:if(cells['IDENTIFIER_NAME'].value==\"ISSN\",cells['ttempIISNs'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_metadata using expression grel:if(cells['IDENTIFIER_NAME'].value==\"ISSN\",cells['ttempIISNs'].value,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "OCLC_metadata",
    "expression": "grel:if(cells['IDENTIFIER_NAME'].value==\"ISBN13\",cells['temp'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_metadata using expression grel:if(cells['IDENTIFIER_NAME'].value==\"ISBN13\",cells['temp'].value,value)"
  },
  {
    "op": "core/column-removal",
    "columnName": "ttempIISNs",
    "description": "Remove column ttempIISNs"
  },
  {
    "op": "core/column-removal",
    "columnName": "temp",
    "description": "Remove column temp"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "TITLE",
          "columnName": "TITLE",
          "query": " /$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE",
    "expression": "grel:value.replace(/\\.? \\/$/,'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE using expression grel:value.replace(/\\.? \\/$/,'')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "TITLE",
    "expression": "grel:value.replace(\":\", \" :\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE using expression grel:value.replace(\":\", \" :\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "SUBTITLE",
    "expression": "grel:value.replace(\":\", \" :\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE using expression grel:value.replace(\":\", \" :\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_metadata",
    "expression": "grel:value.parseXml().select(\"works\")[0].split(\"work author=\")[1].split('\"')[0]",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_AUTHOR",
    "columnInsertIndex": 11,
    "description": "Create column OCLC_AUTHOR at index 11 based on column OCLC_metadata using expression grel:value.parseXml().select(\"works\")[0].split(\"work author=\")[1].split('\"')[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_metadata",
    "expression": "grel:value.parseXml().select(\"works\")[0].split(\"format=\")[1].split('\"')[0]",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_FORMAT",
    "columnInsertIndex": 11,
    "description": "Create column OCLC_FORMAT at index 11 based on column OCLC_metadata using expression grel:value.parseXml().select(\"works\")[0].split(\"format=\")[1].split('\"')[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_TITLE",
          "expression": "isBlank(value)",
          "columnName": "OCLC_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "test",
          "expression": "value",
          "columnName": "test",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "test v2",
          "expression": "value",
          "columnName": "test v2",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_metadata",
    "expression": "grel:value.parseXml().select(\"work\")[0].xmlAttr(\"title\")",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_TITLE",
    "columnInsertIndex": 11,
    "description": "Create column OCLC_TITLE at index 11 based on column OCLC_metadata using expression grel:value.parseXml().select(\"work\")[0].xmlAttr(\"title\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            },
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            },
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            },
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_metadata",
    "expression": "grel:value.parseXml().select(\"classify\")[0].innerXml().find(/\\d+/)[0]",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_RESPONSE_CODE",
    "columnInsertIndex": 11,
    "description": "Create column OCLC_RESPONSE_CODE at index 11 based on column OCLC_metadata using expression grel:value.parseXml().select(\"classify\")[0].innerXml().find(/\\d+/)[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            },
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            },
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            },
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_metadata",
    "expression": "grel:value.parseXml().select(\"work\")[0].xmlAttr(\"format\")",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_FORMAT2",
    "columnInsertIndex": 11,
    "description": "Create column OCLC_FORMAT2 at index 11 based on column OCLC_metadata using expression grel:value.parseXml().select(\"work\")[0].xmlAttr(\"format\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            },
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            },
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            },
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_metadata",
    "expression": "grel:value.parseXml().select(\"classify\")[0].innerXml().find(/response code=\"(\\d+)\"/)[0].find(/\\d+/)[0].toString()",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_RESPONSE_CODE2",
    "columnInsertIndex": 11,
    "description": "Create column OCLC_RESPONSE_CODE2 at index 11 based on column OCLC_metadata using expression grel:value.parseXml().select(\"classify\")[0].innerXml().find(/response code=\"(\\d+)\"/)[0].find(/\\d+/)[0].toString()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            },
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            },
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            },
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_metadata",
    "expression": "grel:value.parseXml().select(\"work\")[0].xmlAttr(\"author\")",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_AUTHOR2",
    "columnInsertIndex": 11,
    "description": "Create column OCLC_AUTHOR2 at index 11 based on column OCLC_metadata using expression grel:value.parseXml().select(\"work\")[0].xmlAttr(\"author\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            },
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            },
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            },
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_metadata",
    "expression": "grel:value.parseXml().select(\"work\")[0].xmlAttr(\"hyr\")",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_HYR",
    "columnInsertIndex": 11,
    "description": "Create column OCLC_HYR at index 11 based on column OCLC_metadata using expression grel:value.parseXml().select(\"work\")[0].xmlAttr(\"hyr\")"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "UNI_ID_old",
      "UNI_ID",
      "RECORD_ID",
      "ROW_ID",
      "COURSENAME",
      "ITEM_COUNT",
      "TITLE",
      "SUBTITLE",
      "RESOURCE_TYPE",
      "IDENTIFIER",
      "OCLC_metadata",
      "OCLC_HYR",
      "OCLC_AUTHOR2",
      "OCLC_RESPONSE_CODE2",
      "OCLC_FORMAT2",
      "OCLC_TITLE",
      "IDENTIFIER_NAME",
      "ISBN10",
      "ISBN13",
      "ISSN",
      "DOI",
      "EDITION",
      "EDITOR",
      "PUBLISHER",
      "PUB_DATE",
      "VOLUME",
      "PAGES",
      "AUTHOR"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "UNI_ID_old",
      "UNI_ID",
      "RECORD_ID",
      "ROW_ID",
      "COURSENAME",
      "ITEM_COUNT",
      "TITLE",
      "SUBTITLE",
      "RESOURCE_TYPE",
      "IDENTIFIER_NAME",
      "IDENTIFIER",
      "OCLC_metadata",
      "OCLC_RESPONSE_CODE2",
      "OCLC_TITLE",
      "OCLC_FORMAT2",
      "OCLC_AUTHOR2",
      "OCLC_HYR",
      "ISBN10",
      "ISBN13",
      "ISSN",
      "DOI",
      "EDITION",
      "EDITOR",
      "PUBLISHER",
      "PUB_DATE",
      "VOLUME",
      "PAGES",
      "AUTHOR"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            },
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            },
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            },
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "OCLC_TITLE",
          "columnName": "OCLC_TITLE",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "OCLC_TITLE",
    "expression": "grel:value.replace(\"&amp;\",\"&\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_TITLE using expression grel:value.replace(\"&amp;\",\"&\")"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "OCLC_RESPONSE_CODE2",
    "newColumnName": "OCLC_RESPONSE_CODE",
    "description": "Rename column OCLC_RESPONSE_CODE2 to OCLC_RESPONSE_CODE"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "OCLC_FORMAT2",
    "newColumnName": "OCLC_FORMAT",
    "description": "Rename column OCLC_FORMAT2 to OCLC_FORMAT"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "OCLC_AUTHOR2",
    "newColumnName": "OCLC_AUTHOR",
    "description": "Rename column OCLC_AUTHOR2 to OCLC_AUTHOR"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TITLE",
    "expression": "grel:value[0].toUppercase()+value.get(1,9999)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE using expression grel:value[0].toUppercase()+value.get(1,9999)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SUBTITLE",
    "expression": "grel:value[0].toUppercase()+value.get(1,9999)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE using expression grel:value[0].toUppercase()+value.get(1,9999)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            },
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            },
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_FAST_HEADINGS",
          "expression": "isBlank(value)",
          "columnName": "OCLC_FAST_HEADINGS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_metadata",
    "expression": "grel:value.parseXml().select(\"heading\")[0].xmlText() + \"; \" + value.parseXml().select(\"heading\")[1].xmlText() + \"; \" + \nvalue.parseXml().select(\"heading\")[2].xmlText()",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_FAST_HEADINGS",
    "columnInsertIndex": 12,
    "description": "Create column OCLC_FAST_HEADINGS at index 12 based on column OCLC_metadata using expression grel:value.parseXml().select(\"heading\")[0].xmlText() + \"; \" + value.parseXml().select(\"heading\")[1].xmlText() + \"; \" + \nvalue.parseXml().select(\"heading\")[2].xmlText()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ROW_ID",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ROW_ID using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            },
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            },
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE",
    "expression": "grel:value.replace(/ \\/.*/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE using expression grel:value.replace(/ \\/.*/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            },
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            },
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "SUBTITLE",
    "expression": "grel:value.replace(/ \\/.*/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE using expression grel:value.replace(/ \\/.*/,\"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "TITLE",
    "expression": "grel:value.find(/\\w+\\s?/).join(\"%20\").replace(\" \",\"\")",
    "onError": "set-to-blank",
    "newColumnName": "API_TITLE",
    "columnInsertIndex": 7,
    "description": "Create column API_TITLE at index 7 based on column TITLE using expression grel:value.find(/\\w+\\s?/).join(\"%20\").replace(\" \",\"\")"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'http://classify.oclc.org/classify2/Classify?title='+value+'&detail=true&maxRecs=1'",
    "onError": "set-to-blank",
    "newColumnName": "OCLC",
    "columnInsertIndex": 8,
    "delay": 100,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column OCLC at index 8 by fetching URLs based on column API_TITLE using expression grel:'http://classify.oclc.org/classify2/Classify?title='+value+'&detail=true&maxRecs=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_metadata",
    "expression": "grel:if(value==null,cells['OCLC'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_metadata using expression grel:if(value==null,cells['OCLC'].value,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC using expression null"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "OCLC_metadata",
    "newColumnName": "OCLC_XML",
    "description": "Rename column OCLC_metadata to OCLC_XML"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "GoogleBooks_AML",
    "columnInsertIndex": 8,
    "delay": 200,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column GoogleBooks_AML at index 8 by fetching URLs based on column API_TITLE using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "GoogleBooks_AML",
    "newColumnName": "GoogleBooks_XML",
    "description": "Rename column GoogleBooks_AML to GoogleBooks_XML"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 0,
          "to": 40000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "IDENTIFIER",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "GoogleBooks",
    "columnInsertIndex": 14,
    "delay": 200,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column GoogleBooks at index 14 by fetching URLs based on column IDENTIFIER using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_RESPONSE_CODE",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"classify\")[0].innerXml().find(/response code=\"(\\d+)\"/)[0].find(/\\d+/)[0].toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_RESPONSE_CODE using expression grel:cells['OCLC_XML'].value.parseXml().select(\"classify\")[0].innerXml().find(/response code=\"(\\d+)\"/)[0].find(/\\d+/)[0].toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_TITLE",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"title\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_TITLE using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"title\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_AUTHOR",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"author\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_AUTHOR using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"author\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FORMAT",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"format\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FORMAT using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"format\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "DOI",
                "l": "DOI"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_HYR",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"hyr\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_HYR using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"hyr\")"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 0,
          "to": 2000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "IDENTIFIER",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "store-error",
    "newColumnName": "temp",
    "columnInsertIndex": 14,
    "delay": 200,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column temp at index 14 by fetching URLs based on column IDENTIFIER using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "GoogleBooks_XML",
    "newColumnName": "GoogleBooks_JSON",
    "description": "Rename column GoogleBooks_XML to GoogleBooks_JSON"
  },
  {
    "op": "core/column-removal",
    "columnName": "temp",
    "description": "Remove column temp"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 40000,
          "to": 50000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        },
        {
          "type": "list",
          "name": "GoogleBooks",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "IDENTIFIER",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "temp",
    "columnInsertIndex": 14,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column temp at index 14 by fetching URLs based on column IDENTIFIER using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GoogleBooks",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "OCLC_XML",
          "columnName": "OCLC_XML",
          "query": "heading",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "OCLC_FAST_HEADINGS",
          "expression": "isBlank(value)",
          "columnName": "OCLC_FAST_HEADINGS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FAST_HEADINGS",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"heading\")[0].xmlText() + \"; \" + cells['OCLC_XML'].value.parseXml().select(\"heading\")[1].xmlText()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FAST_HEADINGS using expression grel:cells['OCLC_XML'].value.parseXml().select(\"heading\")[0].xmlText() + \"; \" + cells['OCLC_XML'].value.parseXml().select(\"heading\")[1].xmlText()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 40000,
          "to": 50000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:cells.temp.value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:cells.temp.value"
  },
  {
    "op": "core/column-removal",
    "columnName": "temp",
    "description": "Remove column temp"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "OCLC_XML",
          "columnName": "OCLC_XML",
          "query": "heading",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FAST_HEADINGS",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"heading\")[0].xmlText() + \"; \" + cells['OCLC_XML'].value.parseXml().select(\"heading\")[1].xmlText() + \"; \" + cells['OCLC_XML'].value.parseXml().select(\"heading\")[2].xmlText()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FAST_HEADINGS using expression grel:cells['OCLC_XML'].value.parseXml().select(\"heading\")[0].xmlText() + \"; \" + cells['OCLC_XML'].value.parseXml().select(\"heading\")[1].xmlText() + \"; \" + cells['OCLC_XML'].value.parseXml().select(\"heading\")[2].xmlText()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "OCLC_XML",
          "columnName": "OCLC_XML",
          "query": "heading",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FAST_HEADINGS",
    "expression": "grel:if(value==null,cells['OCLC_XML'].value.parseXml().select(\"heading\")[0].xmlText() + \"; \" + cells['OCLC_XML'].value.parseXml().select(\"heading\")[1].xmlText(),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FAST_HEADINGS using expression grel:if(value==null,cells['OCLC_XML'].value.parseXml().select(\"heading\")[0].xmlText() + \"; \" + cells['OCLC_XML'].value.parseXml().select(\"heading\")[1].xmlText(),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "OCLC_XML",
          "columnName": "OCLC_XML",
          "query": "heading",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FAST_HEADINGS",
    "expression": "grel:if(value==null,cells['OCLC_XML'].value.parseXml().select(\"heading\")[0].xmlText(),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FAST_HEADINGS using expression grel:if(value==null,cells['OCLC_XML'].value.parseXml().select(\"heading\")[0].xmlText(),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GoogleBooks",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:cells['GoogleBooks'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:cells['GoogleBooks'].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "GoogleBooks",
    "description": "Remove column GoogleBooks"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 50000,
          "to": 78000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "IDENTIFIER",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "store-error",
    "newColumnName": "temp",
    "columnInsertIndex": 14,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column temp at index 14 by fetching URLs based on column IDENTIFIER using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 50000,
          "to": 78000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:cells.temp.value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:cells.temp.value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN10",
                "l": "ISBN10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 50000,
          "to": 78000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "temp",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column temp using expression null"
  },
  {
    "op": "core/column-removal",
    "columnName": "OCLC",
    "description": "Remove column OCLC"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "UNI_ID_old",
      "UNI_ID",
      "RECORD_ID",
      "ROW_ID",
      "COURSENAME",
      "ITEM_COUNT",
      "TITLE",
      "API_TITLE",
      "SUBTITLE",
      "RESOURCE_TYPE",
      "IDENTIFIER_NAME",
      "IDENTIFIER",
      "temp",
      "GoogleBooks_JSON",
      "OCLC_XML",
      "OCLC_FAST_HEADINGS",
      "OCLC_RESPONSE_CODE",
      "OCLC_TITLE",
      "OCLC_FORMAT",
      "OCLC_AUTHOR",
      "OCLC_HYR",
      "ISBN10",
      "ISBN13",
      "ISSN",
      "DOI",
      "EDITION",
      "EDITOR",
      "PUBLISHER",
      "PUB_DATE",
      "VOLUME",
      "PAGES",
      "AUTHOR"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/column-removal",
    "columnName": "temp",
    "description": "Remove column temp"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 0,
          "to": 40000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "IDENTIFIER",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "store-error",
    "newColumnName": "temp",
    "columnInsertIndex": 12,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column temp at index 12 by fetching URLs based on column IDENTIFIER using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 0,
          "to": 40000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:cells.temp.value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:cells.temp.value"
  },
  {
    "op": "core/column-removal",
    "columnName": "temp",
    "description": "Remove column temp"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 40000,
          "to": 67000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        },
        {
          "type": "list",
          "name": "GoogleBooks_JSON",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks_JSON",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "IDENTIFIER",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "GBs_temp",
    "columnInsertIndex": 12,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column GBs_temp at index 12 by fetching URLs based on column IDENTIFIER using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:if(value==null,cells['GBs_temp'].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:if(value==null,cells['GBs_temp'].value,value)"
  },
  {
    "op": "core/column-removal",
    "columnName": "GBs_temp",
    "description": "Remove column GBs_temp"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 67000,
          "to": 70000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        },
        {
          "type": "list",
          "name": "GoogleBooks_JSON",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks_JSON",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "IDENTIFIER",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "temp",
    "columnInsertIndex": 12,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column temp at index 12 by fetching URLs based on column IDENTIFIER using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 67000,
          "to": 70000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        },
        {
          "type": "list",
          "name": "GoogleBooks_JSON",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks_JSON",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:cells['temp'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:cells['temp'].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "temp",
    "description": "Remove column temp"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 70000,
          "to": 73000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        },
        {
          "type": "list",
          "name": "GoogleBooks_JSON",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks_JSON",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "temp",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column temp at index 8 by fetching URLs based on column API_TITLE using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISBN13",
                "l": "ISBN13"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 70000,
          "to": 73000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        },
        {
          "type": "list",
          "name": "GoogleBooks_JSON",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks_JSON",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:cells.temp.value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:cells.temp.value"
  },
  {
    "op": "core/column-removal",
    "columnName": "temp",
    "description": "Remove column temp"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_RESPONSE_CODE",
          "expression": "value",
          "columnName": "OCLC_RESPONSE_CODE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "101",
                "l": "101"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_RESPONSE_CODE",
          "expression": "value",
          "columnName": "OCLC_RESPONSE_CODE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "102",
                "l": "102"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression null"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 0,
          "to": 40000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "GBs_ISSN",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column GBs_ISSN at index 8 by fetching URLs based on column API_TITLE using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:cells['GBs_ISSN'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:cells['GBs_ISSN'].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "GBs_ISSN",
    "description": "Remove column GBs_ISSN"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 40000,
          "to": 78000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "GBs_ISSN",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column GBs_ISSN at index 8 by fetching URLs based on column API_TITLE using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ISSN",
                "l": "ISSN"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 40000,
          "to": 78000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:cells['GBs_ISSN'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:cells['GBs_ISSN'].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "GBs_ISSN",
    "description": "Remove column GBs_ISSN"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['title'])[0]",
    "onError": "set-to-blank",
    "newColumnName": "GB_TITLE",
    "columnInsertIndex": 13,
    "description": "Create column GB_TITLE at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['title'])[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['subtitle'])[0]",
    "onError": "set-to-blank",
    "newColumnName": "GB_SUBTITLE",
    "columnInsertIndex": 13,
    "description": "Create column GB_SUBTITLE at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['subtitle'])[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['authors'])[0].join(\"; \")",
    "onError": "set-to-blank",
    "newColumnName": "GB_AUTHOR",
    "columnInsertIndex": 13,
    "description": "Create column GB_AUTHOR at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['authors'])[0].join(\"; \")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "publisher",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['publisher'])[0]",
    "onError": "set-to-blank",
    "newColumnName": "GB_PUBLISHER",
    "columnInsertIndex": 13,
    "description": "Create column GB_PUBLISHER at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['publisher'])[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "publishedDate",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['publishedDate'])[0]",
    "onError": "set-to-blank",
    "newColumnName": "GB_PUBDATE",
    "columnInsertIndex": 13,
    "description": "Create column GB_PUBDATE at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['publishedDate'])[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "description",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['description'])[0]",
    "onError": "set-to-blank",
    "newColumnName": "GB_DESCRIPTION",
    "columnInsertIndex": 13,
    "description": "Create column GB_DESCRIPTION at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['description'])[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "textSnippet",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['searchInfo'])),v,v['textSnippet'])[0]",
    "onError": "set-to-blank",
    "newColumnName": "GB_SNIPPET",
    "columnInsertIndex": 13,
    "description": "Create column GB_SNIPPET at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['searchInfo'])),v,v['textSnippet'])[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "industryIdentifiers",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['industryIdentifiers'])[0].join(\"; \")",
    "onError": "set-to-blank",
    "newColumnName": "GB_IDENTIFIERS",
    "columnInsertIndex": 13,
    "description": "Create column GB_IDENTIFIERS at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['industryIdentifiers'])[0].join(\"; \")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "printType",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['printType'])[0]",
    "onError": "set-to-blank",
    "newColumnName": "GB_PRINT_TYPE",
    "columnInsertIndex": 13,
    "description": "Create column GB_PRINT_TYPE at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['printType'])[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "categories",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['categories'])[0].join(\"; \")",
    "onError": "set-to-blank",
    "newColumnName": "GB_CATEGORIES",
    "columnInsertIndex": 13,
    "description": "Create column GB_CATEGORIES at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['categories'])[0].join(\"; \")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "averageRating",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['averageRating'])[0]",
    "onError": "set-to-blank",
    "newColumnName": "GB_AVG_RATING",
    "columnInsertIndex": 13,
    "description": "Create column GB_AVG_RATING at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['averageRating'])[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "ratings",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['ratingsCount'])[0]",
    "onError": "set-to-blank",
    "newColumnName": "GB_RATING_COUNT",
    "columnInsertIndex": 13,
    "description": "Create column GB_RATING_COUNT at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['ratingsCount'])[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "language",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GoogleBooks_JSON",
    "expression": "grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['language'])[0]",
    "onError": "set-to-blank",
    "newColumnName": "GB_LANGUAGE",
    "columnInsertIndex": 13,
    "description": "Create column GB_LANGUAGE at index 13 based on column GoogleBooks_JSON using expression grel:forEach((forEach((value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['language'])[0]"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 0,
          "to": 26000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'http://classify.oclc.org/classify2/Classify?title='+value+'&detail=true&maxRecs=1'",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_temp",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column OCLC_temp at index 8 by fetching URLs based on column API_TITLE using expression grel:'http://classify.oclc.org/classify2/Classify?title='+value+'&detail=true&maxRecs=1'"
  },
  {
    "op": "core/column-removal",
    "columnName": "OCLC_FAST_HEADINGS",
    "description": "Remove column OCLC_FAST_HEADINGS"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_FAST_HEADINGS",
          "expression": "isBlank(value)",
          "columnName": "OCLC_FAST_HEADINGS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_XML",
    "expression": "grel:forEach(value.parseXml().select(\"heading\"),v,v.xmlText()).join(\"; \")",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_FAST_HEADINGS",
    "columnInsertIndex": 28,
    "description": "Create column OCLC_FAST_HEADINGS at index 28 based on column OCLC_XML using expression grel:forEach(value.parseXml().select(\"heading\"),v,v.xmlText()).join(\"; \")"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 26000,
          "to": 52000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'http://classify.oclc.org/classify2/Classify?title='+value+'&detail=true&maxRecs=1'",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_temp2",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column OCLC_temp2 at index 8 by fetching URLs based on column API_TITLE using expression grel:'http://classify.oclc.org/classify2/Classify?title='+value+'&detail=true&maxRecs=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_temp",
          "expression": "isBlank(value)",
          "columnName": "OCLC_temp",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "grel:cells['OCLC_temp'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression grel:cells['OCLC_temp'].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "OCLC_temp",
    "description": "Remove column OCLC_temp"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_temp2",
          "expression": "isBlank(value)",
          "columnName": "OCLC_temp2",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "grel:cells['OCLC_temp2'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression grel:cells['OCLC_temp2'].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "OCLC_temp2",
    "description": "Remove column OCLC_temp2"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 52000,
          "to": 78000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'http://classify.oclc.org/classify2/Classify?title='+value+'&detail=true&maxRecs=1'",
    "onError": "set-to-blank",
    "newColumnName": "temp_final",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column temp_final at index 8 by fetching URLs based on column API_TITLE using expression grel:'http://classify.oclc.org/classify2/Classify?title='+value+'&detail=true&maxRecs=1'"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 52000,
          "to": 78000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "GB_temp",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column GB_temp at index 8 by fetching URLs based on column API_TITLE using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 26000,
          "to": 52000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "GB_temp2",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column GB_temp2 at index 8 by fetching URLs based on column API_TITLE using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IDENTIFIER_NAME",
          "expression": "value",
          "columnName": "IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "range",
          "name": "ROW_ID",
          "expression": "value",
          "columnName": "ROW_ID",
          "from": 0,
          "to": 26000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "GB_temp3",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column GB_temp3 at index 8 by fetching URLs based on column API_TITLE using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "temp_final",
          "expression": "isBlank(value)",
          "columnName": "temp_final",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "grel:cells['temp_final'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression grel:cells['temp_final'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "temp_final",
          "expression": "isBlank(value)",
          "columnName": "temp_final",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_RESPONSE_CODE",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"classify\")[0].innerXml().find(/response code=\"(\\d+)\"/)[0].find(/\\d+/)[0].toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_RESPONSE_CODE using expression grel:cells['OCLC_XML'].value.parseXml().select(\"classify\")[0].innerXml().find(/response code=\"(\\d+)\"/)[0].find(/\\d+/)[0].toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_RESPONSE_CODE",
          "expression": "value",
          "columnName": "OCLC_RESPONSE_CODE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "100",
                "l": "100"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "temp_final",
          "expression": "isBlank(value)",
          "columnName": "temp_final",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_RESPONSE_CODE",
          "expression": "value",
          "columnName": "OCLC_RESPONSE_CODE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "100",
                "l": "100"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "temp_final",
          "expression": "isBlank(value)",
          "columnName": "temp_final",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_RESPONSE_CODE",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_RESPONSE_CODE using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_RESPONSE_CODE",
          "expression": "value",
          "columnName": "OCLC_RESPONSE_CODE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "102",
                "l": "102"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "temp_final",
          "expression": "isBlank(value)",
          "columnName": "temp_final",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "temp_final",
          "expression": "isBlank(value)",
          "columnName": "temp_final",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_XML",
          "expression": "isBlank(value)",
          "columnName": "OCLC_XML",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FAST_HEADINGS",
    "expression": "grel:forEach(cells['OCLC_XML'].value.parseXml().select(\"heading\"),v,v.xmlText()).join(\"; \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FAST_HEADINGS using expression grel:forEach(cells['OCLC_XML'].value.parseXml().select(\"heading\"),v,v.xmlText()).join(\"; \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "temp_final",
          "expression": "isBlank(value)",
          "columnName": "temp_final",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_XML",
          "expression": "isBlank(value)",
          "columnName": "OCLC_XML",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_TITLE",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"title\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_TITLE using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"title\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "temp_final",
          "expression": "isBlank(value)",
          "columnName": "temp_final",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_XML",
          "expression": "isBlank(value)",
          "columnName": "OCLC_XML",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FORMAT",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"format\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FORMAT using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"format\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "temp_final",
          "expression": "isBlank(value)",
          "columnName": "temp_final",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_XML",
          "expression": "isBlank(value)",
          "columnName": "OCLC_XML",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_AUTHOR",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"author\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_AUTHOR using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"author\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "temp_final",
          "expression": "isBlank(value)",
          "columnName": "temp_final",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_XML",
          "expression": "isBlank(value)",
          "columnName": "OCLC_XML",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_HYR",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"hyr\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_HYR using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"hyr\")"
  },
  {
    "op": "core/column-removal",
    "columnName": "temp_final",
    "description": "Remove column temp_final"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GB_temp",
          "expression": "isBlank(value)",
          "columnName": "GB_temp",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "GB_temp2",
          "expression": "isBlank(value)",
          "columnName": "GB_temp2",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_temp",
    "expression": "grel:cells['GB_temp2'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_temp using expression grel:cells['GB_temp2'].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "GB_temp2",
    "description": "Remove column GB_temp2"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GB_temp3",
          "expression": "isBlank(value)",
          "columnName": "GB_temp3",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_temp",
    "expression": "grel:cells['GB_temp3'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_temp using expression grel:cells['GB_temp3'].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "GB_temp3",
    "description": "Remove column GB_temp3"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GB_temp",
          "expression": "isBlank(value)",
          "columnName": "GB_temp",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:cells['GB_temp'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:cells['GB_temp'].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "GB_temp",
    "description": "Remove column GB_temp"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GoogleBooks_JSON",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks_JSON",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "GB_LANGUAGE",
          "expression": "isBlank(value)",
          "columnName": "GB_LANGUAGE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_LANGUAGE",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['language'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_LANGUAGE using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['language'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GoogleBooks_JSON",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks_JSON",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "GB_LANGUAGE",
          "expression": "isBlank(value)",
          "columnName": "GB_LANGUAGE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "GoogleBooks_JSON",
          "expression": "value",
          "columnName": "GoogleBooks_JSON",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "{\n  \"kind\": \"books#volumes\",\n  \"totalItems\": 0\n}\n",
                "l": "{\n  \"kind\": \"books#volumes\",\n  \"totalItems\": 0\n}\n"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GoogleBooks_JSON",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks_JSON",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "GB_RATING_COUNT",
          "expression": "isBlank(value)",
          "columnName": "GB_RATING_COUNT",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_RATING_COUNT",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['ratingsCount'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_RATING_COUNT using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['ratingsCount'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GoogleBooks_JSON",
          "expression": "isBlank(value)",
          "columnName": "GoogleBooks_JSON",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "GB_AVG_RATING",
          "expression": "isBlank(value)",
          "columnName": "GB_AVG_RATING",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "averageRating",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_AVG_RATING",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['averageRating'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_AVG_RATING using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['averageRating'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "categories",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "GB_CATEGORIES",
          "expression": "isBlank(value)",
          "columnName": "GB_CATEGORIES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_CATEGORIES",
    "expression": "grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['categories'])[0].join(\"; \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_CATEGORIES using expression grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['categories'])[0].join(\"; \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "printType",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "GB_PRINT_TYPE",
          "expression": "isBlank(value)",
          "columnName": "GB_PRINT_TYPE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_PRINT_TYPE",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['printType'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_PRINT_TYPE using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['printType'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "industryIdentifiers",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "GB_IDENTIFIERS",
          "expression": "isBlank(value)",
          "columnName": "GB_IDENTIFIERS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_IDENTIFIERS",
    "expression": "grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['industryIdentifiers'])[0].join(\"; \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_IDENTIFIERS using expression grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['industryIdentifiers'])[0].join(\"; \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "textSnippet",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "GB_SNIPPET",
          "expression": "isBlank(value)",
          "columnName": "GB_SNIPPET",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_SNIPPET",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['searchInfo']),v,v['textSnippet'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_SNIPPET using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['searchInfo']),v,v['textSnippet'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "description",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "GB_DESCRIPTION",
          "expression": "isBlank(value)",
          "columnName": "GB_DESCRIPTION",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_DESCRIPTION",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['description'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_DESCRIPTION using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['description'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "publishedDate",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "GB_PUBDATE",
          "expression": "isBlank(value)",
          "columnName": "GB_PUBDATE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_PUBDATE",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['publishedDate'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_PUBDATE using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['publishedDate'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "publisher",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "GB_PUBLISHER",
          "expression": "isBlank(value)",
          "columnName": "GB_PUBLISHER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_PUBLISHER",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['publisher'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_PUBLISHER using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['publisher'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "author",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "GB_AUTHOR",
          "expression": "isBlank(value)",
          "columnName": "GB_AUTHOR",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_AUTHOR",
    "expression": "grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['authors'])[0].join(\"; \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_AUTHOR using expression grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['authors'])[0].join(\"; \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "subtitle",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_SUBTITLE",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['subtitle'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_SUBTITLE using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['subtitle'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "GoogleBooks_JSON",
          "columnName": "GoogleBooks_JSON",
          "query": "title",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "GB_TITLE",
          "expression": "isBlank(value)",
          "columnName": "GB_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_TITLE",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['title'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_TITLE using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['title'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "OCLC_XML",
          "columnName": "OCLC_XML",
          "query": "heading",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FAST_HEADINGS",
    "expression": "grel:forEach(cells['OCLC_XML'].value.parseXml().select(\"heading\"),v,v.xmlText()).join(\"; \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FAST_HEADINGS using expression grel:forEach(cells['OCLC_XML'].value.parseXml().select(\"heading\"),v,v.xmlText()).join(\"; \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "OCLC_XML",
          "columnName": "OCLC_XML",
          "query": "response",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "OCLC_RESPONSE_CODE",
          "expression": "isBlank(value)",
          "columnName": "OCLC_RESPONSE_CODE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_RESPONSE_CODE",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"classify\")[0].innerXml().find(/response code=\"(\\d+)\"/)[0].find(/\\d+/)[0].toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_RESPONSE_CODE using expression grel:cells['OCLC_XML'].value.parseXml().select(\"classify\")[0].innerXml().find(/response code=\"(\\d+)\"/)[0].find(/\\d+/)[0].toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_RESPONSE_CODE",
          "expression": "value",
          "columnName": "OCLC_RESPONSE_CODE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "100",
                "l": "100"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_RESPONSE_CODE",
          "expression": "value",
          "columnName": "OCLC_RESPONSE_CODE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "102",
                "l": "102"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "OCLC_XML",
          "columnName": "OCLC_XML",
          "query": "title",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "OCLC_TITLE",
          "expression": "isBlank(value)",
          "columnName": "OCLC_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_TITLE",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"title\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_TITLE using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"title\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "OCLC_XML",
          "columnName": "OCLC_XML",
          "query": "format",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "OCLC_FORMAT",
          "expression": "isBlank(value)",
          "columnName": "OCLC_FORMAT",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FORMAT",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"format\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FORMAT using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"format\")"
  },
  {
    "op": "core/column-removal",
    "columnName": "OCLC_HYR",
    "description": "Remove column OCLC_HYR"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "OCLC_XML",
          "columnName": "OCLC_XML",
          "query": "author",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "OCLC_AUTHOR",
          "expression": "isBlank(value)",
          "columnName": "OCLC_AUTHOR",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_AUTHOR",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"author\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_AUTHOR using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"author\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "API_TITLE",
          "expression": "isBlank(value)",
          "columnName": "API_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "SUBTITLE",
          "expression": "isBlank(value)",
          "columnName": "SUBTITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "IDENTIFIER",
          "expression": "isBlank(value)",
          "columnName": "IDENTIFIER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE",
    "expression": "grel:cells['SUBTITLE'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE using expression grel:cells['SUBTITLE'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "API_TITLE",
          "expression": "isBlank(value)",
          "columnName": "API_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "SUBTITLE",
          "expression": "isBlank(value)",
          "columnName": "SUBTITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "IDENTIFIER",
          "expression": "isBlank(value)",
          "columnName": "IDENTIFIER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "SUBTITLE",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "API_TITLE",
          "expression": "isBlank(value)",
          "columnName": "API_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "SUBTITLE",
          "expression": "isBlank(value)",
          "columnName": "SUBTITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "IDENTIFIER",
          "expression": "isBlank(value)",
          "columnName": "IDENTIFIER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE",
    "expression": "grel:cells['SUBTITLE'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE using expression grel:cells['SUBTITLE'].value"
  },
  {
    "op": "core/row-flag",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "API_TITLE",
          "expression": "isBlank(value)",
          "columnName": "API_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "SUBTITLE",
          "expression": "isBlank(value)",
          "columnName": "SUBTITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "IDENTIFIER",
          "expression": "isBlank(value)",
          "columnName": "IDENTIFIER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "flagged": true,
    "description": "Flag rows"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "API_TITLE",
          "expression": "isBlank(value)",
          "columnName": "API_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "SUBTITLE",
          "expression": "isBlank(value)",
          "columnName": "SUBTITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "IDENTIFIER",
          "expression": "isBlank(value)",
          "columnName": "IDENTIFIER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "API_TITLE",
    "expression": "grel:cells.TITLE.value.replace(/\\s/,\"%20\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column API_TITLE using expression grel:cells.TITLE.value.replace(/\\s/,\"%20\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "SUBTITLE",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SUBTITLE using expression null"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'",
    "onError": "set-to-blank",
    "newColumnName": "GB_temp",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column GB_temp at index 8 by fetching URLs based on column API_TITLE using expression grel:'https://www.googleapis.com/books/v1/volumes?q='+value+'&maxResults=1'"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "API_TITLE",
    "urlExpression": "grel:'http://classify.oclc.org/classify2/Classify?title='+value+'&detail=true&maxRecs=1'",
    "onError": "set-to-blank",
    "newColumnName": "OCLC_temp",
    "columnInsertIndex": 8,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.4.1 [437dc4d]"
      },
      {
        "name": "accept",
        "value": "*/*"
      }
    ],
    "description": "Create column OCLC_temp at index 8 by fetching URLs based on column API_TITLE using expression grel:'http://classify.oclc.org/classify2/Classify?title='+value+'&detail=true&maxRecs=1'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GoogleBooks_JSON",
    "expression": "grel:cells['GB_temp'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GoogleBooks_JSON using expression grel:cells['GB_temp'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_LANGUAGE",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['language'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_LANGUAGE using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['language'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_RATING_COUNT",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['ratingsCount'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_RATING_COUNT using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['ratingsCount'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_AVG_RATING",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['averageRating'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_AVG_RATING using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['averageRating'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_CATEGORIES",
    "expression": "grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['categories'])[0].join(\"; \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_CATEGORIES using expression grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['categories'])[0].join(\"; \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_PRINT_TYPE",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['printType'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_PRINT_TYPE using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['printType'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_IDENTIFIERS",
    "expression": "grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['industryIdentifiers'])[0].join(\"; \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_IDENTIFIERS using expression grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['industryIdentifiers'])[0].join(\"; \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_SNIPPET",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['searchInfo']),v,v['textSnippet'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_SNIPPET using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['searchInfo']),v,v['textSnippet'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_DESCRIPTION",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['description'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_DESCRIPTION using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['description'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_PUBDATE",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['publishedDate'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_PUBDATE using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['publishedDate'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_PUBLISHER",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['publisher'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_PUBLISHER using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['publisher'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_AUTHOR",
    "expression": "grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['authors'])[0].join(\"; \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_AUTHOR using expression grel:forEach((forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo'])),v,v['authors'])[0].join(\"; \")"
  },
  {
    "op": "core/column-removal",
    "columnName": "GB_temp",
    "description": "Remove column GB_temp"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_SUBTITLE",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['subtitle'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_SUBTITLE using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['subtitle'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_TITLE",
    "expression": "grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['title'])[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_TITLE using expression grel:forEach(forEach((cells['GoogleBooks_JSON'].value.parseJson()['items']).parseJson(),v,v['volumeInfo']),v,v['title'])[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "grel:cells['OCLC_temp'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression grel:cells['OCLC_temp'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_RESPONSE_CODE",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"classify\")[0].innerXml().find(/response code=\"(\\d+)\"/)[0].find(/\\d+/)[0].toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_RESPONSE_CODE using expression grel:cells['OCLC_XML'].value.parseXml().select(\"classify\")[0].innerXml().find(/response code=\"(\\d+)\"/)[0].find(/\\d+/)[0].toString()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_RESPONSE_CODE",
          "expression": "value",
          "columnName": "OCLC_RESPONSE_CODE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "102",
                "l": "102"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_XML",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_XML using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FAST_HEADINGS",
    "expression": "grel:forEach(cells['OCLC_XML'].value.parseXml().select(\"heading\"),v,v.xmlText()).join(\"; \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FAST_HEADINGS using expression grel:forEach(cells['OCLC_XML'].value.parseXml().select(\"heading\"),v,v.xmlText()).join(\"; \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_TITLE",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"title\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_TITLE using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"title\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_FORMAT",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"format\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_FORMAT using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"format\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_AUTHOR",
    "expression": "grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"author\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_AUTHOR using expression grel:cells['OCLC_XML'].value.parseXml().select(\"work\")[0].xmlAttr(\"author\")"
  },
  {
    "op": "core/column-removal",
    "columnName": "OCLC_temp",
    "description": "Remove column OCLC_temp"
  },
  {
    "op": "core/row-flag",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "flagged": false,
    "description": "Unflag rows"
  },
  {
    "op": "core/column-removal",
    "columnName": "API_TITLE",
    "description": "Remove column API_TITLE"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "UNI_ID_old",
      "UNI_ID",
      "RECORD_ID",
      "ROW_ID",
      "COURSENAME",
      "ITEM_COUNT",
      "TITLE",
      "GB_TITLE",
      "SUBTITLE",
      "GB_SUBTITLE",
      "GB_DESCRIPTION",
      "GB_SNIPPET",
      "OCLC_TITLE",
      "RESOURCE_TYPE",
      "IDENTIFIER_NAME",
      "IDENTIFIER",
      "GB_LANGUAGE",
      "GB_RATING_COUNT",
      "GB_AVG_RATING",
      "GB_CATEGORIES",
      "GB_PRINT_TYPE",
      "GB_IDENTIFIERS",
      "GB_PUBDATE",
      "GB_PUBLISHER",
      "GB_AUTHOR",
      "OCLC_FAST_HEADINGS",
      "OCLC_RESPONSE_CODE",
      "OCLC_FORMAT",
      "OCLC_AUTHOR",
      "ISBN10",
      "ISBN13",
      "ISSN",
      "DOI",
      "EDITION",
      "EDITOR",
      "PUBLISHER",
      "PUB_DATE",
      "VOLUME",
      "PAGES",
      "AUTHOR",
      "GoogleBooks_JSON",
      "OCLC_XML"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/column-removal",
    "columnName": "GB_SNIPPET",
    "description": "Remove column GB_SNIPPET"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "TITLE",
    "expression": "grel:if(value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \")==cells['GB_TITLE'].value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \"),\"fine\",\"check\")",
    "onError": "set-to-blank",
    "newColumnName": "TITLE_GB check",
    "columnInsertIndex": 7,
    "description": "Create column TITLE_GB check at index 7 based on column TITLE using expression grel:if(value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \")==cells['GB_TITLE'].value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \"),\"fine\",\"check\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "TITLE",
    "expression": "grel:if(value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \")==cells['OCLC_TITLE'].value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \"),\"fine\",\"check\")",
    "onError": "set-to-blank",
    "newColumnName": "TITLE_OCLC check",
    "columnInsertIndex": 7,
    "description": "Create column TITLE_OCLC check at index 7 based on column TITLE using expression grel:if(value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \")==cells['OCLC_TITLE'].value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \"),\"fine\",\"check\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "GB_TITLE",
    "expression": "grel:if(value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \")==cells['OCLC_TITLE'].value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \"),\"fine\",\"check\")",
    "onError": "set-to-blank",
    "newColumnName": "GB_OCLC check",
    "columnInsertIndex": 10,
    "description": "Create column GB_OCLC check at index 10 based on column GB_TITLE using expression grel:if(value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \")==cells['OCLC_TITLE'].value.toLowercase().replace(/[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\ \\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\\–]/,\" \").replace(/\\s{2}/,\" \").replace(/^the/,\"\").trim().split(\" \").slice(0,3).join(\" \"),\"fine\",\"check\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE_OCLC check",
          "expression": "value",
          "columnName": "TITLE_OCLC check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "fine",
                "l": "fine"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "TITLE_GB check",
          "expression": "value",
          "columnName": "TITLE_GB check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "fine",
                "l": "fine"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "ROW_ID",
    "expression": "grel:\"Fully verified\"",
    "onError": "set-to-blank",
    "newColumnName": "TITLE STATUS",
    "columnInsertIndex": 4,
    "description": "Create column TITLE STATUS at index 4 based on column ROW_ID using expression grel:\"Fully verified\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE_OCLC check",
          "expression": "value",
          "columnName": "TITLE_OCLC check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "fine",
                "l": "fine"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:if(value==null,\"Partly verified - OCLC\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:if(value==null,\"Partly verified - OCLC\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE_GB check",
          "expression": "value",
          "columnName": "TITLE_GB check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "fine",
                "l": "fine"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:if(value==null,\"Partly verified - Google Books\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:if(value==null,\"Partly verified - Google Books\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GB_OCLC check",
          "expression": "value",
          "columnName": "GB_OCLC check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "fine",
                "l": "fine"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:if(value==null,\"External sources consistent\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:if(value==null,\"External sources consistent\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE_OCLC check",
          "expression": "value",
          "columnName": "TITLE_OCLC check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "check",
                "l": "check"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "TITLE_GB check",
          "expression": "value",
          "columnName": "TITLE_GB check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "check",
                "l": "check"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "GB_OCLC check",
          "expression": "value",
          "columnName": "GB_OCLC check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "check",
                "l": "check"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:if(value==null,\"Unverified\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:if(value==null,\"Unverified\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE_OCLC check",
          "expression": "value",
          "columnName": "TITLE_OCLC check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "TITLE",
          "expression": "isBlank(value)",
          "columnName": "TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_OCLC check",
    "expression": "grel:\"Empty OCLC field\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_OCLC check using expression grel:\"Empty OCLC field\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE_OCLC check",
          "expression": "value",
          "columnName": "TITLE_OCLC check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "TITLE",
          "expression": "isBlank(value)",
          "columnName": "TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_OCLC check",
    "expression": "grel:\"Empty OCLC field\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_OCLC check using expression grel:\"Empty OCLC field\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE",
          "expression": "isBlank(value)",
          "columnName": "TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "OCLC_RESPONSE_CODE",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OCLC_RESPONSE_CODE using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE",
          "expression": "isBlank(value)",
          "columnName": "TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_OCLC check",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_OCLC check using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE",
          "expression": "isBlank(value)",
          "columnName": "TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:\"No data\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:\"No data\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE",
          "expression": "isBlank(value)",
          "columnName": "TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "GB_TITLE",
          "expression": "isBlank(value)",
          "columnName": "GB_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_GB check",
    "expression": "grel:\"No GB title data\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_GB check using expression grel:\"No GB title data\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE",
          "expression": "isBlank(value)",
          "columnName": "TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "OCLC_TITLE",
          "expression": "isBlank(value)",
          "columnName": "OCLC_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_OCLC check",
    "expression": "grel:\"No OCLC title data\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_OCLC check using expression grel:\"No OCLC title data\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_TITLE",
          "expression": "isBlank(value)",
          "columnName": "OCLC_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "GB_TITLE",
          "expression": "isBlank(value)",
          "columnName": "GB_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_OCLC check",
    "expression": "grel:\"No title data\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_OCLC check using expression grel:\"No title data\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OCLC_TITLE",
          "expression": "isBlank(value)",
          "columnName": "OCLC_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_OCLC check",
    "expression": "grel:if(value==null,\"No OCLC data\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_OCLC check using expression grel:if(value==null,\"No OCLC data\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GB_TITLE",
          "expression": "isBlank(value)",
          "columnName": "GB_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_OCLC check",
    "expression": "grel:if(value==null,\"No GB data\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_OCLC check using expression grel:if(value==null,\"No GB data\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GB_TITLE",
          "expression": "isBlank(value)",
          "columnName": "GB_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_OCLC check",
    "expression": "value.replace(\" title\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_OCLC check using expression value.replace(\" title\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "GB_TITLE",
          "expression": "isBlank(value)",
          "columnName": "GB_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE_GB check",
    "expression": "value.replace(\" title\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE_GB check using expression value.replace(\" title\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE_GB check",
          "expression": "value",
          "columnName": "TITLE_GB check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "GB_OCLC check",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column GB_OCLC check using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unverified",
                "l": "Unverified"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:\"Partly verified - external sources discordant\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:\"Partly verified - external sources discordant\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "External sources consistent",
                "l": "External sources consistent"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:\"Partly verified - external sources accordant\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:\"Partly verified - external sources accordant\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "GB_OCLC check",
          "expression": "value",
          "columnName": "GB_OCLC check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "No title data",
                "l": "No title data"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:if(value==null,\"Unable to verify - title data missing\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:if(value==null,\"Unable to verify - title data missing\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "TITLE_GB check",
          "expression": "value",
          "columnName": "TITLE_GB check",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "No GB data",
                "l": "No GB data"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:if(value==null,\"Unable to verify - no Google Books missing and OCLC data discordant\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:if(value==null,\"Unable to verify - no Google Books missing and OCLC data discordant\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:if(value==null,\"Unable to verify - no OCLC data and Google Books data discordant\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:if(value==null,\"Unable to verify - no OCLC data and Google Books data discordant\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no Google Books missing and OCLC data discordant",
                "l": "Unable to verify - no Google Books missing and OCLC data discordant"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:if(value==null,\"Unable to verify - no Google Books data and OCLC data discordant\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:if(value==null,\"Unable to verify - no Google Books data and OCLC data discordant\",value)"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "UNI_ID_old",
      "UNI_ID",
      "RECORD_ID",
      "ROW_ID",
      "TITLE STATUS",
      "COURSENAME",
      "RESOURCE_TYPE",
      "GB_TITLE",
      "GB_SUBTITLE",
      "GB_LANGUAGE",
      "GB_RATING_COUNT",
      "GB_AVG_RATING",
      "GB_CATEGORIES",
      "GB_PRINT_TYPE",
      "GB_IDENTIFIERS",
      "GB_PUBDATE",
      "GB_PUBLISHER",
      "GB_AUTHOR",
      "GB_DESCRIPTION",
      "OCLC_TITLE",
      "OCLC_FAST_HEADINGS",
      "OCLC_RESPONSE_CODE",
      "OCLC_FORMAT",
      "OCLC_AUTHOR",
      "TITLE",
      "SUBTITLE",
      "ITEM_COUNT",
      "IDENTIFIER_NAME",
      "IDENTIFIER",
      "ISBN10",
      "ISBN13",
      "ISSN",
      "DOI",
      "EDITION",
      "EDITOR",
      "PUBLISHER",
      "PUB_DATE",
      "VOLUME",
      "PAGES",
      "AUTHOR",
      "GoogleBooks_JSON",
      "OCLC_XML"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_TITLE",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_TITLE",
    "columnInsertIndex": 8,
    "description": "Create column _TITLE at index 8 based on column GB_TITLE using expression grel:value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_SUBTITLE",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_SUBTITLE",
    "columnInsertIndex": 10,
    "description": "Create column _SUBTITLE at index 10 based on column GB_SUBTITLE using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no Google Books missing and OCLC data discordant",
                "l": "Unable to verify - no Google Books missing and OCLC data discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources discordant",
                "l": "Partly verified - external sources discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources accordant",
                "l": "Partly verified - external sources accordant"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no OCLC data and Google Books data discordant",
                "l": "Unable to verify - no OCLC data and Google Books data discordant"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "grel:cells.TITLE.value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression grel:cells.TITLE.value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no Google Books missing and OCLC data discordant",
                "l": "Unable to verify - no Google Books missing and OCLC data discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources discordant",
                "l": "Partly verified - external sources discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources accordant",
                "l": "Partly verified - external sources accordant"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no OCLC data and Google Books data discordant",
                "l": "Unable to verify - no OCLC data and Google Books data discordant"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_SUBTITLE",
    "expression": "grel:cells.SUBTITLE.value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _SUBTITLE using expression grel:cells.SUBTITLE.value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Partly verified - OCLC",
                "l": "Partly verified - OCLC"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "grel:cells['OCLC_TITLE'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression grel:cells['OCLC_TITLE'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - title data missing",
                "l": "Unable to verify - title data missing"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "TITLE STATUS",
    "expression": "grel:\"Unable to verify - no title data found\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TITLE STATUS using expression grel:\"Unable to verify - no title data found\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no title data found",
                "l": "Unable to verify - no title data found"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "grel:cells.TITLE.value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression grel:cells.TITLE.value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no title data found",
                "l": "Unable to verify - no title data found"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_SUBTITLE",
    "expression": "grel:cells.SUBTITLE.value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _SUBTITLE using expression grel:cells.SUBTITLE.value"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "RESOURCE_TYPE",
    "newColumnName": "FORMAT",
    "description": "Rename column RESOURCE_TYPE to FORMAT"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "UNI_ID_old",
      "UNI_ID",
      "RECORD_ID",
      "ROW_ID",
      "TITLE STATUS",
      "COURSENAME",
      "_TITLE",
      "_SUBTITLE",
      "GB_TITLE",
      "GB_SUBTITLE",
      "GB_LANGUAGE",
      "GB_RATING_COUNT",
      "GB_AVG_RATING",
      "GB_CATEGORIES",
      "GB_PRINT_TYPE",
      "GB_IDENTIFIERS",
      "GB_PUBDATE",
      "GB_PUBLISHER",
      "GB_AUTHOR",
      "GB_DESCRIPTION",
      "OCLC_TITLE",
      "OCLC_FAST_HEADINGS",
      "OCLC_RESPONSE_CODE",
      "OCLC_FORMAT",
      "OCLC_AUTHOR",
      "TITLE",
      "SUBTITLE",
      "ITEM_COUNT",
      "FORMAT",
      "IDENTIFIER_NAME",
      "IDENTIFIER",
      "ISBN10",
      "ISBN13",
      "ISSN",
      "DOI",
      "EDITION",
      "EDITOR",
      "PUBLISHER",
      "PUB_DATE",
      "VOLUME",
      "PAGES",
      "AUTHOR",
      "GoogleBooks_JSON",
      "OCLC_XML"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - OCLC",
                "l": "Partly verified - OCLC"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "OCLC_FORMAT",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_FORMAT",
    "columnInsertIndex": 24,
    "description": "Create column _FORMAT at index 24 based on column OCLC_FORMAT using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no title data found",
                "l": "Unable to verify - no title data found"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no Google Books missing and OCLC data discordant",
                "l": "Unable to verify - no Google Books missing and OCLC data discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources discordant",
                "l": "Partly verified - external sources discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources accordant",
                "l": "Partly verified - external sources accordant"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no OCLC data and Google Books data discordant",
                "l": "Unable to verify - no OCLC data and Google Books data discordant"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_FORMAT",
    "expression": "grel:cells['FORMAT'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _FORMAT using expression grel:cells['FORMAT'].value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_AUTHOR",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_AUTHOR",
    "columnInsertIndex": 19,
    "description": "Create column _AUTHOR at index 19 based on column GB_AUTHOR using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Partly verified - OCLC",
                "l": "Partly verified - OCLC"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_AUTHOR",
    "expression": "grel:cells['OCLC_AUTHOR'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _AUTHOR using expression grel:cells['OCLC_AUTHOR'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no title data found",
                "l": "Unable to verify - no title data found"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no Google Books missing and OCLC data discordant",
                "l": "Unable to verify - no Google Books missing and OCLC data discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources discordant",
                "l": "Partly verified - external sources discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources accordant",
                "l": "Partly verified - external sources accordant"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no OCLC data and Google Books data discordant",
                "l": "Unable to verify - no OCLC data and Google Books data discordant"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_AUTHOR",
    "expression": "grel:cells['AUTHOR'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _AUTHOR using expression grel:cells['AUTHOR'].value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_PUBDATE",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_PUB_DATE",
    "columnInsertIndex": 17,
    "description": "Create column _PUB_DATE at index 17 based on column GB_PUBDATE using expression grel:value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_PUBLISHER",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_PUBLISHER",
    "columnInsertIndex": 19,
    "description": "Create column _PUBLISHER at index 19 based on column GB_PUBLISHER using expression grel:value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_IDENTIFIERS",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_IDENTIFIERS",
    "columnInsertIndex": 16,
    "description": "Create column _IDENTIFIERS at index 16 based on column GB_IDENTIFIERS using expression grel:value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_CATEGORIES",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_TOPIC",
    "columnInsertIndex": 14,
    "description": "Create column _TOPIC at index 14 based on column GB_CATEGORIES using expression grel:value"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "_IDENTIFIERS",
    "newColumnName": "_IDENTIFIER",
    "description": "Rename column _IDENTIFIERS to _IDENTIFIER"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_AVG_RATING",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_AVG_RATING",
    "columnInsertIndex": 13,
    "description": "Create column _AVG_RATING at index 13 based on column GB_AVG_RATING using expression grel:value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_RATING_COUNT",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_NUM_RATINGS",
    "columnInsertIndex": 12,
    "description": "Create column _NUM_RATINGS at index 12 based on column GB_RATING_COUNT using expression grel:value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_LANGUAGE",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_LANGUAGE",
    "columnInsertIndex": 11,
    "description": "Create column _LANGUAGE at index 11 based on column GB_LANGUAGE using expression grel:value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "GB_DESCRIPTION",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_DESCRIPTION",
    "columnInsertIndex": 28,
    "description": "Create column _DESCRIPTION at index 28 based on column GB_DESCRIPTION using expression grel:value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Fully verified",
                "l": "Fully verified"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no title data found",
                "l": "Unable to verify - no title data found"
              }
            },
            {
              "v": {
                "v": "Partly verified - Google Books",
                "l": "Partly verified - Google Books"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no Google Books missing and OCLC data discordant",
                "l": "Unable to verify - no Google Books missing and OCLC data discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - OCLC",
                "l": "Partly verified - OCLC"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources discordant",
                "l": "Partly verified - external sources discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources accordant",
                "l": "Partly verified - external sources accordant"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no OCLC data and Google Books data discordant",
                "l": "Unable to verify - no OCLC data and Google Books data discordant"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "PAGES",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_PAGES",
    "columnInsertIndex": 51,
    "description": "Create column _PAGES at index 51 based on column PAGES using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Partly verified - OCLC",
                "l": "Partly verified - OCLC"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TOPIC",
    "expression": "grel:cells['OCLC_FAST_HEADINGS'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TOPIC using expression grel:cells['OCLC_FAST_HEADINGS'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no title data found",
                "l": "Unable to verify - no title data found"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no Google Books missing and OCLC data discordant",
                "l": "Unable to verify - no Google Books missing and OCLC data discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - OCLC",
                "l": "Partly verified - OCLC"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources discordant",
                "l": "Partly verified - external sources discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources accordant",
                "l": "Partly verified - external sources accordant"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no OCLC data and Google Books data discordant",
                "l": "Unable to verify - no OCLC data and Google Books data discordant"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PUB_DATE",
    "expression": "grel:cells['PUB_DATE'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PUB_DATE using expression grel:cells['PUB_DATE'].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no title data found",
                "l": "Unable to verify - no title data found"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no Google Books missing and OCLC data discordant",
                "l": "Unable to verify - no Google Books missing and OCLC data discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - OCLC",
                "l": "Partly verified - OCLC"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources discordant",
                "l": "Partly verified - external sources discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources accordant",
                "l": "Partly verified - external sources accordant"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no OCLC data and Google Books data discordant",
                "l": "Unable to verify - no OCLC data and Google Books data discordant"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PUBLISHER",
    "expression": "grel:cells['PUBLISHER'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PUBLISHER using expression grel:cells['PUBLISHER'].value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no title data found",
                "l": "Unable to verify - no title data found"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no Google Books missing and OCLC data discordant",
                "l": "Unable to verify - no Google Books missing and OCLC data discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - OCLC",
                "l": "Partly verified - OCLC"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources discordant",
                "l": "Partly verified - external sources discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources accordant",
                "l": "Partly verified - external sources accordant"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no OCLC data and Google Books data discordant",
                "l": "Unable to verify - no OCLC data and Google Books data discordant"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "IDENTIFIER_NAME",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "_IDENTIFIER_NAME",
    "columnInsertIndex": 40,
    "description": "Create column _IDENTIFIER_NAME at index 40 based on column IDENTIFIER_NAME using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "TITLE STATUS",
          "expression": "value",
          "columnName": "TITLE STATUS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Unable to verify - no title data found",
                "l": "Unable to verify - no title data found"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no Google Books missing and OCLC data discordant",
                "l": "Unable to verify - no Google Books missing and OCLC data discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - OCLC",
                "l": "Partly verified - OCLC"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources discordant",
                "l": "Partly verified - external sources discordant"
              }
            },
            {
              "v": {
                "v": "Partly verified - external sources accordant",
                "l": "Partly verified - external sources accordant"
              }
            },
            {
              "v": {
                "v": "Unable to verify - no OCLC data and Google Books data discordant",
                "l": "Unable to verify - no OCLC data and Google Books data discordant"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "grel:cells['IDENTIFIER'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression grel:cells['IDENTIFIER'].value"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "UNI_ID_old",
      "UNI_ID",
      "RECORD_ID",
      "ROW_ID",
      "TITLE STATUS",
      "COURSENAME",
      "_TITLE",
      "_SUBTITLE",
      "_FORMAT",
      "_AUTHOR",
      "_PUB_DATE",
      "_PUBLISHER",
      "_IDENTIFIER_NAME",
      "_IDENTIFIER",
      "_TOPIC",
      "_LANGUAGE",
      "_DESCRIPTION",
      "_PAGES",
      "_AVG_RATING",
      "_NUM_RATINGS",
      "GB_TITLE",
      "GB_SUBTITLE",
      "GB_LANGUAGE",
      "GB_RATING_COUNT",
      "GB_AVG_RATING",
      "GB_CATEGORIES",
      "GB_PRINT_TYPE",
      "GB_IDENTIFIERS",
      "GB_PUBDATE",
      "GB_PUBLISHER",
      "GB_AUTHOR",
      "GB_DESCRIPTION",
      "OCLC_TITLE",
      "OCLC_FAST_HEADINGS",
      "OCLC_RESPONSE_CODE",
      "OCLC_FORMAT",
      "OCLC_AUTHOR",
      "TITLE",
      "SUBTITLE",
      "ITEM_COUNT",
      "FORMAT",
      "IDENTIFIER_NAME",
      "IDENTIFIER",
      "ISBN10",
      "ISBN13",
      "ISSN",
      "DOI",
      "EDITION",
      "EDITOR",
      "PUBLISHER",
      "PUB_DATE",
      "VOLUME",
      "PAGES",
      "AUTHOR",
      "GoogleBooks_JSON",
      "OCLC_XML"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_SUBTITLE",
          "expression": "isEmptyString(value)",
          "columnName": "_SUBTITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_SUBTITLE",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _SUBTITLE using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_AUTHOR",
          "expression": "isEmptyString(value)",
          "columnName": "_AUTHOR",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_AUTHOR",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _AUTHOR using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_PUB_DATE",
          "expression": "isEmptyString(value)",
          "columnName": "_PUB_DATE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PUB_DATE",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PUB_DATE using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_PUBLISHER",
          "expression": "isEmptyString(value)",
          "columnName": "_PUBLISHER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PUBLISHER",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PUBLISHER using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_IDENTIFIER",
          "expression": "isEmptyString(value)",
          "columnName": "_IDENTIFIER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_TOPIC",
          "expression": "isEmptyString(value)",
          "columnName": "_TOPIC",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TOPIC",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TOPIC using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_PAGES",
          "expression": "isEmptyString(value)",
          "columnName": "_PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression null"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "_IDENTIFIER",
    "newColumnName": "_IDENTIFIER_",
    "description": "Rename column _IDENTIFIER to _IDENTIFIER_"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_IDENTIFIER_NAME",
          "expression": "isBlank(value)",
          "columnName": "_IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "_IDENTIFIER_NAME",
    "expression": "grel:'{\"type\":\"'+cells['_IDENTIFIER_NAME'].value+'\",\"identifier\":\"'+cells['_IDENTIFIER_'].value+'\"}'",
    "onError": "set-to-blank",
    "newColumnName": "_IDENTIFIER",
    "columnInsertIndex": 13,
    "description": "Create column _IDENTIFIER at index 13 based on column _IDENTIFIER_NAME using expression grel:'{\"type\":\"'+cells['_IDENTIFIER_NAME'].value+'\",\"identifier\":\"'+cells['_IDENTIFIER_'].value+'\"}'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_IDENTIFIER_NAME",
          "expression": "isBlank(value)",
          "columnName": "_IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "grel:cells['_IDENTIFIER_'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression grel:cells['_IDENTIFIER_'].value"
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "_IDENTIFIER",
    "keyColumnName": "UNI_ID_old",
    "separator": "%",
    "description": "Join multi-valued cells in column _IDENTIFIER"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_IDENTIFIER",
          "columnName": "_IDENTIFIER",
          "query": "ISBN",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "value.replace(\"ISBN1\",\"ISBN_1\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression value.replace(\"ISBN1\",\"ISBN_1\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RECORD_ID",
          "expression": "facetCount(value, 'value', 'RECORD_ID') > 1",
          "columnName": "RECORD_ID",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "grel:if(value.partition(\"%\")[0]==value.partition(\"%\")[2],value.partition(\"%\")[0],value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression grel:if(value.partition(\"%\")[0]==value.partition(\"%\")[2],value.partition(\"%\")[0],value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RECORD_ID",
          "expression": "facetCount(value, 'value', 'RECORD_ID') > 1",
          "columnName": "RECORD_ID",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "grel:if(value.partition(\"%\")[0]==value.rpartition(\"%\")[2],value.rpartition(\"%\")[0],value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression grel:if(value.partition(\"%\")[0]==value.rpartition(\"%\")[2],value.rpartition(\"%\")[0],value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RECORD_ID",
          "expression": "facetCount(value, 'value', 'RECORD_ID') > 1",
          "columnName": "RECORD_ID",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "_IDENTIFIER",
          "expression": "isBlank(value)",
          "columnName": "_IDENTIFIER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "grel:if(value.partition(\";\")[0]==value.rpartition(\"%\")[2],value.partition(\"%\")[0],value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression grel:if(value.partition(\";\")[0]==value.rpartition(\"%\")[2],value.partition(\"%\")[0],value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "RECORD_ID",
          "expression": "facetCount(value, 'value', 'RECORD_ID') > 1",
          "columnName": "RECORD_ID",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "_IDENTIFIER",
          "expression": "isBlank(value)",
          "columnName": "_IDENTIFIER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "grel:if(value.split(/[;%]/)[1].trim()==value.split(/[%;]/)[2].trim(),value.partition(\"%\")[0],value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression grel:if(value.split(/[;%]/)[1].trim()==value.split(/[%;]/)[2].trim(),value.partition(\"%\")[0],value)"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_IDENTIFIER",
          "columnName": "_IDENTIFIER",
          "query": "10.1",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "_IDENTIFIER_NAME",
          "expression": "isBlank(value)",
          "columnName": "_IDENTIFIER_NAME",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "_IDENTIFIER",
          "expression": "value.length()",
          "columnName": "_IDENTIFIER",
          "from": 100,
          "to": 1100,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "value",
    "edits": [
      {
        "from": [
          "{\"type\":\"ISSN\",\"identifier\":\"1210-8812\"}%10.1515/mgr-2015-0006%{\"type\":\"ISSN\",\"identifier\":\"2199-6202\"}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "{\"type\":\"ISSN\",\"identifier\":\"1210-8812\"}; {\"type\":\"DOI\",\"identifier\":\"10.1515/mgr-2015-0006\"}; {\"type\":\"ISSN\",\"identifier\":\"2199-6202\"}"
      }
    ],
    "description": "Mass edit cells in column _IDENTIFIER"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_IDENTIFIER",
          "columnName": "_IDENTIFIER",
          "query": "%978",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "range",
          "name": "_IDENTIFIER",
          "expression": "value.length()",
          "columnName": "_IDENTIFIER",
          "from": 0,
          "to": 100,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "grel:value.split(\"%\").join(\"; {\\\"type\\\":\\\"ISBN_13\\\",\\\"identifier\\\":\\\"\").split(/10.1/).join(\"\\\"; {\\\"type\\\":\\\"DOI\\\",\\\"identifier\\\":\\\"10.1\")+(\"\\\"}\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression grel:value.split(\"%\").join(\"; {\\\"type\\\":\\\"ISBN_13\\\",\\\"identifier\\\":\\\"\").split(/10.1/).join(\"\\\"; {\\\"type\\\":\\\"DOI\\\",\\\"identifier\\\":\\\"10.1\")+(\"\\\"}\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_IDENTIFIER",
          "columnName": "_IDENTIFIER",
          "query": "%10.1",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "range",
          "name": "_IDENTIFIER",
          "expression": "value.length()",
          "columnName": "_IDENTIFIER",
          "from": 0,
          "to": 100,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "grel:value.split(/%10.1/).join(\"; {\\\"type\\\":\\\"DOI\\\",\\\"identifier\\\":\\\"10.1\")+(\"\\\"}\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression grel:value.split(/%10.1/).join(\"; {\\\"type\\\":\\\"DOI\\\",\\\"identifier\\\":\\\"10.1\")+(\"\\\"}\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_IDENTIFIER",
          "columnName": "_IDENTIFIER",
          "query": "%",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "grel:value.replace(\"%\", \"; \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression grel:value.replace(\"%\", \"; \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "RECORD_ID",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column RECORD_ID using expression value.toNumber()"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "UNI_ID_old",
          "expression": "isBlank(value)",
          "columnName": "UNI_ID_old",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/column-removal",
    "columnName": "UNI_ID_old",
    "description": "Remove column UNI_ID_old"
  },
  {
    "op": "core/column-removal",
    "columnName": "_IDENTIFIER_",
    "description": "Remove column _IDENTIFIER_"
  },
  {
    "op": "core/column-removal",
    "columnName": "_IDENTIFIER_NAME",
    "description": "Remove column _IDENTIFIER_NAME"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "ROW_ID",
      "UNI_ID",
      "TITLE STATUS",
      "COURSENAME",
      "_TITLE",
      "_SUBTITLE",
      "_FORMAT",
      "_AUTHOR",
      "_PUB_DATE",
      "_PUBLISHER",
      "_IDENTIFIER",
      "_TOPIC",
      "_LANGUAGE",
      "_DESCRIPTION",
      "_PAGES",
      "_AVG_RATING",
      "_NUM_RATINGS",
      "GB_TITLE",
      "GB_SUBTITLE",
      "GB_LANGUAGE",
      "GB_RATING_COUNT",
      "GB_AVG_RATING",
      "GB_CATEGORIES",
      "GB_PRINT_TYPE",
      "GB_IDENTIFIERS",
      "GB_PUBDATE",
      "GB_PUBLISHER",
      "GB_AUTHOR",
      "GB_DESCRIPTION",
      "OCLC_TITLE",
      "OCLC_FAST_HEADINGS",
      "OCLC_RESPONSE_CODE",
      "OCLC_FORMAT",
      "OCLC_AUTHOR",
      "RECORD_ID",
      "TITLE",
      "SUBTITLE",
      "ITEM_COUNT",
      "FORMAT",
      "IDENTIFIER_NAME",
      "IDENTIFIER",
      "ISBN10",
      "ISBN13",
      "ISSN",
      "DOI",
      "EDITION",
      "EDITOR",
      "PUBLISHER",
      "PUB_DATE",
      "VOLUME",
      "PAGES",
      "AUTHOR",
      "GoogleBooks_JSON",
      "OCLC_XML"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "TITLE STATUS",
    "newColumnName": "TITLE_STATUS",
    "description": "Rename column TITLE STATUS to TITLE_STATUS"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "COURSENAME",
    "newColumnName": "COURSE_NAME",
    "description": "Rename column COURSENAME to COURSE_NAME"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_SUBTITLE",
          "expression": "isBlank(value)",
          "columnName": "_SUBTITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_SUBTITLE",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _SUBTITLE using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_TITLE",
          "expression": "isBlank(value)",
          "columnName": "_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_FORMAT",
          "expression": "isBlank(value)",
          "columnName": "_FORMAT",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_FORMAT",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _FORMAT using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_AUTHOR",
          "expression": "isBlank(value)",
          "columnName": "_AUTHOR",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_AUTHOR",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _AUTHOR using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_PUB_DATE",
          "expression": "isBlank(value)",
          "columnName": "_PUB_DATE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PUB_DATE",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PUB_DATE using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_PUBLISHER",
          "expression": "isBlank(value)",
          "columnName": "_PUBLISHER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PUBLISHER",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PUBLISHER using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_IDENTIFIER",
          "expression": "isBlank(value)",
          "columnName": "_IDENTIFIER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_TOPIC",
          "expression": "isBlank(value)",
          "columnName": "_TOPIC",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TOPIC",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TOPIC using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_LANGUAGE",
          "expression": "isBlank(value)",
          "columnName": "_LANGUAGE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_LANGUAGE",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _LANGUAGE using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_DESCRIPTION",
          "expression": "isBlank(value)",
          "columnName": "_DESCRIPTION",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_DESCRIPTION",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _DESCRIPTION using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_PAGES",
          "expression": "isBlank(value)",
          "columnName": "_PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_AVG_RATING",
          "expression": "isBlank(value)",
          "columnName": "_AVG_RATING",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_AVG_RATING",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _AVG_RATING using expression \"\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_NUM_RATINGS",
          "expression": "isBlank(value)",
          "columnName": "_NUM_RATINGS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_NUM_RATINGS",
    "expression": "\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _NUM_RATINGS using expression \"\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "COURSE_NAME",
    "expression": "grel:cells['COURSE_NAME'].value + \"##\" + cells['_TITLE'].value + \"##\" + cells['_SUBTITLE'].value + \"##\" + cells['_FORMAT'].value + \"##\" + cells['_AUTHOR'].value + \"##\" + cells['_PUB_DATE'].value + \"##\" + cells['_PUBLISHER'].value + \"##\" + cells['_IDENTIFIER'].value + \"##\" + cells['_TOPIC'].value + \"##\" + cells['_LANGUAGE'].value + \"##\" + cells['_DESCRIPTION'].value + \"##\" + cells['_PAGES'].value + \"##\" + cells['_AVG_RATING'].value + \"##\" + cells['_NUM_RATINGS'].value",
    "onError": "set-to-blank",
    "newColumnName": "dupStr",
    "columnInsertIndex": 4,
    "description": "Create column dupStr at index 4 based on column COURSE_NAME using expression grel:cells['COURSE_NAME'].value + \"##\" + cells['_TITLE'].value + \"##\" + cells['_SUBTITLE'].value + \"##\" + cells['_FORMAT'].value + \"##\" + cells['_AUTHOR'].value + \"##\" + cells['_PUB_DATE'].value + \"##\" + cells['_PUBLISHER'].value + \"##\" + cells['_IDENTIFIER'].value + \"##\" + cells['_TOPIC'].value + \"##\" + cells['_LANGUAGE'].value + \"##\" + cells['_DESCRIPTION'].value + \"##\" + cells['_PAGES'].value + \"##\" + cells['_AVG_RATING'].value + \"##\" + cells['_NUM_RATINGS'].value"
  },
  {
    "op": "core/row-reorder",
    "mode": "row-based",
    "sorting": {
      "criteria": [
        {
          "valueType": "string",
          "column": "dupStr",
          "blankPosition": 2,
          "errorPosition": 1,
          "reverse": false,
          "caseSensitive": false
        }
      ]
    },
    "description": "Reorder rows"
  },
  {
    "op": "core/blank-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dupStr",
    "description": "Blank down cells in column dupStr"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "dupStr",
          "expression": "isBlank(value)",
          "columnName": "dupStr",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-reorder",
    "mode": "row-based",
    "sorting": {
      "criteria": [
        {
          "valueType": "number",
          "column": "ROW_ID",
          "blankPosition": 2,
          "errorPosition": 1,
          "reverse": false
        }
      ]
    },
    "description": "Reorder rows"
  },
  {
    "op": "core/column-removal",
    "columnName": "dupStr",
    "description": "Remove column dupStr"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ROW_ID",
    "newColumnName": "OLD_ROW_ID",
    "description": "Rename column ROW_ID to OLD_ROW_ID"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "OLD_ROW_ID",
      "UNI_ID",
      "TITLE_STATUS",
      "COURSE_NAME",
      "_TITLE",
      "_SUBTITLE",
      "_FORMAT",
      "_AUTHOR",
      "_PUB_DATE",
      "_PUBLISHER",
      "_IDENTIFIER",
      "_TOPIC",
      "_LANGUAGE",
      "_DESCRIPTION",
      "_PAGES",
      "_AVG_RATING",
      "_NUM_RATINGS"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_TITLE",
          "expression": "isBlank(value)",
          "columnName": "_TITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_SUBTITLE",
          "expression": "isBlank(value)",
          "columnName": "_SUBTITLE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_SUBTITLE",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _SUBTITLE using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_FORMAT",
          "expression": "isBlank(value)",
          "columnName": "_FORMAT",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_FORMAT",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _FORMAT using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_AUTHOR",
          "expression": "isBlank(value)",
          "columnName": "_AUTHOR",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_AUTHOR",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _AUTHOR using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_PUB_DATE",
          "expression": "isBlank(value)",
          "columnName": "_PUB_DATE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PUB_DATE",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PUB_DATE using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_PUBLISHER",
          "expression": "isBlank(value)",
          "columnName": "_PUBLISHER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PUBLISHER",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PUBLISHER using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_IDENTIFIER",
          "expression": "isBlank(value)",
          "columnName": "_IDENTIFIER",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_IDENTIFIER",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _IDENTIFIER using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_TOPIC",
          "expression": "isBlank(value)",
          "columnName": "_TOPIC",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TOPIC",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TOPIC using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_LANGUAGE",
          "expression": "isBlank(value)",
          "columnName": "_LANGUAGE",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_LANGUAGE",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _LANGUAGE using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_DESCRIPTION",
          "expression": "isBlank(value)",
          "columnName": "_DESCRIPTION",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_DESCRIPTION",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _DESCRIPTION using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_PAGES",
          "expression": "isBlank(value)",
          "columnName": "_PAGES",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_AVG_RATING",
          "expression": "isBlank(value)",
          "columnName": "_AVG_RATING",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_AVG_RATING",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _AVG_RATING using expression null"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_NUM_RATINGS",
          "expression": "isBlank(value)",
          "columnName": "_NUM_RATINGS",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_NUM_RATINGS",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _NUM_RATINGS using expression null"
  },
  {
    "op": "core/column-removal",
    "columnName": "OLD_ROW_ID",
    "description": "Remove column OLD_ROW_ID"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_TITLE",
          "columnName": "_TITLE",
          "query": ".page",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "_SUBTITLE",
          "columnName": "_SUBTITLE",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "grel:if(value==null,cells['_TITLE'].value.replace(/.+?(?=3.1)/,''),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression grel:if(value==null,cells['_TITLE'].value.replace(/.+?(?=3.1)/,''),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_TITLE",
          "columnName": "_TITLE",
          "query": ".page",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "_SUBTITLE",
          "columnName": "_SUBTITLE",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "grel:value.replace(/\\.pages.*/,'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression grel:value.replace(/\\.pages.*/,'')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_TITLE",
          "columnName": "_TITLE",
          "query": ". chap",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "_SUBTITLE",
          "columnName": "_SUBTITLE",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "grel:value.replace(/\\. chapter.*/,'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression grel:value.replace(/\\. chapter.*/,'')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_TITLE",
          "columnName": "_TITLE",
          "query": ". page",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "_SUBTITLE",
          "columnName": "_SUBTITLE",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "grel:if(value==null,cells['_TITLE'].value.replace(/.+?(?=pages)/,''),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression grel:if(value==null,cells['_TITLE'].value.replace(/.+?(?=pages)/,''),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_TITLE",
          "columnName": "_TITLE",
          "query": ". page",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "_SUBTITLE",
          "columnName": "_SUBTITLE",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "grel:value.replace(\"pages \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression grel:value.replace(\"pages \",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_TITLE",
          "columnName": "_TITLE",
          "query": ". page",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "_SUBTITLE",
          "columnName": "_SUBTITLE",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "grel:value.replace(/\\. pages.*/,'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression grel:value.replace(/\\. pages.*/,'')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_TITLE",
          "columnName": "_TITLE",
          "query": ". page",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "_SUBTITLE",
          "columnName": "_SUBTITLE",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "grel:value.replace(/.+?(?=page)/,''),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression grel:value.replace(/.+?(?=page)/,''),value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_TITLE",
          "columnName": "_TITLE",
          "query": ". page",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "_SUBTITLE",
          "columnName": "_SUBTITLE",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "list",
          "name": "Flagged Rows",
          "expression": "row.flagged",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "grel:value.replace(/-\\d+/,'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression grel:value.replace(/-\\d+/,'')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "_TITLE",
          "columnName": "_TITLE",
          "query": ". page",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "_SUBTITLE",
          "columnName": "_SUBTITLE",
          "query": "",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "grel:value.replace('page ','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression grel:value.replace('page ','')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "grel:if(cells['_SUBTITLE'].value==null,value,cells['_TITLE'].value + \" : \" + cells['_SUBTITLE'].value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression grel:if(cells['_SUBTITLE'].value==null,value,cells['_TITLE'].value + \" : \" + cells['_SUBTITLE'].value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "_PAGES",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _PAGES using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "_TITLE",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column _TITLE using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/column-removal",
    "columnName": "_SUBTITLE",
    "description": "Remove column _SUBTITLE"
  }
]